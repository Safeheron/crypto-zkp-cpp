// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zkp.proto

#include "zkp.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace safeheron {
namespace proto {
PROTOBUF_CONSTEXPR DLogProof::DLogProof(
    ::_pbi::ConstantInitialized)
  : res_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pk_(nullptr)
  , g_r_(nullptr){}
struct DLogProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DLogProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DLogProofDefaultTypeInternal() {}
  union {
    DLogProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DLogProofDefaultTypeInternal _DLogProof_default_instance_;
PROTOBUF_CONSTEXPR DLogProof_V2::DLogProof_V2(
    ::_pbi::ConstantInitialized)
  : z_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , a_(nullptr){}
struct DLogProof_V2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR DLogProof_V2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DLogProof_V2DefaultTypeInternal() {}
  union {
    DLogProof_V2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DLogProof_V2DefaultTypeInternal _DLogProof_V2_default_instance_;
PROTOBUF_CONSTEXPR HegProof::HegProof(
    ::_pbi::ConstantInitialized)
  : z1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , t_(nullptr)
  , a3_(nullptr){}
struct HegProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HegProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HegProofDefaultTypeInternal() {}
  union {
    HegProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HegProofDefaultTypeInternal _HegProof_default_instance_;
PROTOBUF_CONSTEXPR HEGProof_V2::HEGProof_V2(
    ::_pbi::ConstantInitialized)
  : t_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , u_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , alpha_(nullptr)
  , beta_(nullptr){}
struct HEGProof_V2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR HEGProof_V2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HEGProof_V2DefaultTypeInternal() {}
  union {
    HEGProof_V2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HEGProof_V2DefaultTypeInternal _HEGProof_V2_default_instance_;
PROTOBUF_CONSTEXPR LinearCombinationProof::LinearCombinationProof(
    ::_pbi::ConstantInitialized)
  : t_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , u_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , alpha_(nullptr){}
struct LinearCombinationProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinearCombinationProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinearCombinationProofDefaultTypeInternal() {}
  union {
    LinearCombinationProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinearCombinationProofDefaultTypeInternal _LinearCombinationProof_default_instance_;
PROTOBUF_CONSTEXPR HEGProof_V3::HEGProof_V3(
    ::_pbi::ConstantInitialized)
  : t_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , u_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , alpha_(nullptr)
  , beta_(nullptr){}
struct HEGProof_V3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR HEGProof_V3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HEGProof_V3DefaultTypeInternal() {}
  union {
    HEGProof_V3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HEGProof_V3DefaultTypeInternal _HEGProof_V3_default_instance_;
PROTOBUF_CONSTEXPR PailProof::PailProof(
    ::_pbi::ConstantInitialized)
  : y_n_arr_(){}
struct PailProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailProofDefaultTypeInternal() {}
  union {
    PailProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailProofDefaultTypeInternal _PailProof_default_instance_;
PROTOBUF_CONSTEXPR PailNProof::PailNProof(
    ::_pbi::ConstantInitialized)
  : y_n_arr_(){}
struct PailNProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailNProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailNProofDefaultTypeInternal() {}
  union {
    PailNProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailNProofDefaultTypeInternal _PailNProof_default_instance_;
PROTOBUF_CONSTEXPR AliceRangeProof::AliceRangeProof(
    ::_pbi::ConstantInitialized)
  : z_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , u_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct AliceRangeProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AliceRangeProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AliceRangeProofDefaultTypeInternal() {}
  union {
    AliceRangeProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AliceRangeProofDefaultTypeInternal _AliceRangeProof_default_instance_;
PROTOBUF_CONSTEXPR RingPedersenParamPub::RingPedersenParamPub(
    ::_pbi::ConstantInitialized)
  : n_tilde_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , h1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , h2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RingPedersenParamPubDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RingPedersenParamPubDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RingPedersenParamPubDefaultTypeInternal() {}
  union {
    RingPedersenParamPub _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RingPedersenParamPubDefaultTypeInternal _RingPedersenParamPub_default_instance_;
PROTOBUF_CONSTEXPR RingPedersenParamPriv::RingPedersenParamPriv(
    ::_pbi::ConstantInitialized)
  : n_tilde_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , p_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , q_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , h1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , h2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , alpha_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , beta_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RingPedersenParamPrivDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RingPedersenParamPrivDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RingPedersenParamPrivDefaultTypeInternal() {}
  union {
    RingPedersenParamPriv _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RingPedersenParamPrivDefaultTypeInternal _RingPedersenParamPriv_default_instance_;
PROTOBUF_CONSTEXPR DLNProof::DLNProof(
    ::_pbi::ConstantInitialized)
  : alpha_arr_()
  , t_arr_(){}
struct DLNProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DLNProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DLNProofDefaultTypeInternal() {}
  union {
    DLNProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DLNProofDefaultTypeInternal _DLNProof_default_instance_;
PROTOBUF_CONSTEXPR TwoDLNProof::TwoDLNProof(
    ::_pbi::ConstantInitialized)
  : dln_proof_1_(nullptr)
  , dln_proof_2_(nullptr){}
struct TwoDLNProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TwoDLNProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TwoDLNProofDefaultTypeInternal() {}
  union {
    TwoDLNProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TwoDLNProofDefaultTypeInternal _TwoDLNProof_default_instance_;
PROTOBUF_CONSTEXPR PedersenProof::PedersenProof(
    ::_pbi::ConstantInitialized)
  : t_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , u_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , alpha_(nullptr){}
struct PedersenProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PedersenProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PedersenProofDefaultTypeInternal() {}
  union {
    PedersenProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PedersenProofDefaultTypeInternal _PedersenProof_default_instance_;
PROTOBUF_CONSTEXPR PailEncRangeProof_V3_Z::PailEncRangeProof_V3_Z(
    ::_pbi::ConstantInitialized)
  : masked_x_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , masked_r_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , r1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , r2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , j_(0){}
struct PailEncRangeProof_V3_ZDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailEncRangeProof_V3_ZDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailEncRangeProof_V3_ZDefaultTypeInternal() {}
  union {
    PailEncRangeProof_V3_Z _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailEncRangeProof_V3_ZDefaultTypeInternal _PailEncRangeProof_V3_Z_default_instance_;
PROTOBUF_CONSTEXPR PailEncRangeProof_V3::PailEncRangeProof_V3(
    ::_pbi::ConstantInitialized)
  : c1_arr_()
  , c2_arr_()
  , z_arr_(){}
struct PailEncRangeProof_V3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailEncRangeProof_V3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailEncRangeProof_V3DefaultTypeInternal() {}
  union {
    PailEncRangeProof_V3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailEncRangeProof_V3DefaultTypeInternal _PailEncRangeProof_V3_default_instance_;
PROTOBUF_CONSTEXPR PailEncRangeProof_V1::PailEncRangeProof_V1(
    ::_pbi::ConstantInitialized)
  : z_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , u_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct PailEncRangeProof_V1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailEncRangeProof_V1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailEncRangeProof_V1DefaultTypeInternal() {}
  union {
    PailEncRangeProof_V1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailEncRangeProof_V1DefaultTypeInternal _PailEncRangeProof_V1_default_instance_;
PROTOBUF_CONSTEXPR PailEncRangeProof_V2::PailEncRangeProof_V2(
    ::_pbi::ConstantInitialized)
  : s_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , a_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , c_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z3_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct PailEncRangeProof_V2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailEncRangeProof_V2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailEncRangeProof_V2DefaultTypeInternal() {}
  union {
    PailEncRangeProof_V2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailEncRangeProof_V2DefaultTypeInternal _PailEncRangeProof_V2_default_instance_;
PROTOBUF_CONSTEXPR PailEncGroupEleRangeProof::PailEncGroupEleRangeProof(
    ::_pbi::ConstantInitialized)
  : s_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , a_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , d_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z3_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , y_(nullptr){}
struct PailEncGroupEleRangeProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailEncGroupEleRangeProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailEncGroupEleRangeProofDefaultTypeInternal() {}
  union {
    PailEncGroupEleRangeProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailEncGroupEleRangeProofDefaultTypeInternal _PailEncGroupEleRangeProof_default_instance_;
PROTOBUF_CONSTEXPR PailAffRangeProof::PailAffRangeProof(
    ::_pbi::ConstantInitialized)
  : z_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z_prime_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , t_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , v_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , t1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , t2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct PailAffRangeProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailAffRangeProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailAffRangeProofDefaultTypeInternal() {}
  union {
    PailAffRangeProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailAffRangeProofDefaultTypeInternal _PailAffRangeProof_default_instance_;
PROTOBUF_CONSTEXPR PailAffGroupEleRangeProof_V1::PailAffGroupEleRangeProof_V1(
    ::_pbi::ConstantInitialized)
  : z_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z_prime_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , t_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , v_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , t1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , t2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , u_(nullptr){}
struct PailAffGroupEleRangeProof_V1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailAffGroupEleRangeProof_V1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailAffGroupEleRangeProof_V1DefaultTypeInternal() {}
  union {
    PailAffGroupEleRangeProof_V1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailAffGroupEleRangeProof_V1DefaultTypeInternal _PailAffGroupEleRangeProof_V1_default_instance_;
PROTOBUF_CONSTEXPR PailAffGroupEleRangeProof_V2::PailAffGroupEleRangeProof_V2(
    ::_pbi::ConstantInitialized)
  : s_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , t_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , a_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , by_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , e_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , f_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z3_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z4_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , wy_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , bx_(nullptr){}
struct PailAffGroupEleRangeProof_V2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailAffGroupEleRangeProof_V2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailAffGroupEleRangeProof_V2DefaultTypeInternal() {}
  union {
    PailAffGroupEleRangeProof_V2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailAffGroupEleRangeProof_V2DefaultTypeInternal _PailAffGroupEleRangeProof_V2_default_instance_;
PROTOBUF_CONSTEXPR DlogEqualityProof::DlogEqualityProof(
    ::_pbi::ConstantInitialized)
  : z_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , a_(nullptr)
  , b_(nullptr){}
struct DlogEqualityProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DlogEqualityProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DlogEqualityProofDefaultTypeInternal() {}
  union {
    DlogEqualityProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DlogEqualityProofDefaultTypeInternal _DlogEqualityProof_default_instance_;
PROTOBUF_CONSTEXPR DlogElGamalComProof::DlogElGamalComProof(
    ::_pbi::ConstantInitialized)
  : z_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , u_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , a_(nullptr)
  , n_(nullptr)
  , b_(nullptr){}
struct DlogElGamalComProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DlogElGamalComProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DlogElGamalComProofDefaultTypeInternal() {}
  union {
    DlogElGamalComProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DlogElGamalComProofDefaultTypeInternal _DlogElGamalComProof_default_instance_;
PROTOBUF_CONSTEXPR PailEncElGamalComRangeProof::PailEncElGamalComRangeProof(
    ::_pbi::ConstantInitialized)
  : s_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , d_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , t_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z3_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , y_(nullptr)
  , z_(nullptr){}
struct PailEncElGamalComRangeProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailEncElGamalComRangeProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailEncElGamalComRangeProofDefaultTypeInternal() {}
  union {
    PailEncElGamalComRangeProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailEncElGamalComRangeProofDefaultTypeInternal _PailEncElGamalComRangeProof_default_instance_;
PROTOBUF_CONSTEXPR NoSmallFactorProof::NoSmallFactorProof(
    ::_pbi::ConstantInitialized)
  : p_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , q_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , a_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , b_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , t_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , sigma_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , v_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NoSmallFactorProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoSmallFactorProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoSmallFactorProofDefaultTypeInternal() {}
  union {
    NoSmallFactorProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoSmallFactorProofDefaultTypeInternal _NoSmallFactorProof_default_instance_;
PROTOBUF_CONSTEXPR PailBlumModulusProof::PailBlumModulusProof(
    ::_pbi::ConstantInitialized)
  : x_arr_()
  , a_arr_()
  , _a_arr_cached_byte_size_(0)
  , b_arr_()
  , _b_arr_cached_byte_size_(0)
  , z_arr_()
  , w_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct PailBlumModulusProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailBlumModulusProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailBlumModulusProofDefaultTypeInternal() {}
  union {
    PailBlumModulusProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailBlumModulusProofDefaultTypeInternal _PailBlumModulusProof_default_instance_;
PROTOBUF_CONSTEXPR PailDecModuloProof::PailDecModuloProof(
    ::_pbi::ConstantInitialized)
  : s_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , t_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , a_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , gamma_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct PailDecModuloProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailDecModuloProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailDecModuloProofDefaultTypeInternal() {}
  union {
    PailDecModuloProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailDecModuloProofDefaultTypeInternal _PailDecModuloProof_default_instance_;
PROTOBUF_CONSTEXPR PailEncMulProof::PailEncMulProof(
    ::_pbi::ConstantInitialized)
  : a_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , b_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , u_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , v_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct PailEncMulProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailEncMulProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailEncMulProofDefaultTypeInternal() {}
  union {
    PailEncMulProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailEncMulProofDefaultTypeInternal _PailEncMulProof_default_instance_;
PROTOBUF_CONSTEXPR PailMulGroupEleRangeProof::PailMulGroupEleRangeProof(
    ::_pbi::ConstantInitialized)
  : a_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , e_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , s_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , z2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , w_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , b_(nullptr){}
struct PailMulGroupEleRangeProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PailMulGroupEleRangeProofDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PailMulGroupEleRangeProofDefaultTypeInternal() {}
  union {
    PailMulGroupEleRangeProof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PailMulGroupEleRangeProofDefaultTypeInternal _PailMulGroupEleRangeProof_default_instance_;
}  // namespace proto
}  // namespace safeheron
static ::_pb::Metadata file_level_metadata_zkp_2eproto[30];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_zkp_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_zkp_2eproto = nullptr;

const uint32_t TableStruct_zkp_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof, pk_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof, g_r_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof, res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof_V2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof_V2, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof_V2, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HegProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HegProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HegProof, a3_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HegProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HegProof, z2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V2, alpha_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V2, beta_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V2, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V2, u_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::LinearCombinationProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::LinearCombinationProof, alpha_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::LinearCombinationProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::LinearCombinationProof, u_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V3, alpha_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V3, beta_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V3, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V3, u_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailProof, y_n_arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailNProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailNProof, y_n_arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, u_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, s1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, s2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPub, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPub, n_tilde_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPub, h1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPub, h2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, n_tilde_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, p_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, q_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, h1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, h2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, alpha_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, beta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLNProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLNProof, alpha_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLNProof, t_arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::TwoDLNProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::TwoDLNProof, dln_proof_1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::TwoDLNProof, dln_proof_2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PedersenProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PedersenProof, alpha_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PedersenProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PedersenProof, u_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, j_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, masked_x_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, masked_r_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, w1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, w2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, r1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, r2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3, c1_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3, c2_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3, z_arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, u_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, s1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, s2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, c_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, z3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, y_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, d_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, z3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, z_prime_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, v_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, s1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, s2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, t1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, t2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, u_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, z_prime_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, v_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, s1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, s2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, t1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, t2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, bx_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, by_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, e_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, f_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, z3_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, z4_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, wy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogEqualityProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogEqualityProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogEqualityProof, b_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogEqualityProof, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, n_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, b_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, u_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, d_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, y_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, z3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, p_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, q_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, b_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, sigma_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, w1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, w2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, v_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, x_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, a_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, b_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, z_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, w_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, gamma_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, w_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, b_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, u_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, v_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, b_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, e_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, w_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::safeheron::proto::DLogProof)},
  { 9, -1, -1, sizeof(::safeheron::proto::DLogProof_V2)},
  { 17, -1, -1, sizeof(::safeheron::proto::HegProof)},
  { 27, -1, -1, sizeof(::safeheron::proto::HEGProof_V2)},
  { 37, -1, -1, sizeof(::safeheron::proto::LinearCombinationProof)},
  { 46, -1, -1, sizeof(::safeheron::proto::HEGProof_V3)},
  { 56, -1, -1, sizeof(::safeheron::proto::PailProof)},
  { 63, -1, -1, sizeof(::safeheron::proto::PailNProof)},
  { 70, -1, -1, sizeof(::safeheron::proto::AliceRangeProof)},
  { 82, -1, -1, sizeof(::safeheron::proto::RingPedersenParamPub)},
  { 91, -1, -1, sizeof(::safeheron::proto::RingPedersenParamPriv)},
  { 104, -1, -1, sizeof(::safeheron::proto::DLNProof)},
  { 112, -1, -1, sizeof(::safeheron::proto::TwoDLNProof)},
  { 120, -1, -1, sizeof(::safeheron::proto::PedersenProof)},
  { 129, -1, -1, sizeof(::safeheron::proto::PailEncRangeProof_V3_Z)},
  { 142, -1, -1, sizeof(::safeheron::proto::PailEncRangeProof_V3)},
  { 151, -1, -1, sizeof(::safeheron::proto::PailEncRangeProof_V1)},
  { 163, -1, -1, sizeof(::safeheron::proto::PailEncRangeProof_V2)},
  { 175, -1, -1, sizeof(::safeheron::proto::PailEncGroupEleRangeProof)},
  { 188, -1, -1, sizeof(::safeheron::proto::PailAffRangeProof)},
  { 204, -1, -1, sizeof(::safeheron::proto::PailAffGroupEleRangeProof_V1)},
  { 221, -1, -1, sizeof(::safeheron::proto::PailAffGroupEleRangeProof_V2)},
  { 240, -1, -1, sizeof(::safeheron::proto::DlogEqualityProof)},
  { 249, -1, -1, sizeof(::safeheron::proto::DlogElGamalComProof)},
  { 260, -1, -1, sizeof(::safeheron::proto::PailEncElGamalComRangeProof)},
  { 275, -1, -1, sizeof(::safeheron::proto::NoSmallFactorProof)},
  { 292, -1, -1, sizeof(::safeheron::proto::PailBlumModulusProof)},
  { 303, -1, -1, sizeof(::safeheron::proto::PailDecModuloProof)},
  { 316, -1, -1, sizeof(::safeheron::proto::PailEncMulProof)},
  { 327, -1, -1, sizeof(::safeheron::proto::PailMulGroupEleRangeProof)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::safeheron::proto::_DLogProof_default_instance_._instance,
  &::safeheron::proto::_DLogProof_V2_default_instance_._instance,
  &::safeheron::proto::_HegProof_default_instance_._instance,
  &::safeheron::proto::_HEGProof_V2_default_instance_._instance,
  &::safeheron::proto::_LinearCombinationProof_default_instance_._instance,
  &::safeheron::proto::_HEGProof_V3_default_instance_._instance,
  &::safeheron::proto::_PailProof_default_instance_._instance,
  &::safeheron::proto::_PailNProof_default_instance_._instance,
  &::safeheron::proto::_AliceRangeProof_default_instance_._instance,
  &::safeheron::proto::_RingPedersenParamPub_default_instance_._instance,
  &::safeheron::proto::_RingPedersenParamPriv_default_instance_._instance,
  &::safeheron::proto::_DLNProof_default_instance_._instance,
  &::safeheron::proto::_TwoDLNProof_default_instance_._instance,
  &::safeheron::proto::_PedersenProof_default_instance_._instance,
  &::safeheron::proto::_PailEncRangeProof_V3_Z_default_instance_._instance,
  &::safeheron::proto::_PailEncRangeProof_V3_default_instance_._instance,
  &::safeheron::proto::_PailEncRangeProof_V1_default_instance_._instance,
  &::safeheron::proto::_PailEncRangeProof_V2_default_instance_._instance,
  &::safeheron::proto::_PailEncGroupEleRangeProof_default_instance_._instance,
  &::safeheron::proto::_PailAffRangeProof_default_instance_._instance,
  &::safeheron::proto::_PailAffGroupEleRangeProof_V1_default_instance_._instance,
  &::safeheron::proto::_PailAffGroupEleRangeProof_V2_default_instance_._instance,
  &::safeheron::proto::_DlogEqualityProof_default_instance_._instance,
  &::safeheron::proto::_DlogElGamalComProof_default_instance_._instance,
  &::safeheron::proto::_PailEncElGamalComRangeProof_default_instance_._instance,
  &::safeheron::proto::_NoSmallFactorProof_default_instance_._instance,
  &::safeheron::proto::_PailBlumModulusProof_default_instance_._instance,
  &::safeheron::proto::_PailDecModuloProof_default_instance_._instance,
  &::safeheron::proto::_PailEncMulProof_default_instance_._instance,
  &::safeheron::proto::_PailMulGroupEleRangeProof_default_instance_._instance,
};

const char descriptor_table_protodef_zkp_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tzkp.proto\022\017safeheron.proto\032\021curve_poin"
  "t.proto\"k\n\tDLogProof\022\'\n\002pk\030\001 \001(\0132\033.safeh"
  "eron.proto.CurvePoint\022(\n\003g_r\030\002 \001(\0132\033.saf"
  "eheron.proto.CurvePoint\022\013\n\003res\030\003 \001(\t\"A\n\014"
  "DLogProof_V2\022&\n\001A\030\002 \001(\0132\033.safeheron.prot"
  "o.CurvePoint\022\t\n\001z\030\003 \001(\t\"s\n\010HegProof\022&\n\001T"
  "\030\001 \001(\0132\033.safeheron.proto.CurvePoint\022\'\n\002A"
  "3\030\002 \001(\0132\033.safeheron.proto.CurvePoint\022\n\n\002"
  "z1\030\003 \001(\t\022\n\n\002z2\030\004 \001(\t\"z\n\013HEGProof_V2\022*\n\005A"
  "lpha\030\001 \001(\0132\033.safeheron.proto.CurvePoint\022"
  ")\n\004Beta\030\002 \001(\0132\033.safeheron.proto.CurvePoi"
  "nt\022\t\n\001t\030\003 \001(\t\022\t\n\001u\030\004 \001(\t\"Z\n\026LinearCombin"
  "ationProof\022*\n\005Alpha\030\001 \001(\0132\033.safeheron.pr"
  "oto.CurvePoint\022\t\n\001t\030\003 \001(\t\022\t\n\001u\030\004 \001(\t\"z\n\013"
  "HEGProof_V3\022*\n\005Alpha\030\001 \001(\0132\033.safeheron.p"
  "roto.CurvePoint\022)\n\004Beta\030\002 \001(\0132\033.safehero"
  "n.proto.CurvePoint\022\t\n\001t\030\003 \001(\t\022\t\n\001u\030\004 \001(\t"
  "\"\034\n\tPailProof\022\017\n\007y_N_arr\030\001 \003(\t\"\035\n\nPailNP"
  "roof\022\017\n\007y_N_arr\030\001 \003(\t\"U\n\017AliceRangeProof"
  "\022\t\n\001z\030\001 \001(\t\022\t\n\001u\030\002 \001(\t\022\t\n\001w\030\003 \001(\t\022\t\n\001s\030\004"
  " \001(\t\022\n\n\002s1\030\005 \001(\t\022\n\n\002s2\030\006 \001(\t\"\?\n\024RingPede"
  "rsenParamPub\022\017\n\007N_tilde\030\001 \001(\t\022\n\n\002h1\030\002 \001("
  "\t\022\n\n\002h2\030\003 \001(\t\"s\n\025RingPedersenParamPriv\022\017"
  "\n\007N_tilde\030\001 \001(\t\022\t\n\001p\030\002 \001(\t\022\t\n\001q\030\003 \001(\t\022\n\n"
  "\002h1\030\004 \001(\t\022\n\n\002h2\030\005 \001(\t\022\r\n\005alpha\030\006 \001(\t\022\014\n\004"
  "beta\030\007 \001(\t\",\n\010DLNProof\022\021\n\talpha_arr\030\001 \003("
  "\t\022\r\n\005t_arr\030\002 \003(\t\"m\n\013TwoDLNProof\022.\n\013dln_p"
  "roof_1\030\001 \001(\0132\031.safeheron.proto.DLNProof\022"
  ".\n\013dln_proof_2\030\002 \001(\0132\031.safeheron.proto.D"
  "LNProof\"Q\n\rPedersenProof\022*\n\005Alpha\030\003 \001(\0132"
  "\033.safeheron.proto.CurvePoint\022\t\n\001t\030\004 \001(\t\022"
  "\t\n\001u\030\005 \001(\t\"\322\001\n\024PailEncRangeProof_V3\022\016\n\006c"
  "1_arr\030\001 \003(\t\022\016\n\006c2_arr\030\002 \003(\t\0226\n\005z_arr\030\003 \003"
  "(\0132\'.safeheron.proto.PailEncRangeProof_V"
  "3.Z\032b\n\001Z\022\t\n\001j\030\001 \001(\005\022\020\n\010masked_x\030\002 \001(\t\022\020\n"
  "\010masked_r\030\003 \001(\t\022\n\n\002w1\030\004 \001(\t\022\n\n\002w2\030\005 \001(\t\022"
  "\n\n\002r1\030\006 \001(\t\022\n\n\002r2\030\007 \001(\t\"Z\n\024PailEncRangeP"
  "roof_V1\022\t\n\001z\030\001 \001(\t\022\t\n\001u\030\002 \001(\t\022\t\n\001w\030\003 \001(\t"
  "\022\t\n\001s\030\004 \001(\t\022\n\n\002s1\030\005 \001(\t\022\n\n\002s2\030\006 \001(\t\"[\n\024P"
  "ailEncRangeProof_V2\022\t\n\001S\030\001 \001(\t\022\t\n\001A\030\002 \001("
  "\t\022\t\n\001C\030\003 \001(\t\022\n\n\002z1\030\004 \001(\t\022\n\n\002z2\030\005 \001(\t\022\n\n\002"
  "z3\030\006 \001(\t\"\210\001\n\031PailEncGroupEleRangeProof\022\t"
  "\n\001S\030\001 \001(\t\022\t\n\001A\030\002 \001(\t\022&\n\001Y\030\003 \001(\0132\033.safehe"
  "ron.proto.CurvePoint\022\t\n\001D\030\004 \001(\t\022\n\n\002z1\030\005 "
  "\001(\t\022\n\n\002z2\030\006 \001(\t\022\n\n\002z3\030\007 \001(\t\"\213\001\n\021PailAffR"
  "angeProof\022\t\n\001z\030\002 \001(\t\022\017\n\007z_prime\030\003 \001(\t\022\t\n"
  "\001t\030\004 \001(\t\022\t\n\001v\030\005 \001(\t\022\t\n\001w\030\006 \001(\t\022\t\n\001s\030\007 \001("
  "\t\022\n\n\002s1\030\010 \001(\t\022\n\n\002s2\030\t \001(\t\022\n\n\002t1\030\n \001(\t\022\n\n"
  "\002t2\030\013 \001(\t\"\276\001\n\034PailAffGroupEleRangeProof_"
  "V1\022&\n\001u\030\001 \001(\0132\033.safeheron.proto.CurvePoi"
  "nt\022\t\n\001z\030\002 \001(\t\022\017\n\007z_prime\030\003 \001(\t\022\t\n\001t\030\004 \001("
  "\t\022\t\n\001v\030\005 \001(\t\022\t\n\001w\030\006 \001(\t\022\t\n\001s\030\007 \001(\t\022\n\n\002s1"
  "\030\010 \001(\t\022\n\n\002s2\030\t \001(\t\022\n\n\002t1\030\n \001(\t\022\n\n\002t2\030\013 \001"
  "(\t\"\321\001\n\034PailAffGroupEleRangeProof_V2\022\t\n\001S"
  "\030\001 \001(\t\022\t\n\001T\030\002 \001(\t\022\t\n\001A\030\003 \001(\t\022\'\n\002Bx\030\004 \001(\013"
  "2\033.safeheron.proto.CurvePoint\022\n\n\002By\030\005 \001("
  "\t\022\t\n\001E\030\006 \001(\t\022\t\n\001F\030\007 \001(\t\022\n\n\002z1\030\010 \001(\t\022\n\n\002z"
  "2\030\t \001(\t\022\n\n\002z3\030\n \001(\t\022\n\n\002z4\030\013 \001(\t\022\t\n\001w\030\014 \001"
  "(\t\022\n\n\002wy\030\r \001(\t\"n\n\021DlogEqualityProof\022&\n\001A"
  "\030\001 \001(\0132\033.safeheron.proto.CurvePoint\022&\n\001B"
  "\030\002 \001(\0132\033.safeheron.proto.CurvePoint\022\t\n\001z"
  "\030\003 \001(\t\"\243\001\n\023DlogElGamalComProof\022&\n\001A\030\001 \001("
  "\0132\033.safeheron.proto.CurvePoint\022&\n\001N\030\002 \001("
  "\0132\033.safeheron.proto.CurvePoint\022&\n\001B\030\003 \001("
  "\0132\033.safeheron.proto.CurvePoint\022\t\n\001z\030\004 \001("
  "\t\022\t\n\001u\030\005 \001(\t\"\275\001\n\033PailEncElGamalComRangeP"
  "roof\022\t\n\001S\030\001 \001(\t\022\t\n\001D\030\002 \001(\t\022&\n\001Y\030\003 \001(\0132\033."
  "safeheron.proto.CurvePoint\022&\n\001Z\030\004 \001(\0132\033."
  "safeheron.proto.CurvePoint\022\t\n\001T\030\005 \001(\t\022\n\n"
  "\002z1\030\006 \001(\t\022\t\n\001w\030\007 \001(\t\022\n\n\002z2\030\010 \001(\t\022\n\n\002z3\030\t"
  " \001(\t\"\225\001\n\022NoSmallFactorProof\022\t\n\001P\030\001 \001(\t\022\t"
  "\n\001Q\030\002 \001(\t\022\t\n\001A\030\003 \001(\t\022\t\n\001B\030\004 \001(\t\022\t\n\001T\030\005 \001"
  "(\t\022\r\n\005sigma\030\006 \001(\t\022\n\n\002z1\030\007 \001(\t\022\n\n\002z2\030\010 \001("
  "\t\022\n\n\002w1\030\t \001(\t\022\n\n\002w2\030\n \001(\t\022\t\n\001v\030\013 \001(\t\"]\n\024"
  "PailBlumModulusProof\022\r\n\005x_arr\030\001 \003(\t\022\r\n\005a"
  "_arr\030\002 \003(\005\022\r\n\005b_arr\030\003 \003(\005\022\r\n\005z_arr\030\004 \003(\t"
  "\022\t\n\001w\030\005 \001(\t\"g\n\022PailDecModuloProof\022\t\n\001S\030\001"
  " \001(\t\022\t\n\001T\030\002 \001(\t\022\t\n\001A\030\003 \001(\t\022\r\n\005gamma\030\004 \001("
  "\t\022\n\n\002z1\030\005 \001(\t\022\n\n\002z2\030\006 \001(\t\022\t\n\001w\030\007 \001(\t\"H\n\017"
  "PailEncMulProof\022\t\n\001A\030\001 \001(\t\022\t\n\001B\030\002 \001(\t\022\t\n"
  "\001z\030\003 \001(\t\022\t\n\001u\030\004 \001(\t\022\t\n\001v\030\005 \001(\t\"\207\001\n\031PailM"
  "ulGroupEleRangeProof\022\t\n\001A\030\001 \001(\t\022&\n\001B\030\002 \001"
  "(\0132\033.safeheron.proto.CurvePoint\022\t\n\001E\030\003 \001"
  "(\t\022\t\n\001S\030\004 \001(\t\022\n\n\002z1\030\005 \001(\t\022\n\n\002z2\030\006 \001(\t\022\t\n"
  "\001w\030\007 \001(\tb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_zkp_2eproto_deps[1] = {
  &::descriptor_table_curve_5fpoint_2eproto,
};
static ::_pbi::once_flag descriptor_table_zkp_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_zkp_2eproto = {
    false, false, 3376, descriptor_table_protodef_zkp_2eproto,
    "zkp.proto",
    &descriptor_table_zkp_2eproto_once, descriptor_table_zkp_2eproto_deps, 1, 30,
    schemas, file_default_instances, TableStruct_zkp_2eproto::offsets,
    file_level_metadata_zkp_2eproto, file_level_enum_descriptors_zkp_2eproto,
    file_level_service_descriptors_zkp_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_zkp_2eproto_getter() {
  return &descriptor_table_zkp_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_zkp_2eproto(&descriptor_table_zkp_2eproto);
namespace safeheron {
namespace proto {

// ===================================================================

class DLogProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& pk(const DLogProof* msg);
  static const ::safeheron::proto::CurvePoint& g_r(const DLogProof* msg);
};

const ::safeheron::proto::CurvePoint&
DLogProof::_Internal::pk(const DLogProof* msg) {
  return *msg->pk_;
}
const ::safeheron::proto::CurvePoint&
DLogProof::_Internal::g_r(const DLogProof* msg) {
  return *msg->g_r_;
}
void DLogProof::clear_pk() {
  if (GetArenaForAllocation() == nullptr && pk_ != nullptr) {
    delete pk_;
  }
  pk_ = nullptr;
}
void DLogProof::clear_g_r() {
  if (GetArenaForAllocation() == nullptr && g_r_ != nullptr) {
    delete g_r_;
  }
  g_r_ = nullptr;
}
DLogProof::DLogProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.DLogProof)
}
DLogProof::DLogProof(const DLogProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  res_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    res_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_res().empty()) {
    res_.Set(from._internal_res(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_pk()) {
    pk_ = new ::safeheron::proto::CurvePoint(*from.pk_);
  } else {
    pk_ = nullptr;
  }
  if (from._internal_has_g_r()) {
    g_r_ = new ::safeheron::proto::CurvePoint(*from.g_r_);
  } else {
    g_r_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.DLogProof)
}

inline void DLogProof::SharedCtor() {
res_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  res_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&pk_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&g_r_) -
    reinterpret_cast<char*>(&pk_)) + sizeof(g_r_));
}

DLogProof::~DLogProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.DLogProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DLogProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  res_.Destroy();
  if (this != internal_default_instance()) delete pk_;
  if (this != internal_default_instance()) delete g_r_;
}

void DLogProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DLogProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.DLogProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && pk_ != nullptr) {
    delete pk_;
  }
  pk_ = nullptr;
  if (GetArenaForAllocation() == nullptr && g_r_ != nullptr) {
    delete g_r_;
  }
  g_r_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DLogProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint pk = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pk(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint g_r = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_g_r(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string res = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_res();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.DLogProof.res"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DLogProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.DLogProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint pk = 1;
  if (this->_internal_has_pk()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pk(this),
        _Internal::pk(this).GetCachedSize(), target, stream);
  }

  // .safeheron.proto.CurvePoint g_r = 2;
  if (this->_internal_has_g_r()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::g_r(this),
        _Internal::g_r(this).GetCachedSize(), target, stream);
  }

  // string res = 3;
  if (!this->_internal_res().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_res().data(), static_cast<int>(this->_internal_res().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DLogProof.res");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.DLogProof)
  return target;
}

size_t DLogProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.DLogProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string res = 3;
  if (!this->_internal_res().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_res());
  }

  // .safeheron.proto.CurvePoint pk = 1;
  if (this->_internal_has_pk()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pk_);
  }

  // .safeheron.proto.CurvePoint g_r = 2;
  if (this->_internal_has_g_r()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *g_r_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DLogProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DLogProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DLogProof::GetClassData() const { return &_class_data_; }

void DLogProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DLogProof *>(to)->MergeFrom(
      static_cast<const DLogProof &>(from));
}


void DLogProof::MergeFrom(const DLogProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.DLogProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_res().empty()) {
    _internal_set_res(from._internal_res());
  }
  if (from._internal_has_pk()) {
    _internal_mutable_pk()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_pk());
  }
  if (from._internal_has_g_r()) {
    _internal_mutable_g_r()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_g_r());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DLogProof::CopyFrom(const DLogProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.DLogProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DLogProof::IsInitialized() const {
  return true;
}

void DLogProof::InternalSwap(DLogProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &res_, lhs_arena,
      &other->res_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DLogProof, g_r_)
      + sizeof(DLogProof::g_r_)
      - PROTOBUF_FIELD_OFFSET(DLogProof, pk_)>(
          reinterpret_cast<char*>(&pk_),
          reinterpret_cast<char*>(&other->pk_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DLogProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[0]);
}

// ===================================================================

class DLogProof_V2::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& a(const DLogProof_V2* msg);
};

const ::safeheron::proto::CurvePoint&
DLogProof_V2::_Internal::a(const DLogProof_V2* msg) {
  return *msg->a_;
}
void DLogProof_V2::clear_a() {
  if (GetArenaForAllocation() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
}
DLogProof_V2::DLogProof_V2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.DLogProof_V2)
}
DLogProof_V2::DLogProof_V2(const DLogProof_V2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z().empty()) {
    z_.Set(from._internal_z(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_a()) {
    a_ = new ::safeheron::proto::CurvePoint(*from.a_);
  } else {
    a_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.DLogProof_V2)
}

inline void DLogProof_V2::SharedCtor() {
z_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
a_ = nullptr;
}

DLogProof_V2::~DLogProof_V2() {
  // @@protoc_insertion_point(destructor:safeheron.proto.DLogProof_V2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DLogProof_V2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  z_.Destroy();
  if (this != internal_default_instance()) delete a_;
}

void DLogProof_V2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DLogProof_V2::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.DLogProof_V2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DLogProof_V2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint A = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_a(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_z();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.DLogProof_V2.z"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DLogProof_V2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.DLogProof_V2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint A = 2;
  if (this->_internal_has_a()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::a(this),
        _Internal::a(this).GetCachedSize(), target, stream);
  }

  // string z = 3;
  if (!this->_internal_z().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DLogProof_V2.z");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.DLogProof_V2)
  return target;
}

size_t DLogProof_V2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.DLogProof_V2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 3;
  if (!this->_internal_z().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // .safeheron.proto.CurvePoint A = 2;
  if (this->_internal_has_a()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *a_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DLogProof_V2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DLogProof_V2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DLogProof_V2::GetClassData() const { return &_class_data_; }

void DLogProof_V2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DLogProof_V2 *>(to)->MergeFrom(
      static_cast<const DLogProof_V2 &>(from));
}


void DLogProof_V2::MergeFrom(const DLogProof_V2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.DLogProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_z().empty()) {
    _internal_set_z(from._internal_z());
  }
  if (from._internal_has_a()) {
    _internal_mutable_a()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_a());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DLogProof_V2::CopyFrom(const DLogProof_V2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.DLogProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DLogProof_V2::IsInitialized() const {
  return true;
}

void DLogProof_V2::InternalSwap(DLogProof_V2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z_, lhs_arena,
      &other->z_, rhs_arena
  );
  swap(a_, other->a_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DLogProof_V2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[1]);
}

// ===================================================================

class HegProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& t(const HegProof* msg);
  static const ::safeheron::proto::CurvePoint& a3(const HegProof* msg);
};

const ::safeheron::proto::CurvePoint&
HegProof::_Internal::t(const HegProof* msg) {
  return *msg->t_;
}
const ::safeheron::proto::CurvePoint&
HegProof::_Internal::a3(const HegProof* msg) {
  return *msg->a3_;
}
void HegProof::clear_t() {
  if (GetArenaForAllocation() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
}
void HegProof::clear_a3() {
  if (GetArenaForAllocation() == nullptr && a3_ != nullptr) {
    delete a3_;
  }
  a3_ = nullptr;
}
HegProof::HegProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.HegProof)
}
HegProof::HegProof(const HegProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z1().empty()) {
    z1_.Set(from._internal_z1(), 
      GetArenaForAllocation());
  }
  z2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z2().empty()) {
    z2_.Set(from._internal_z2(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_t()) {
    t_ = new ::safeheron::proto::CurvePoint(*from.t_);
  } else {
    t_ = nullptr;
  }
  if (from._internal_has_a3()) {
    a3_ = new ::safeheron::proto::CurvePoint(*from.a3_);
  } else {
    a3_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.HegProof)
}

inline void HegProof::SharedCtor() {
z1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&t_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&a3_) -
    reinterpret_cast<char*>(&t_)) + sizeof(a3_));
}

HegProof::~HegProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.HegProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HegProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  z1_.Destroy();
  z2_.Destroy();
  if (this != internal_default_instance()) delete t_;
  if (this != internal_default_instance()) delete a3_;
}

void HegProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HegProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.HegProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  if (GetArenaForAllocation() == nullptr && a3_ != nullptr) {
    delete a3_;
  }
  a3_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HegProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint T = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint A3 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_a3(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string z1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_z1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.HegProof.z1"));
        } else
          goto handle_unusual;
        continue;
      // string z2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_z2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.HegProof.z2"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HegProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.HegProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint T = 1;
  if (this->_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  // .safeheron.proto.CurvePoint A3 = 2;
  if (this->_internal_has_a3()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::a3(this),
        _Internal::a3(this).GetCachedSize(), target, stream);
  }

  // string z1 = 3;
  if (!this->_internal_z1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HegProof.z1");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z1(), target);
  }

  // string z2 = 4;
  if (!this->_internal_z2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HegProof.z2");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_z2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.HegProof)
  return target;
}

size_t HegProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.HegProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z1 = 3;
  if (!this->_internal_z1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 4;
  if (!this->_internal_z2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // .safeheron.proto.CurvePoint T = 1;
  if (this->_internal_has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // .safeheron.proto.CurvePoint A3 = 2;
  if (this->_internal_has_a3()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *a3_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HegProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HegProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HegProof::GetClassData() const { return &_class_data_; }

void HegProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HegProof *>(to)->MergeFrom(
      static_cast<const HegProof &>(from));
}


void HegProof::MergeFrom(const HegProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.HegProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_z1().empty()) {
    _internal_set_z1(from._internal_z1());
  }
  if (!from._internal_z2().empty()) {
    _internal_set_z2(from._internal_z2());
  }
  if (from._internal_has_t()) {
    _internal_mutable_t()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_t());
  }
  if (from._internal_has_a3()) {
    _internal_mutable_a3()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_a3());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HegProof::CopyFrom(const HegProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.HegProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HegProof::IsInitialized() const {
  return true;
}

void HegProof::InternalSwap(HegProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z1_, lhs_arena,
      &other->z1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z2_, lhs_arena,
      &other->z2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HegProof, a3_)
      + sizeof(HegProof::a3_)
      - PROTOBUF_FIELD_OFFSET(HegProof, t_)>(
          reinterpret_cast<char*>(&t_),
          reinterpret_cast<char*>(&other->t_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HegProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[2]);
}

// ===================================================================

class HEGProof_V2::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& alpha(const HEGProof_V2* msg);
  static const ::safeheron::proto::CurvePoint& beta(const HEGProof_V2* msg);
};

const ::safeheron::proto::CurvePoint&
HEGProof_V2::_Internal::alpha(const HEGProof_V2* msg) {
  return *msg->alpha_;
}
const ::safeheron::proto::CurvePoint&
HEGProof_V2::_Internal::beta(const HEGProof_V2* msg) {
  return *msg->beta_;
}
void HEGProof_V2::clear_alpha() {
  if (GetArenaForAllocation() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
}
void HEGProof_V2::clear_beta() {
  if (GetArenaForAllocation() == nullptr && beta_ != nullptr) {
    delete beta_;
  }
  beta_ = nullptr;
}
HEGProof_V2::HEGProof_V2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.HEGProof_V2)
}
HEGProof_V2::HEGProof_V2(const HEGProof_V2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  t_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t().empty()) {
    t_.Set(from._internal_t(), 
      GetArenaForAllocation());
  }
  u_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    u_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_u().empty()) {
    u_.Set(from._internal_u(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_alpha()) {
    alpha_ = new ::safeheron::proto::CurvePoint(*from.alpha_);
  } else {
    alpha_ = nullptr;
  }
  if (from._internal_has_beta()) {
    beta_ = new ::safeheron::proto::CurvePoint(*from.beta_);
  } else {
    beta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.HEGProof_V2)
}

inline void HEGProof_V2::SharedCtor() {
t_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
u_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  u_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&alpha_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&beta_) -
    reinterpret_cast<char*>(&alpha_)) + sizeof(beta_));
}

HEGProof_V2::~HEGProof_V2() {
  // @@protoc_insertion_point(destructor:safeheron.proto.HEGProof_V2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HEGProof_V2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  t_.Destroy();
  u_.Destroy();
  if (this != internal_default_instance()) delete alpha_;
  if (this != internal_default_instance()) delete beta_;
}

void HEGProof_V2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HEGProof_V2::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.HEGProof_V2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.ClearToEmpty();
  u_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
  if (GetArenaForAllocation() == nullptr && beta_ != nullptr) {
    delete beta_;
  }
  beta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HEGProof_V2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint Alpha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_alpha(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Beta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_beta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string t = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_t();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.HEGProof_V2.t"));
        } else
          goto handle_unusual;
        continue;
      // string u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_u();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.HEGProof_V2.u"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HEGProof_V2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.HEGProof_V2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->_internal_has_alpha()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::alpha(this),
        _Internal::alpha(this).GetCachedSize(), target, stream);
  }

  // .safeheron.proto.CurvePoint Beta = 2;
  if (this->_internal_has_beta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::beta(this),
        _Internal::beta(this).GetCachedSize(), target, stream);
  }

  // string t = 3;
  if (!this->_internal_t().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HEGProof_V2.t");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_t(), target);
  }

  // string u = 4;
  if (!this->_internal_u().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HEGProof_V2.u");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_u(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.HEGProof_V2)
  return target;
}

size_t HEGProof_V2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.HEGProof_V2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string t = 3;
  if (!this->_internal_t().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string u = 4;
  if (!this->_internal_u().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->_internal_has_alpha()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *alpha_);
  }

  // .safeheron.proto.CurvePoint Beta = 2;
  if (this->_internal_has_beta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *beta_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HEGProof_V2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HEGProof_V2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HEGProof_V2::GetClassData() const { return &_class_data_; }

void HEGProof_V2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HEGProof_V2 *>(to)->MergeFrom(
      static_cast<const HEGProof_V2 &>(from));
}


void HEGProof_V2::MergeFrom(const HEGProof_V2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.HEGProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_t().empty()) {
    _internal_set_t(from._internal_t());
  }
  if (!from._internal_u().empty()) {
    _internal_set_u(from._internal_u());
  }
  if (from._internal_has_alpha()) {
    _internal_mutable_alpha()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_alpha());
  }
  if (from._internal_has_beta()) {
    _internal_mutable_beta()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_beta());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HEGProof_V2::CopyFrom(const HEGProof_V2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.HEGProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HEGProof_V2::IsInitialized() const {
  return true;
}

void HEGProof_V2::InternalSwap(HEGProof_V2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t_, lhs_arena,
      &other->t_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &u_, lhs_arena,
      &other->u_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HEGProof_V2, beta_)
      + sizeof(HEGProof_V2::beta_)
      - PROTOBUF_FIELD_OFFSET(HEGProof_V2, alpha_)>(
          reinterpret_cast<char*>(&alpha_),
          reinterpret_cast<char*>(&other->alpha_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HEGProof_V2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[3]);
}

// ===================================================================

class LinearCombinationProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& alpha(const LinearCombinationProof* msg);
};

const ::safeheron::proto::CurvePoint&
LinearCombinationProof::_Internal::alpha(const LinearCombinationProof* msg) {
  return *msg->alpha_;
}
void LinearCombinationProof::clear_alpha() {
  if (GetArenaForAllocation() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
}
LinearCombinationProof::LinearCombinationProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.LinearCombinationProof)
}
LinearCombinationProof::LinearCombinationProof(const LinearCombinationProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  t_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t().empty()) {
    t_.Set(from._internal_t(), 
      GetArenaForAllocation());
  }
  u_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    u_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_u().empty()) {
    u_.Set(from._internal_u(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_alpha()) {
    alpha_ = new ::safeheron::proto::CurvePoint(*from.alpha_);
  } else {
    alpha_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.LinearCombinationProof)
}

inline void LinearCombinationProof::SharedCtor() {
t_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
u_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  u_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
alpha_ = nullptr;
}

LinearCombinationProof::~LinearCombinationProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.LinearCombinationProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LinearCombinationProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  t_.Destroy();
  u_.Destroy();
  if (this != internal_default_instance()) delete alpha_;
}

void LinearCombinationProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LinearCombinationProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.LinearCombinationProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.ClearToEmpty();
  u_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinearCombinationProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint Alpha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_alpha(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string t = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_t();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.LinearCombinationProof.t"));
        } else
          goto handle_unusual;
        continue;
      // string u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_u();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.LinearCombinationProof.u"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LinearCombinationProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.LinearCombinationProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->_internal_has_alpha()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::alpha(this),
        _Internal::alpha(this).GetCachedSize(), target, stream);
  }

  // string t = 3;
  if (!this->_internal_t().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.LinearCombinationProof.t");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_t(), target);
  }

  // string u = 4;
  if (!this->_internal_u().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.LinearCombinationProof.u");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_u(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.LinearCombinationProof)
  return target;
}

size_t LinearCombinationProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.LinearCombinationProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string t = 3;
  if (!this->_internal_t().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string u = 4;
  if (!this->_internal_u().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->_internal_has_alpha()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *alpha_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LinearCombinationProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LinearCombinationProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LinearCombinationProof::GetClassData() const { return &_class_data_; }

void LinearCombinationProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LinearCombinationProof *>(to)->MergeFrom(
      static_cast<const LinearCombinationProof &>(from));
}


void LinearCombinationProof::MergeFrom(const LinearCombinationProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.LinearCombinationProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_t().empty()) {
    _internal_set_t(from._internal_t());
  }
  if (!from._internal_u().empty()) {
    _internal_set_u(from._internal_u());
  }
  if (from._internal_has_alpha()) {
    _internal_mutable_alpha()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_alpha());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LinearCombinationProof::CopyFrom(const LinearCombinationProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.LinearCombinationProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinearCombinationProof::IsInitialized() const {
  return true;
}

void LinearCombinationProof::InternalSwap(LinearCombinationProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t_, lhs_arena,
      &other->t_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &u_, lhs_arena,
      &other->u_, rhs_arena
  );
  swap(alpha_, other->alpha_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LinearCombinationProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[4]);
}

// ===================================================================

class HEGProof_V3::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& alpha(const HEGProof_V3* msg);
  static const ::safeheron::proto::CurvePoint& beta(const HEGProof_V3* msg);
};

const ::safeheron::proto::CurvePoint&
HEGProof_V3::_Internal::alpha(const HEGProof_V3* msg) {
  return *msg->alpha_;
}
const ::safeheron::proto::CurvePoint&
HEGProof_V3::_Internal::beta(const HEGProof_V3* msg) {
  return *msg->beta_;
}
void HEGProof_V3::clear_alpha() {
  if (GetArenaForAllocation() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
}
void HEGProof_V3::clear_beta() {
  if (GetArenaForAllocation() == nullptr && beta_ != nullptr) {
    delete beta_;
  }
  beta_ = nullptr;
}
HEGProof_V3::HEGProof_V3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.HEGProof_V3)
}
HEGProof_V3::HEGProof_V3(const HEGProof_V3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  t_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t().empty()) {
    t_.Set(from._internal_t(), 
      GetArenaForAllocation());
  }
  u_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    u_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_u().empty()) {
    u_.Set(from._internal_u(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_alpha()) {
    alpha_ = new ::safeheron::proto::CurvePoint(*from.alpha_);
  } else {
    alpha_ = nullptr;
  }
  if (from._internal_has_beta()) {
    beta_ = new ::safeheron::proto::CurvePoint(*from.beta_);
  } else {
    beta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.HEGProof_V3)
}

inline void HEGProof_V3::SharedCtor() {
t_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
u_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  u_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&alpha_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&beta_) -
    reinterpret_cast<char*>(&alpha_)) + sizeof(beta_));
}

HEGProof_V3::~HEGProof_V3() {
  // @@protoc_insertion_point(destructor:safeheron.proto.HEGProof_V3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HEGProof_V3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  t_.Destroy();
  u_.Destroy();
  if (this != internal_default_instance()) delete alpha_;
  if (this != internal_default_instance()) delete beta_;
}

void HEGProof_V3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HEGProof_V3::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.HEGProof_V3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.ClearToEmpty();
  u_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
  if (GetArenaForAllocation() == nullptr && beta_ != nullptr) {
    delete beta_;
  }
  beta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HEGProof_V3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint Alpha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_alpha(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Beta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_beta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string t = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_t();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.HEGProof_V3.t"));
        } else
          goto handle_unusual;
        continue;
      // string u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_u();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.HEGProof_V3.u"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HEGProof_V3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.HEGProof_V3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->_internal_has_alpha()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::alpha(this),
        _Internal::alpha(this).GetCachedSize(), target, stream);
  }

  // .safeheron.proto.CurvePoint Beta = 2;
  if (this->_internal_has_beta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::beta(this),
        _Internal::beta(this).GetCachedSize(), target, stream);
  }

  // string t = 3;
  if (!this->_internal_t().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HEGProof_V3.t");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_t(), target);
  }

  // string u = 4;
  if (!this->_internal_u().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HEGProof_V3.u");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_u(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.HEGProof_V3)
  return target;
}

size_t HEGProof_V3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.HEGProof_V3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string t = 3;
  if (!this->_internal_t().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string u = 4;
  if (!this->_internal_u().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->_internal_has_alpha()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *alpha_);
  }

  // .safeheron.proto.CurvePoint Beta = 2;
  if (this->_internal_has_beta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *beta_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HEGProof_V3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HEGProof_V3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HEGProof_V3::GetClassData() const { return &_class_data_; }

void HEGProof_V3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HEGProof_V3 *>(to)->MergeFrom(
      static_cast<const HEGProof_V3 &>(from));
}


void HEGProof_V3::MergeFrom(const HEGProof_V3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.HEGProof_V3)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_t().empty()) {
    _internal_set_t(from._internal_t());
  }
  if (!from._internal_u().empty()) {
    _internal_set_u(from._internal_u());
  }
  if (from._internal_has_alpha()) {
    _internal_mutable_alpha()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_alpha());
  }
  if (from._internal_has_beta()) {
    _internal_mutable_beta()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_beta());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HEGProof_V3::CopyFrom(const HEGProof_V3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.HEGProof_V3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HEGProof_V3::IsInitialized() const {
  return true;
}

void HEGProof_V3::InternalSwap(HEGProof_V3* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t_, lhs_arena,
      &other->t_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &u_, lhs_arena,
      &other->u_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HEGProof_V3, beta_)
      + sizeof(HEGProof_V3::beta_)
      - PROTOBUF_FIELD_OFFSET(HEGProof_V3, alpha_)>(
          reinterpret_cast<char*>(&alpha_),
          reinterpret_cast<char*>(&other->alpha_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HEGProof_V3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[5]);
}

// ===================================================================

class PailProof::_Internal {
 public:
};

PailProof::PailProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  y_n_arr_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailProof)
}
PailProof::PailProof(const PailProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      y_n_arr_(from.y_n_arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailProof)
}

inline void PailProof::SharedCtor() {
}

PailProof::~PailProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PailProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  y_n_arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string y_N_arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_y_n_arr();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailProof.y_N_arr"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string y_N_arr = 1;
  for (int i = 0, n = this->_internal_y_n_arr_size(); i < n; i++) {
    const auto& s = this->_internal_y_n_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailProof.y_N_arr");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailProof)
  return target;
}

size_t PailProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string y_N_arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(y_n_arr_.size());
  for (int i = 0, n = y_n_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      y_n_arr_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailProof::GetClassData() const { return &_class_data_; }

void PailProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailProof *>(to)->MergeFrom(
      static_cast<const PailProof &>(from));
}


void PailProof::MergeFrom(const PailProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  y_n_arr_.MergeFrom(from.y_n_arr_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailProof::CopyFrom(const PailProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailProof::IsInitialized() const {
  return true;
}

void PailProof::InternalSwap(PailProof* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  y_n_arr_.InternalSwap(&other->y_n_arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[6]);
}

// ===================================================================

class PailNProof::_Internal {
 public:
};

PailNProof::PailNProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  y_n_arr_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailNProof)
}
PailNProof::PailNProof(const PailNProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      y_n_arr_(from.y_n_arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailNProof)
}

inline void PailNProof::SharedCtor() {
}

PailNProof::~PailNProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailNProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailNProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PailNProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailNProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailNProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  y_n_arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailNProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string y_N_arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_y_n_arr();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailNProof.y_N_arr"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailNProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailNProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string y_N_arr = 1;
  for (int i = 0, n = this->_internal_y_n_arr_size(); i < n; i++) {
    const auto& s = this->_internal_y_n_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailNProof.y_N_arr");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailNProof)
  return target;
}

size_t PailNProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailNProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string y_N_arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(y_n_arr_.size());
  for (int i = 0, n = y_n_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      y_n_arr_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailNProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailNProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailNProof::GetClassData() const { return &_class_data_; }

void PailNProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailNProof *>(to)->MergeFrom(
      static_cast<const PailNProof &>(from));
}


void PailNProof::MergeFrom(const PailNProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailNProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  y_n_arr_.MergeFrom(from.y_n_arr_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailNProof::CopyFrom(const PailNProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailNProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailNProof::IsInitialized() const {
  return true;
}

void PailNProof::InternalSwap(PailNProof* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  y_n_arr_.InternalSwap(&other->y_n_arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailNProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[7]);
}

// ===================================================================

class AliceRangeProof::_Internal {
 public:
};

AliceRangeProof::AliceRangeProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.AliceRangeProof)
}
AliceRangeProof::AliceRangeProof(const AliceRangeProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z().empty()) {
    z_.Set(from._internal_z(), 
      GetArenaForAllocation());
  }
  u_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    u_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_u().empty()) {
    u_.Set(from._internal_u(), 
      GetArenaForAllocation());
  }
  w_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(from._internal_w(), 
      GetArenaForAllocation());
  }
  s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    s_.Set(from._internal_s(), 
      GetArenaForAllocation());
  }
  s1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s1().empty()) {
    s1_.Set(from._internal_s1(), 
      GetArenaForAllocation());
  }
  s2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s2().empty()) {
    s2_.Set(from._internal_s2(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.AliceRangeProof)
}

inline void AliceRangeProof::SharedCtor() {
z_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
u_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  u_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AliceRangeProof::~AliceRangeProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.AliceRangeProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AliceRangeProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  z_.Destroy();
  u_.Destroy();
  w_.Destroy();
  s_.Destroy();
  s1_.Destroy();
  s2_.Destroy();
}

void AliceRangeProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AliceRangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.AliceRangeProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  u_.ClearToEmpty();
  w_.ClearToEmpty();
  s_.ClearToEmpty();
  s1_.ClearToEmpty();
  s2_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AliceRangeProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string z = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_z();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.z"));
        } else
          goto handle_unusual;
        continue;
      // string u = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_u();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.u"));
        } else
          goto handle_unusual;
        continue;
      // string w = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_w();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.w"));
        } else
          goto handle_unusual;
        continue;
      // string s = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.s"));
        } else
          goto handle_unusual;
        continue;
      // string s1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_s1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.s1"));
        } else
          goto handle_unusual;
        continue;
      // string s2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_s2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.s2"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AliceRangeProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.AliceRangeProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string z = 1;
  if (!this->_internal_z().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.z");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_z(), target);
  }

  // string u = 2;
  if (!this->_internal_u().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.u");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_u(), target);
  }

  // string w = 3;
  if (!this->_internal_w().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.w");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_w(), target);
  }

  // string s = 4;
  if (!this->_internal_s().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.s");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_s(), target);
  }

  // string s1 = 5;
  if (!this->_internal_s1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s1().data(), static_cast<int>(this->_internal_s1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.s1");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_s1(), target);
  }

  // string s2 = 6;
  if (!this->_internal_s2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s2().data(), static_cast<int>(this->_internal_s2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.s2");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_s2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.AliceRangeProof)
  return target;
}

size_t AliceRangeProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.AliceRangeProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 1;
  if (!this->_internal_z().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string u = 2;
  if (!this->_internal_u().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // string w = 3;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string s = 4;
  if (!this->_internal_s().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string s1 = 5;
  if (!this->_internal_s1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s1());
  }

  // string s2 = 6;
  if (!this->_internal_s2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AliceRangeProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AliceRangeProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AliceRangeProof::GetClassData() const { return &_class_data_; }

void AliceRangeProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AliceRangeProof *>(to)->MergeFrom(
      static_cast<const AliceRangeProof &>(from));
}


void AliceRangeProof::MergeFrom(const AliceRangeProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.AliceRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_z().empty()) {
    _internal_set_z(from._internal_z());
  }
  if (!from._internal_u().empty()) {
    _internal_set_u(from._internal_u());
  }
  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  if (!from._internal_s().empty()) {
    _internal_set_s(from._internal_s());
  }
  if (!from._internal_s1().empty()) {
    _internal_set_s1(from._internal_s1());
  }
  if (!from._internal_s2().empty()) {
    _internal_set_s2(from._internal_s2());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AliceRangeProof::CopyFrom(const AliceRangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.AliceRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AliceRangeProof::IsInitialized() const {
  return true;
}

void AliceRangeProof::InternalSwap(AliceRangeProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z_, lhs_arena,
      &other->z_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &u_, lhs_arena,
      &other->u_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s_, lhs_arena,
      &other->s_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s1_, lhs_arena,
      &other->s1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s2_, lhs_arena,
      &other->s2_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AliceRangeProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[8]);
}

// ===================================================================

class RingPedersenParamPub::_Internal {
 public:
};

RingPedersenParamPub::RingPedersenParamPub(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.RingPedersenParamPub)
}
RingPedersenParamPub::RingPedersenParamPub(const RingPedersenParamPub& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  n_tilde_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    n_tilde_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_n_tilde().empty()) {
    n_tilde_.Set(from._internal_n_tilde(), 
      GetArenaForAllocation());
  }
  h1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    h1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_h1().empty()) {
    h1_.Set(from._internal_h1(), 
      GetArenaForAllocation());
  }
  h2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    h2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_h2().empty()) {
    h2_.Set(from._internal_h2(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.RingPedersenParamPub)
}

inline void RingPedersenParamPub::SharedCtor() {
n_tilde_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  n_tilde_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
h1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  h1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
h2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  h2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RingPedersenParamPub::~RingPedersenParamPub() {
  // @@protoc_insertion_point(destructor:safeheron.proto.RingPedersenParamPub)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RingPedersenParamPub::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  n_tilde_.Destroy();
  h1_.Destroy();
  h2_.Destroy();
}

void RingPedersenParamPub::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RingPedersenParamPub::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.RingPedersenParamPub)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  n_tilde_.ClearToEmpty();
  h1_.ClearToEmpty();
  h2_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RingPedersenParamPub::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string N_tilde = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_n_tilde();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPub.N_tilde"));
        } else
          goto handle_unusual;
        continue;
      // string h1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_h1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPub.h1"));
        } else
          goto handle_unusual;
        continue;
      // string h2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_h2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPub.h2"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RingPedersenParamPub::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.RingPedersenParamPub)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string N_tilde = 1;
  if (!this->_internal_n_tilde().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_n_tilde().data(), static_cast<int>(this->_internal_n_tilde().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPub.N_tilde");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_n_tilde(), target);
  }

  // string h1 = 2;
  if (!this->_internal_h1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_h1().data(), static_cast<int>(this->_internal_h1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPub.h1");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_h1(), target);
  }

  // string h2 = 3;
  if (!this->_internal_h2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_h2().data(), static_cast<int>(this->_internal_h2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPub.h2");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_h2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.RingPedersenParamPub)
  return target;
}

size_t RingPedersenParamPub::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.RingPedersenParamPub)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string N_tilde = 1;
  if (!this->_internal_n_tilde().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_n_tilde());
  }

  // string h1 = 2;
  if (!this->_internal_h1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_h1());
  }

  // string h2 = 3;
  if (!this->_internal_h2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_h2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RingPedersenParamPub::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RingPedersenParamPub::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RingPedersenParamPub::GetClassData() const { return &_class_data_; }

void RingPedersenParamPub::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RingPedersenParamPub *>(to)->MergeFrom(
      static_cast<const RingPedersenParamPub &>(from));
}


void RingPedersenParamPub::MergeFrom(const RingPedersenParamPub& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.RingPedersenParamPub)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_n_tilde().empty()) {
    _internal_set_n_tilde(from._internal_n_tilde());
  }
  if (!from._internal_h1().empty()) {
    _internal_set_h1(from._internal_h1());
  }
  if (!from._internal_h2().empty()) {
    _internal_set_h2(from._internal_h2());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RingPedersenParamPub::CopyFrom(const RingPedersenParamPub& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.RingPedersenParamPub)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RingPedersenParamPub::IsInitialized() const {
  return true;
}

void RingPedersenParamPub::InternalSwap(RingPedersenParamPub* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &n_tilde_, lhs_arena,
      &other->n_tilde_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &h1_, lhs_arena,
      &other->h1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &h2_, lhs_arena,
      &other->h2_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RingPedersenParamPub::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[9]);
}

// ===================================================================

class RingPedersenParamPriv::_Internal {
 public:
};

RingPedersenParamPriv::RingPedersenParamPriv(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.RingPedersenParamPriv)
}
RingPedersenParamPriv::RingPedersenParamPriv(const RingPedersenParamPriv& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  n_tilde_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    n_tilde_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_n_tilde().empty()) {
    n_tilde_.Set(from._internal_n_tilde(), 
      GetArenaForAllocation());
  }
  p_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    p_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_p().empty()) {
    p_.Set(from._internal_p(), 
      GetArenaForAllocation());
  }
  q_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    q_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_q().empty()) {
    q_.Set(from._internal_q(), 
      GetArenaForAllocation());
  }
  h1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    h1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_h1().empty()) {
    h1_.Set(from._internal_h1(), 
      GetArenaForAllocation());
  }
  h2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    h2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_h2().empty()) {
    h2_.Set(from._internal_h2(), 
      GetArenaForAllocation());
  }
  alpha_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    alpha_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_alpha().empty()) {
    alpha_.Set(from._internal_alpha(), 
      GetArenaForAllocation());
  }
  beta_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    beta_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_beta().empty()) {
    beta_.Set(from._internal_beta(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.RingPedersenParamPriv)
}

inline void RingPedersenParamPriv::SharedCtor() {
n_tilde_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  n_tilde_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
p_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  p_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
q_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  q_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
h1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  h1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
h2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  h2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
alpha_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  alpha_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
beta_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  beta_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RingPedersenParamPriv::~RingPedersenParamPriv() {
  // @@protoc_insertion_point(destructor:safeheron.proto.RingPedersenParamPriv)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RingPedersenParamPriv::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  n_tilde_.Destroy();
  p_.Destroy();
  q_.Destroy();
  h1_.Destroy();
  h2_.Destroy();
  alpha_.Destroy();
  beta_.Destroy();
}

void RingPedersenParamPriv::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RingPedersenParamPriv::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.RingPedersenParamPriv)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  n_tilde_.ClearToEmpty();
  p_.ClearToEmpty();
  q_.ClearToEmpty();
  h1_.ClearToEmpty();
  h2_.ClearToEmpty();
  alpha_.ClearToEmpty();
  beta_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RingPedersenParamPriv::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string N_tilde = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_n_tilde();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.N_tilde"));
        } else
          goto handle_unusual;
        continue;
      // string p = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_p();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.p"));
        } else
          goto handle_unusual;
        continue;
      // string q = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_q();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.q"));
        } else
          goto handle_unusual;
        continue;
      // string h1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_h1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.h1"));
        } else
          goto handle_unusual;
        continue;
      // string h2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_h2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.h2"));
        } else
          goto handle_unusual;
        continue;
      // string alpha = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_alpha();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.alpha"));
        } else
          goto handle_unusual;
        continue;
      // string beta = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_beta();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.beta"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RingPedersenParamPriv::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.RingPedersenParamPriv)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string N_tilde = 1;
  if (!this->_internal_n_tilde().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_n_tilde().data(), static_cast<int>(this->_internal_n_tilde().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.N_tilde");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_n_tilde(), target);
  }

  // string p = 2;
  if (!this->_internal_p().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_p().data(), static_cast<int>(this->_internal_p().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.p");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_p(), target);
  }

  // string q = 3;
  if (!this->_internal_q().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_q().data(), static_cast<int>(this->_internal_q().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.q");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_q(), target);
  }

  // string h1 = 4;
  if (!this->_internal_h1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_h1().data(), static_cast<int>(this->_internal_h1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.h1");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_h1(), target);
  }

  // string h2 = 5;
  if (!this->_internal_h2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_h2().data(), static_cast<int>(this->_internal_h2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.h2");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_h2(), target);
  }

  // string alpha = 6;
  if (!this->_internal_alpha().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alpha().data(), static_cast<int>(this->_internal_alpha().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.alpha");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_alpha(), target);
  }

  // string beta = 7;
  if (!this->_internal_beta().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_beta().data(), static_cast<int>(this->_internal_beta().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.beta");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_beta(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.RingPedersenParamPriv)
  return target;
}

size_t RingPedersenParamPriv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.RingPedersenParamPriv)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string N_tilde = 1;
  if (!this->_internal_n_tilde().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_n_tilde());
  }

  // string p = 2;
  if (!this->_internal_p().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_p());
  }

  // string q = 3;
  if (!this->_internal_q().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_q());
  }

  // string h1 = 4;
  if (!this->_internal_h1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_h1());
  }

  // string h2 = 5;
  if (!this->_internal_h2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_h2());
  }

  // string alpha = 6;
  if (!this->_internal_alpha().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alpha());
  }

  // string beta = 7;
  if (!this->_internal_beta().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_beta());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RingPedersenParamPriv::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RingPedersenParamPriv::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RingPedersenParamPriv::GetClassData() const { return &_class_data_; }

void RingPedersenParamPriv::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RingPedersenParamPriv *>(to)->MergeFrom(
      static_cast<const RingPedersenParamPriv &>(from));
}


void RingPedersenParamPriv::MergeFrom(const RingPedersenParamPriv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.RingPedersenParamPriv)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_n_tilde().empty()) {
    _internal_set_n_tilde(from._internal_n_tilde());
  }
  if (!from._internal_p().empty()) {
    _internal_set_p(from._internal_p());
  }
  if (!from._internal_q().empty()) {
    _internal_set_q(from._internal_q());
  }
  if (!from._internal_h1().empty()) {
    _internal_set_h1(from._internal_h1());
  }
  if (!from._internal_h2().empty()) {
    _internal_set_h2(from._internal_h2());
  }
  if (!from._internal_alpha().empty()) {
    _internal_set_alpha(from._internal_alpha());
  }
  if (!from._internal_beta().empty()) {
    _internal_set_beta(from._internal_beta());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RingPedersenParamPriv::CopyFrom(const RingPedersenParamPriv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.RingPedersenParamPriv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RingPedersenParamPriv::IsInitialized() const {
  return true;
}

void RingPedersenParamPriv::InternalSwap(RingPedersenParamPriv* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &n_tilde_, lhs_arena,
      &other->n_tilde_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &p_, lhs_arena,
      &other->p_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &q_, lhs_arena,
      &other->q_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &h1_, lhs_arena,
      &other->h1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &h2_, lhs_arena,
      &other->h2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &alpha_, lhs_arena,
      &other->alpha_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &beta_, lhs_arena,
      &other->beta_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RingPedersenParamPriv::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[10]);
}

// ===================================================================

class DLNProof::_Internal {
 public:
};

DLNProof::DLNProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  alpha_arr_(arena),
  t_arr_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.DLNProof)
}
DLNProof::DLNProof(const DLNProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      alpha_arr_(from.alpha_arr_),
      t_arr_(from.t_arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.DLNProof)
}

inline void DLNProof::SharedCtor() {
}

DLNProof::~DLNProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.DLNProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DLNProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DLNProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DLNProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.DLNProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alpha_arr_.Clear();
  t_arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DLNProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string alpha_arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_alpha_arr();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.DLNProof.alpha_arr"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string t_arr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_t_arr();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.DLNProof.t_arr"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DLNProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.DLNProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string alpha_arr = 1;
  for (int i = 0, n = this->_internal_alpha_arr_size(); i < n; i++) {
    const auto& s = this->_internal_alpha_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DLNProof.alpha_arr");
    target = stream->WriteString(1, s, target);
  }

  // repeated string t_arr = 2;
  for (int i = 0, n = this->_internal_t_arr_size(); i < n; i++) {
    const auto& s = this->_internal_t_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DLNProof.t_arr");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.DLNProof)
  return target;
}

size_t DLNProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.DLNProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string alpha_arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(alpha_arr_.size());
  for (int i = 0, n = alpha_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      alpha_arr_.Get(i));
  }

  // repeated string t_arr = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(t_arr_.size());
  for (int i = 0, n = t_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      t_arr_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DLNProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DLNProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DLNProof::GetClassData() const { return &_class_data_; }

void DLNProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DLNProof *>(to)->MergeFrom(
      static_cast<const DLNProof &>(from));
}


void DLNProof::MergeFrom(const DLNProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.DLNProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  alpha_arr_.MergeFrom(from.alpha_arr_);
  t_arr_.MergeFrom(from.t_arr_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DLNProof::CopyFrom(const DLNProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.DLNProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DLNProof::IsInitialized() const {
  return true;
}

void DLNProof::InternalSwap(DLNProof* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  alpha_arr_.InternalSwap(&other->alpha_arr_);
  t_arr_.InternalSwap(&other->t_arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DLNProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[11]);
}

// ===================================================================

class TwoDLNProof::_Internal {
 public:
  static const ::safeheron::proto::DLNProof& dln_proof_1(const TwoDLNProof* msg);
  static const ::safeheron::proto::DLNProof& dln_proof_2(const TwoDLNProof* msg);
};

const ::safeheron::proto::DLNProof&
TwoDLNProof::_Internal::dln_proof_1(const TwoDLNProof* msg) {
  return *msg->dln_proof_1_;
}
const ::safeheron::proto::DLNProof&
TwoDLNProof::_Internal::dln_proof_2(const TwoDLNProof* msg) {
  return *msg->dln_proof_2_;
}
TwoDLNProof::TwoDLNProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.TwoDLNProof)
}
TwoDLNProof::TwoDLNProof(const TwoDLNProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dln_proof_1()) {
    dln_proof_1_ = new ::safeheron::proto::DLNProof(*from.dln_proof_1_);
  } else {
    dln_proof_1_ = nullptr;
  }
  if (from._internal_has_dln_proof_2()) {
    dln_proof_2_ = new ::safeheron::proto::DLNProof(*from.dln_proof_2_);
  } else {
    dln_proof_2_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.TwoDLNProof)
}

inline void TwoDLNProof::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&dln_proof_1_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&dln_proof_2_) -
    reinterpret_cast<char*>(&dln_proof_1_)) + sizeof(dln_proof_2_));
}

TwoDLNProof::~TwoDLNProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.TwoDLNProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TwoDLNProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete dln_proof_1_;
  if (this != internal_default_instance()) delete dln_proof_2_;
}

void TwoDLNProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TwoDLNProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.TwoDLNProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && dln_proof_1_ != nullptr) {
    delete dln_proof_1_;
  }
  dln_proof_1_ = nullptr;
  if (GetArenaForAllocation() == nullptr && dln_proof_2_ != nullptr) {
    delete dln_proof_2_;
  }
  dln_proof_2_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TwoDLNProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .safeheron.proto.DLNProof dln_proof_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dln_proof_1(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.DLNProof dln_proof_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_dln_proof_2(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TwoDLNProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.TwoDLNProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.DLNProof dln_proof_1 = 1;
  if (this->_internal_has_dln_proof_1()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::dln_proof_1(this),
        _Internal::dln_proof_1(this).GetCachedSize(), target, stream);
  }

  // .safeheron.proto.DLNProof dln_proof_2 = 2;
  if (this->_internal_has_dln_proof_2()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::dln_proof_2(this),
        _Internal::dln_proof_2(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.TwoDLNProof)
  return target;
}

size_t TwoDLNProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.TwoDLNProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .safeheron.proto.DLNProof dln_proof_1 = 1;
  if (this->_internal_has_dln_proof_1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dln_proof_1_);
  }

  // .safeheron.proto.DLNProof dln_proof_2 = 2;
  if (this->_internal_has_dln_proof_2()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dln_proof_2_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TwoDLNProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TwoDLNProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TwoDLNProof::GetClassData() const { return &_class_data_; }

void TwoDLNProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TwoDLNProof *>(to)->MergeFrom(
      static_cast<const TwoDLNProof &>(from));
}


void TwoDLNProof::MergeFrom(const TwoDLNProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.TwoDLNProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_dln_proof_1()) {
    _internal_mutable_dln_proof_1()->::safeheron::proto::DLNProof::MergeFrom(from._internal_dln_proof_1());
  }
  if (from._internal_has_dln_proof_2()) {
    _internal_mutable_dln_proof_2()->::safeheron::proto::DLNProof::MergeFrom(from._internal_dln_proof_2());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TwoDLNProof::CopyFrom(const TwoDLNProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.TwoDLNProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TwoDLNProof::IsInitialized() const {
  return true;
}

void TwoDLNProof::InternalSwap(TwoDLNProof* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TwoDLNProof, dln_proof_2_)
      + sizeof(TwoDLNProof::dln_proof_2_)
      - PROTOBUF_FIELD_OFFSET(TwoDLNProof, dln_proof_1_)>(
          reinterpret_cast<char*>(&dln_proof_1_),
          reinterpret_cast<char*>(&other->dln_proof_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TwoDLNProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[12]);
}

// ===================================================================

class PedersenProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& alpha(const PedersenProof* msg);
};

const ::safeheron::proto::CurvePoint&
PedersenProof::_Internal::alpha(const PedersenProof* msg) {
  return *msg->alpha_;
}
void PedersenProof::clear_alpha() {
  if (GetArenaForAllocation() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
}
PedersenProof::PedersenProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PedersenProof)
}
PedersenProof::PedersenProof(const PedersenProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  t_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t().empty()) {
    t_.Set(from._internal_t(), 
      GetArenaForAllocation());
  }
  u_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    u_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_u().empty()) {
    u_.Set(from._internal_u(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_alpha()) {
    alpha_ = new ::safeheron::proto::CurvePoint(*from.alpha_);
  } else {
    alpha_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PedersenProof)
}

inline void PedersenProof::SharedCtor() {
t_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
u_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  u_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
alpha_ = nullptr;
}

PedersenProof::~PedersenProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PedersenProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PedersenProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  t_.Destroy();
  u_.Destroy();
  if (this != internal_default_instance()) delete alpha_;
}

void PedersenProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PedersenProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PedersenProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.ClearToEmpty();
  u_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PedersenProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint Alpha = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_alpha(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_t();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PedersenProof.t"));
        } else
          goto handle_unusual;
        continue;
      // string u = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_u();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PedersenProof.u"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PedersenProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PedersenProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint Alpha = 3;
  if (this->_internal_has_alpha()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::alpha(this),
        _Internal::alpha(this).GetCachedSize(), target, stream);
  }

  // string t = 4;
  if (!this->_internal_t().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PedersenProof.t");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_t(), target);
  }

  // string u = 5;
  if (!this->_internal_u().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PedersenProof.u");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_u(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PedersenProof)
  return target;
}

size_t PedersenProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PedersenProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string t = 4;
  if (!this->_internal_t().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string u = 5;
  if (!this->_internal_u().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // .safeheron.proto.CurvePoint Alpha = 3;
  if (this->_internal_has_alpha()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *alpha_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PedersenProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PedersenProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PedersenProof::GetClassData() const { return &_class_data_; }

void PedersenProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PedersenProof *>(to)->MergeFrom(
      static_cast<const PedersenProof &>(from));
}


void PedersenProof::MergeFrom(const PedersenProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PedersenProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_t().empty()) {
    _internal_set_t(from._internal_t());
  }
  if (!from._internal_u().empty()) {
    _internal_set_u(from._internal_u());
  }
  if (from._internal_has_alpha()) {
    _internal_mutable_alpha()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_alpha());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PedersenProof::CopyFrom(const PedersenProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PedersenProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PedersenProof::IsInitialized() const {
  return true;
}

void PedersenProof::InternalSwap(PedersenProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t_, lhs_arena,
      &other->t_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &u_, lhs_arena,
      &other->u_, rhs_arena
  );
  swap(alpha_, other->alpha_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PedersenProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[13]);
}

// ===================================================================

class PailEncRangeProof_V3_Z::_Internal {
 public:
};

PailEncRangeProof_V3_Z::PailEncRangeProof_V3_Z(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncRangeProof_V3.Z)
}
PailEncRangeProof_V3_Z::PailEncRangeProof_V3_Z(const PailEncRangeProof_V3_Z& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  masked_x_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    masked_x_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_masked_x().empty()) {
    masked_x_.Set(from._internal_masked_x(), 
      GetArenaForAllocation());
  }
  masked_r_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    masked_r_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_masked_r().empty()) {
    masked_r_.Set(from._internal_masked_r(), 
      GetArenaForAllocation());
  }
  w1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w1().empty()) {
    w1_.Set(from._internal_w1(), 
      GetArenaForAllocation());
  }
  w2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w2().empty()) {
    w2_.Set(from._internal_w2(), 
      GetArenaForAllocation());
  }
  r1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    r1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_r1().empty()) {
    r1_.Set(from._internal_r1(), 
      GetArenaForAllocation());
  }
  r2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    r2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_r2().empty()) {
    r2_.Set(from._internal_r2(), 
      GetArenaForAllocation());
  }
  j_ = from.j_;
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncRangeProof_V3.Z)
}

inline void PailEncRangeProof_V3_Z::SharedCtor() {
masked_x_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  masked_x_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
masked_r_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  masked_r_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
r1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  r1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
r2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  r2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
j_ = 0;
}

PailEncRangeProof_V3_Z::~PailEncRangeProof_V3_Z() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncRangeProof_V3.Z)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailEncRangeProof_V3_Z::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  masked_x_.Destroy();
  masked_r_.Destroy();
  w1_.Destroy();
  w2_.Destroy();
  r1_.Destroy();
  r2_.Destroy();
}

void PailEncRangeProof_V3_Z::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailEncRangeProof_V3_Z::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncRangeProof_V3.Z)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  masked_x_.ClearToEmpty();
  masked_r_.ClearToEmpty();
  w1_.ClearToEmpty();
  w2_.ClearToEmpty();
  r1_.ClearToEmpty();
  r2_.ClearToEmpty();
  j_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncRangeProof_V3_Z::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 j = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          j_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string masked_x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_masked_x();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.masked_x"));
        } else
          goto handle_unusual;
        continue;
      // string masked_r = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_masked_r();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.masked_r"));
        } else
          goto handle_unusual;
        continue;
      // string w1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_w1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.w1"));
        } else
          goto handle_unusual;
        continue;
      // string w2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_w2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.w2"));
        } else
          goto handle_unusual;
        continue;
      // string r1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_r1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.r1"));
        } else
          goto handle_unusual;
        continue;
      // string r2 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_r2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.r2"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailEncRangeProof_V3_Z::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncRangeProof_V3.Z)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 j = 1;
  if (this->_internal_j() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_j(), target);
  }

  // string masked_x = 2;
  if (!this->_internal_masked_x().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_masked_x().data(), static_cast<int>(this->_internal_masked_x().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.masked_x");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_masked_x(), target);
  }

  // string masked_r = 3;
  if (!this->_internal_masked_r().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_masked_r().data(), static_cast<int>(this->_internal_masked_r().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.masked_r");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_masked_r(), target);
  }

  // string w1 = 4;
  if (!this->_internal_w1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w1().data(), static_cast<int>(this->_internal_w1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.w1");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_w1(), target);
  }

  // string w2 = 5;
  if (!this->_internal_w2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w2().data(), static_cast<int>(this->_internal_w2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.w2");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_w2(), target);
  }

  // string r1 = 6;
  if (!this->_internal_r1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_r1().data(), static_cast<int>(this->_internal_r1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.r1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_r1(), target);
  }

  // string r2 = 7;
  if (!this->_internal_r2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_r2().data(), static_cast<int>(this->_internal_r2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.r2");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_r2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncRangeProof_V3.Z)
  return target;
}

size_t PailEncRangeProof_V3_Z::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncRangeProof_V3.Z)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string masked_x = 2;
  if (!this->_internal_masked_x().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_masked_x());
  }

  // string masked_r = 3;
  if (!this->_internal_masked_r().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_masked_r());
  }

  // string w1 = 4;
  if (!this->_internal_w1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w1());
  }

  // string w2 = 5;
  if (!this->_internal_w2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w2());
  }

  // string r1 = 6;
  if (!this->_internal_r1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_r1());
  }

  // string r2 = 7;
  if (!this->_internal_r2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_r2());
  }

  // int32 j = 1;
  if (this->_internal_j() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_j());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailEncRangeProof_V3_Z::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailEncRangeProof_V3_Z::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailEncRangeProof_V3_Z::GetClassData() const { return &_class_data_; }

void PailEncRangeProof_V3_Z::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailEncRangeProof_V3_Z *>(to)->MergeFrom(
      static_cast<const PailEncRangeProof_V3_Z &>(from));
}


void PailEncRangeProof_V3_Z::MergeFrom(const PailEncRangeProof_V3_Z& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncRangeProof_V3.Z)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_masked_x().empty()) {
    _internal_set_masked_x(from._internal_masked_x());
  }
  if (!from._internal_masked_r().empty()) {
    _internal_set_masked_r(from._internal_masked_r());
  }
  if (!from._internal_w1().empty()) {
    _internal_set_w1(from._internal_w1());
  }
  if (!from._internal_w2().empty()) {
    _internal_set_w2(from._internal_w2());
  }
  if (!from._internal_r1().empty()) {
    _internal_set_r1(from._internal_r1());
  }
  if (!from._internal_r2().empty()) {
    _internal_set_r2(from._internal_r2());
  }
  if (from._internal_j() != 0) {
    _internal_set_j(from._internal_j());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailEncRangeProof_V3_Z::CopyFrom(const PailEncRangeProof_V3_Z& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncRangeProof_V3.Z)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncRangeProof_V3_Z::IsInitialized() const {
  return true;
}

void PailEncRangeProof_V3_Z::InternalSwap(PailEncRangeProof_V3_Z* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &masked_x_, lhs_arena,
      &other->masked_x_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &masked_r_, lhs_arena,
      &other->masked_r_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w1_, lhs_arena,
      &other->w1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w2_, lhs_arena,
      &other->w2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &r1_, lhs_arena,
      &other->r1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &r2_, lhs_arena,
      &other->r2_, rhs_arena
  );
  swap(j_, other->j_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncRangeProof_V3_Z::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[14]);
}

// ===================================================================

class PailEncRangeProof_V3::_Internal {
 public:
};

PailEncRangeProof_V3::PailEncRangeProof_V3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  c1_arr_(arena),
  c2_arr_(arena),
  z_arr_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncRangeProof_V3)
}
PailEncRangeProof_V3::PailEncRangeProof_V3(const PailEncRangeProof_V3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      c1_arr_(from.c1_arr_),
      c2_arr_(from.c2_arr_),
      z_arr_(from.z_arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncRangeProof_V3)
}

inline void PailEncRangeProof_V3::SharedCtor() {
}

PailEncRangeProof_V3::~PailEncRangeProof_V3() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncRangeProof_V3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailEncRangeProof_V3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PailEncRangeProof_V3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailEncRangeProof_V3::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncRangeProof_V3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  c1_arr_.Clear();
  c2_arr_.Clear();
  z_arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncRangeProof_V3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string c1_arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_c1_arr();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.c1_arr"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string c2_arr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_c2_arr();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.c2_arr"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .safeheron.proto.PailEncRangeProof_V3.Z z_arr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_z_arr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailEncRangeProof_V3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncRangeProof_V3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string c1_arr = 1;
  for (int i = 0, n = this->_internal_c1_arr_size(); i < n; i++) {
    const auto& s = this->_internal_c1_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.c1_arr");
    target = stream->WriteString(1, s, target);
  }

  // repeated string c2_arr = 2;
  for (int i = 0, n = this->_internal_c2_arr_size(); i < n; i++) {
    const auto& s = this->_internal_c2_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.c2_arr");
    target = stream->WriteString(2, s, target);
  }

  // repeated .safeheron.proto.PailEncRangeProof_V3.Z z_arr = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_z_arr_size()); i < n; i++) {
    const auto& repfield = this->_internal_z_arr(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncRangeProof_V3)
  return target;
}

size_t PailEncRangeProof_V3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncRangeProof_V3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string c1_arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(c1_arr_.size());
  for (int i = 0, n = c1_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      c1_arr_.Get(i));
  }

  // repeated string c2_arr = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(c2_arr_.size());
  for (int i = 0, n = c2_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      c2_arr_.Get(i));
  }

  // repeated .safeheron.proto.PailEncRangeProof_V3.Z z_arr = 3;
  total_size += 1UL * this->_internal_z_arr_size();
  for (const auto& msg : this->z_arr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailEncRangeProof_V3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailEncRangeProof_V3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailEncRangeProof_V3::GetClassData() const { return &_class_data_; }

void PailEncRangeProof_V3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailEncRangeProof_V3 *>(to)->MergeFrom(
      static_cast<const PailEncRangeProof_V3 &>(from));
}


void PailEncRangeProof_V3::MergeFrom(const PailEncRangeProof_V3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncRangeProof_V3)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  c1_arr_.MergeFrom(from.c1_arr_);
  c2_arr_.MergeFrom(from.c2_arr_);
  z_arr_.MergeFrom(from.z_arr_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailEncRangeProof_V3::CopyFrom(const PailEncRangeProof_V3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncRangeProof_V3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncRangeProof_V3::IsInitialized() const {
  return true;
}

void PailEncRangeProof_V3::InternalSwap(PailEncRangeProof_V3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  c1_arr_.InternalSwap(&other->c1_arr_);
  c2_arr_.InternalSwap(&other->c2_arr_);
  z_arr_.InternalSwap(&other->z_arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncRangeProof_V3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[15]);
}

// ===================================================================

class PailEncRangeProof_V1::_Internal {
 public:
};

PailEncRangeProof_V1::PailEncRangeProof_V1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncRangeProof_V1)
}
PailEncRangeProof_V1::PailEncRangeProof_V1(const PailEncRangeProof_V1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z().empty()) {
    z_.Set(from._internal_z(), 
      GetArenaForAllocation());
  }
  u_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    u_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_u().empty()) {
    u_.Set(from._internal_u(), 
      GetArenaForAllocation());
  }
  w_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(from._internal_w(), 
      GetArenaForAllocation());
  }
  s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    s_.Set(from._internal_s(), 
      GetArenaForAllocation());
  }
  s1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s1().empty()) {
    s1_.Set(from._internal_s1(), 
      GetArenaForAllocation());
  }
  s2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s2().empty()) {
    s2_.Set(from._internal_s2(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncRangeProof_V1)
}

inline void PailEncRangeProof_V1::SharedCtor() {
z_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
u_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  u_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PailEncRangeProof_V1::~PailEncRangeProof_V1() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncRangeProof_V1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailEncRangeProof_V1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  z_.Destroy();
  u_.Destroy();
  w_.Destroy();
  s_.Destroy();
  s1_.Destroy();
  s2_.Destroy();
}

void PailEncRangeProof_V1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailEncRangeProof_V1::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncRangeProof_V1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  u_.ClearToEmpty();
  w_.ClearToEmpty();
  s_.ClearToEmpty();
  s1_.ClearToEmpty();
  s2_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncRangeProof_V1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string z = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_z();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.z"));
        } else
          goto handle_unusual;
        continue;
      // string u = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_u();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.u"));
        } else
          goto handle_unusual;
        continue;
      // string w = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_w();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.w"));
        } else
          goto handle_unusual;
        continue;
      // string s = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.s"));
        } else
          goto handle_unusual;
        continue;
      // string s1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_s1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.s1"));
        } else
          goto handle_unusual;
        continue;
      // string s2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_s2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.s2"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailEncRangeProof_V1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncRangeProof_V1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string z = 1;
  if (!this->_internal_z().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.z");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_z(), target);
  }

  // string u = 2;
  if (!this->_internal_u().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.u");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_u(), target);
  }

  // string w = 3;
  if (!this->_internal_w().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.w");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_w(), target);
  }

  // string s = 4;
  if (!this->_internal_s().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.s");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_s(), target);
  }

  // string s1 = 5;
  if (!this->_internal_s1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s1().data(), static_cast<int>(this->_internal_s1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.s1");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_s1(), target);
  }

  // string s2 = 6;
  if (!this->_internal_s2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s2().data(), static_cast<int>(this->_internal_s2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.s2");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_s2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncRangeProof_V1)
  return target;
}

size_t PailEncRangeProof_V1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncRangeProof_V1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 1;
  if (!this->_internal_z().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string u = 2;
  if (!this->_internal_u().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // string w = 3;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string s = 4;
  if (!this->_internal_s().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string s1 = 5;
  if (!this->_internal_s1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s1());
  }

  // string s2 = 6;
  if (!this->_internal_s2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailEncRangeProof_V1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailEncRangeProof_V1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailEncRangeProof_V1::GetClassData() const { return &_class_data_; }

void PailEncRangeProof_V1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailEncRangeProof_V1 *>(to)->MergeFrom(
      static_cast<const PailEncRangeProof_V1 &>(from));
}


void PailEncRangeProof_V1::MergeFrom(const PailEncRangeProof_V1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncRangeProof_V1)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_z().empty()) {
    _internal_set_z(from._internal_z());
  }
  if (!from._internal_u().empty()) {
    _internal_set_u(from._internal_u());
  }
  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  if (!from._internal_s().empty()) {
    _internal_set_s(from._internal_s());
  }
  if (!from._internal_s1().empty()) {
    _internal_set_s1(from._internal_s1());
  }
  if (!from._internal_s2().empty()) {
    _internal_set_s2(from._internal_s2());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailEncRangeProof_V1::CopyFrom(const PailEncRangeProof_V1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncRangeProof_V1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncRangeProof_V1::IsInitialized() const {
  return true;
}

void PailEncRangeProof_V1::InternalSwap(PailEncRangeProof_V1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z_, lhs_arena,
      &other->z_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &u_, lhs_arena,
      &other->u_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s_, lhs_arena,
      &other->s_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s1_, lhs_arena,
      &other->s1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s2_, lhs_arena,
      &other->s2_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncRangeProof_V1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[16]);
}

// ===================================================================

class PailEncRangeProof_V2::_Internal {
 public:
};

PailEncRangeProof_V2::PailEncRangeProof_V2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncRangeProof_V2)
}
PailEncRangeProof_V2::PailEncRangeProof_V2(const PailEncRangeProof_V2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    s_.Set(from._internal_s(), 
      GetArenaForAllocation());
  }
  a_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    a_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_a().empty()) {
    a_.Set(from._internal_a(), 
      GetArenaForAllocation());
  }
  c_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    c_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_c().empty()) {
    c_.Set(from._internal_c(), 
      GetArenaForAllocation());
  }
  z1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z1().empty()) {
    z1_.Set(from._internal_z1(), 
      GetArenaForAllocation());
  }
  z2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z2().empty()) {
    z2_.Set(from._internal_z2(), 
      GetArenaForAllocation());
  }
  z3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z3().empty()) {
    z3_.Set(from._internal_z3(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncRangeProof_V2)
}

inline void PailEncRangeProof_V2::SharedCtor() {
s_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
a_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  a_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
c_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  c_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z3_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z3_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PailEncRangeProof_V2::~PailEncRangeProof_V2() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncRangeProof_V2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailEncRangeProof_V2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  s_.Destroy();
  a_.Destroy();
  c_.Destroy();
  z1_.Destroy();
  z2_.Destroy();
  z3_.Destroy();
}

void PailEncRangeProof_V2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailEncRangeProof_V2::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncRangeProof_V2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmpty();
  a_.ClearToEmpty();
  c_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  z3_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncRangeProof_V2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string S = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.S"));
        } else
          goto handle_unusual;
        continue;
      // string A = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_a();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.A"));
        } else
          goto handle_unusual;
        continue;
      // string C = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_c();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.C"));
        } else
          goto handle_unusual;
        continue;
      // string z1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_z1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.z1"));
        } else
          goto handle_unusual;
        continue;
      // string z2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_z2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.z2"));
        } else
          goto handle_unusual;
        continue;
      // string z3 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_z3();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.z3"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailEncRangeProof_V2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncRangeProof_V2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string S = 1;
  if (!this->_internal_s().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.S");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_s(), target);
  }

  // string A = 2;
  if (!this->_internal_a().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.A");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_a(), target);
  }

  // string C = 3;
  if (!this->_internal_c().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_c().data(), static_cast<int>(this->_internal_c().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.C");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_c(), target);
  }

  // string z1 = 4;
  if (!this->_internal_z1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.z1");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_z1(), target);
  }

  // string z2 = 5;
  if (!this->_internal_z2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.z2");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_z2(), target);
  }

  // string z3 = 6;
  if (!this->_internal_z3().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z3().data(), static_cast<int>(this->_internal_z3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.z3");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_z3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncRangeProof_V2)
  return target;
}

size_t PailEncRangeProof_V2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncRangeProof_V2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string S = 1;
  if (!this->_internal_s().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string A = 2;
  if (!this->_internal_a().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string C = 3;
  if (!this->_internal_c().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_c());
  }

  // string z1 = 4;
  if (!this->_internal_z1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 5;
  if (!this->_internal_z2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string z3 = 6;
  if (!this->_internal_z3().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z3());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailEncRangeProof_V2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailEncRangeProof_V2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailEncRangeProof_V2::GetClassData() const { return &_class_data_; }

void PailEncRangeProof_V2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailEncRangeProof_V2 *>(to)->MergeFrom(
      static_cast<const PailEncRangeProof_V2 &>(from));
}


void PailEncRangeProof_V2::MergeFrom(const PailEncRangeProof_V2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncRangeProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_s().empty()) {
    _internal_set_s(from._internal_s());
  }
  if (!from._internal_a().empty()) {
    _internal_set_a(from._internal_a());
  }
  if (!from._internal_c().empty()) {
    _internal_set_c(from._internal_c());
  }
  if (!from._internal_z1().empty()) {
    _internal_set_z1(from._internal_z1());
  }
  if (!from._internal_z2().empty()) {
    _internal_set_z2(from._internal_z2());
  }
  if (!from._internal_z3().empty()) {
    _internal_set_z3(from._internal_z3());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailEncRangeProof_V2::CopyFrom(const PailEncRangeProof_V2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncRangeProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncRangeProof_V2::IsInitialized() const {
  return true;
}

void PailEncRangeProof_V2::InternalSwap(PailEncRangeProof_V2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s_, lhs_arena,
      &other->s_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &a_, lhs_arena,
      &other->a_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &c_, lhs_arena,
      &other->c_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z1_, lhs_arena,
      &other->z1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z2_, lhs_arena,
      &other->z2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z3_, lhs_arena,
      &other->z3_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncRangeProof_V2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[17]);
}

// ===================================================================

class PailEncGroupEleRangeProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& y(const PailEncGroupEleRangeProof* msg);
};

const ::safeheron::proto::CurvePoint&
PailEncGroupEleRangeProof::_Internal::y(const PailEncGroupEleRangeProof* msg) {
  return *msg->y_;
}
void PailEncGroupEleRangeProof::clear_y() {
  if (GetArenaForAllocation() == nullptr && y_ != nullptr) {
    delete y_;
  }
  y_ = nullptr;
}
PailEncGroupEleRangeProof::PailEncGroupEleRangeProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncGroupEleRangeProof)
}
PailEncGroupEleRangeProof::PailEncGroupEleRangeProof(const PailEncGroupEleRangeProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    s_.Set(from._internal_s(), 
      GetArenaForAllocation());
  }
  a_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    a_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_a().empty()) {
    a_.Set(from._internal_a(), 
      GetArenaForAllocation());
  }
  d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_d().empty()) {
    d_.Set(from._internal_d(), 
      GetArenaForAllocation());
  }
  z1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z1().empty()) {
    z1_.Set(from._internal_z1(), 
      GetArenaForAllocation());
  }
  z2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z2().empty()) {
    z2_.Set(from._internal_z2(), 
      GetArenaForAllocation());
  }
  z3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z3().empty()) {
    z3_.Set(from._internal_z3(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_y()) {
    y_ = new ::safeheron::proto::CurvePoint(*from.y_);
  } else {
    y_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncGroupEleRangeProof)
}

inline void PailEncGroupEleRangeProof::SharedCtor() {
s_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
a_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  a_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
d_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  d_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z3_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z3_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
y_ = nullptr;
}

PailEncGroupEleRangeProof::~PailEncGroupEleRangeProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncGroupEleRangeProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailEncGroupEleRangeProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  s_.Destroy();
  a_.Destroy();
  d_.Destroy();
  z1_.Destroy();
  z2_.Destroy();
  z3_.Destroy();
  if (this != internal_default_instance()) delete y_;
}

void PailEncGroupEleRangeProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailEncGroupEleRangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncGroupEleRangeProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmpty();
  a_.ClearToEmpty();
  d_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  z3_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && y_ != nullptr) {
    delete y_;
  }
  y_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncGroupEleRangeProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string S = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.S"));
        } else
          goto handle_unusual;
        continue;
      // string A = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_a();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.A"));
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_y(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string D = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_d();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.D"));
        } else
          goto handle_unusual;
        continue;
      // string z1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_z1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.z1"));
        } else
          goto handle_unusual;
        continue;
      // string z2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_z2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.z2"));
        } else
          goto handle_unusual;
        continue;
      // string z3 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_z3();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.z3"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailEncGroupEleRangeProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncGroupEleRangeProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string S = 1;
  if (!this->_internal_s().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.S");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_s(), target);
  }

  // string A = 2;
  if (!this->_internal_a().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.A");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_a(), target);
  }

  // .safeheron.proto.CurvePoint Y = 3;
  if (this->_internal_has_y()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::y(this),
        _Internal::y(this).GetCachedSize(), target, stream);
  }

  // string D = 4;
  if (!this->_internal_d().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_d().data(), static_cast<int>(this->_internal_d().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.D");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_d(), target);
  }

  // string z1 = 5;
  if (!this->_internal_z1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.z1");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_z1(), target);
  }

  // string z2 = 6;
  if (!this->_internal_z2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.z2");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_z2(), target);
  }

  // string z3 = 7;
  if (!this->_internal_z3().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z3().data(), static_cast<int>(this->_internal_z3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.z3");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_z3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncGroupEleRangeProof)
  return target;
}

size_t PailEncGroupEleRangeProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncGroupEleRangeProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string S = 1;
  if (!this->_internal_s().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string A = 2;
  if (!this->_internal_a().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string D = 4;
  if (!this->_internal_d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_d());
  }

  // string z1 = 5;
  if (!this->_internal_z1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 6;
  if (!this->_internal_z2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string z3 = 7;
  if (!this->_internal_z3().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z3());
  }

  // .safeheron.proto.CurvePoint Y = 3;
  if (this->_internal_has_y()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *y_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailEncGroupEleRangeProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailEncGroupEleRangeProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailEncGroupEleRangeProof::GetClassData() const { return &_class_data_; }

void PailEncGroupEleRangeProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailEncGroupEleRangeProof *>(to)->MergeFrom(
      static_cast<const PailEncGroupEleRangeProof &>(from));
}


void PailEncGroupEleRangeProof::MergeFrom(const PailEncGroupEleRangeProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncGroupEleRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_s().empty()) {
    _internal_set_s(from._internal_s());
  }
  if (!from._internal_a().empty()) {
    _internal_set_a(from._internal_a());
  }
  if (!from._internal_d().empty()) {
    _internal_set_d(from._internal_d());
  }
  if (!from._internal_z1().empty()) {
    _internal_set_z1(from._internal_z1());
  }
  if (!from._internal_z2().empty()) {
    _internal_set_z2(from._internal_z2());
  }
  if (!from._internal_z3().empty()) {
    _internal_set_z3(from._internal_z3());
  }
  if (from._internal_has_y()) {
    _internal_mutable_y()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_y());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailEncGroupEleRangeProof::CopyFrom(const PailEncGroupEleRangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncGroupEleRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncGroupEleRangeProof::IsInitialized() const {
  return true;
}

void PailEncGroupEleRangeProof::InternalSwap(PailEncGroupEleRangeProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s_, lhs_arena,
      &other->s_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &a_, lhs_arena,
      &other->a_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &d_, lhs_arena,
      &other->d_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z1_, lhs_arena,
      &other->z1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z2_, lhs_arena,
      &other->z2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z3_, lhs_arena,
      &other->z3_, rhs_arena
  );
  swap(y_, other->y_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncGroupEleRangeProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[18]);
}

// ===================================================================

class PailAffRangeProof::_Internal {
 public:
};

PailAffRangeProof::PailAffRangeProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailAffRangeProof)
}
PailAffRangeProof::PailAffRangeProof(const PailAffRangeProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z().empty()) {
    z_.Set(from._internal_z(), 
      GetArenaForAllocation());
  }
  z_prime_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z_prime_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z_prime().empty()) {
    z_prime_.Set(from._internal_z_prime(), 
      GetArenaForAllocation());
  }
  t_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t().empty()) {
    t_.Set(from._internal_t(), 
      GetArenaForAllocation());
  }
  v_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    v_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_v().empty()) {
    v_.Set(from._internal_v(), 
      GetArenaForAllocation());
  }
  w_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(from._internal_w(), 
      GetArenaForAllocation());
  }
  s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    s_.Set(from._internal_s(), 
      GetArenaForAllocation());
  }
  s1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s1().empty()) {
    s1_.Set(from._internal_s1(), 
      GetArenaForAllocation());
  }
  s2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s2().empty()) {
    s2_.Set(from._internal_s2(), 
      GetArenaForAllocation());
  }
  t1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t1().empty()) {
    t1_.Set(from._internal_t1(), 
      GetArenaForAllocation());
  }
  t2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t2().empty()) {
    t2_.Set(from._internal_t2(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailAffRangeProof)
}

inline void PailAffRangeProof::SharedCtor() {
z_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z_prime_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z_prime_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
t_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
v_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  v_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
t1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
t2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PailAffRangeProof::~PailAffRangeProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailAffRangeProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailAffRangeProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  z_.Destroy();
  z_prime_.Destroy();
  t_.Destroy();
  v_.Destroy();
  w_.Destroy();
  s_.Destroy();
  s1_.Destroy();
  s2_.Destroy();
  t1_.Destroy();
  t2_.Destroy();
}

void PailAffRangeProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailAffRangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailAffRangeProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  z_prime_.ClearToEmpty();
  t_.ClearToEmpty();
  v_.ClearToEmpty();
  w_.ClearToEmpty();
  s_.ClearToEmpty();
  s1_.ClearToEmpty();
  s2_.ClearToEmpty();
  t1_.ClearToEmpty();
  t2_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailAffRangeProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string z = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_z();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.z"));
        } else
          goto handle_unusual;
        continue;
      // string z_prime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_z_prime();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.z_prime"));
        } else
          goto handle_unusual;
        continue;
      // string t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_t();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.t"));
        } else
          goto handle_unusual;
        continue;
      // string v = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_v();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.v"));
        } else
          goto handle_unusual;
        continue;
      // string w = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_w();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.w"));
        } else
          goto handle_unusual;
        continue;
      // string s = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.s"));
        } else
          goto handle_unusual;
        continue;
      // string s1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_s1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.s1"));
        } else
          goto handle_unusual;
        continue;
      // string s2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_s2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.s2"));
        } else
          goto handle_unusual;
        continue;
      // string t1 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_t1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.t1"));
        } else
          goto handle_unusual;
        continue;
      // string t2 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_t2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.t2"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailAffRangeProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailAffRangeProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string z = 2;
  if (!this->_internal_z().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.z");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_z(), target);
  }

  // string z_prime = 3;
  if (!this->_internal_z_prime().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z_prime().data(), static_cast<int>(this->_internal_z_prime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.z_prime");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z_prime(), target);
  }

  // string t = 4;
  if (!this->_internal_t().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.t");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_t(), target);
  }

  // string v = 5;
  if (!this->_internal_v().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_v().data(), static_cast<int>(this->_internal_v().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.v");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_v(), target);
  }

  // string w = 6;
  if (!this->_internal_w().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.w");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_w(), target);
  }

  // string s = 7;
  if (!this->_internal_s().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.s");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_s(), target);
  }

  // string s1 = 8;
  if (!this->_internal_s1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s1().data(), static_cast<int>(this->_internal_s1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.s1");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_s1(), target);
  }

  // string s2 = 9;
  if (!this->_internal_s2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s2().data(), static_cast<int>(this->_internal_s2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.s2");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_s2(), target);
  }

  // string t1 = 10;
  if (!this->_internal_t1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t1().data(), static_cast<int>(this->_internal_t1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.t1");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_t1(), target);
  }

  // string t2 = 11;
  if (!this->_internal_t2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t2().data(), static_cast<int>(this->_internal_t2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.t2");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_t2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailAffRangeProof)
  return target;
}

size_t PailAffRangeProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailAffRangeProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 2;
  if (!this->_internal_z().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string z_prime = 3;
  if (!this->_internal_z_prime().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z_prime());
  }

  // string t = 4;
  if (!this->_internal_t().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string v = 5;
  if (!this->_internal_v().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_v());
  }

  // string w = 6;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string s = 7;
  if (!this->_internal_s().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string s1 = 8;
  if (!this->_internal_s1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s1());
  }

  // string s2 = 9;
  if (!this->_internal_s2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s2());
  }

  // string t1 = 10;
  if (!this->_internal_t1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t1());
  }

  // string t2 = 11;
  if (!this->_internal_t2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailAffRangeProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailAffRangeProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailAffRangeProof::GetClassData() const { return &_class_data_; }

void PailAffRangeProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailAffRangeProof *>(to)->MergeFrom(
      static_cast<const PailAffRangeProof &>(from));
}


void PailAffRangeProof::MergeFrom(const PailAffRangeProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailAffRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_z().empty()) {
    _internal_set_z(from._internal_z());
  }
  if (!from._internal_z_prime().empty()) {
    _internal_set_z_prime(from._internal_z_prime());
  }
  if (!from._internal_t().empty()) {
    _internal_set_t(from._internal_t());
  }
  if (!from._internal_v().empty()) {
    _internal_set_v(from._internal_v());
  }
  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  if (!from._internal_s().empty()) {
    _internal_set_s(from._internal_s());
  }
  if (!from._internal_s1().empty()) {
    _internal_set_s1(from._internal_s1());
  }
  if (!from._internal_s2().empty()) {
    _internal_set_s2(from._internal_s2());
  }
  if (!from._internal_t1().empty()) {
    _internal_set_t1(from._internal_t1());
  }
  if (!from._internal_t2().empty()) {
    _internal_set_t2(from._internal_t2());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailAffRangeProof::CopyFrom(const PailAffRangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailAffRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailAffRangeProof::IsInitialized() const {
  return true;
}

void PailAffRangeProof::InternalSwap(PailAffRangeProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z_, lhs_arena,
      &other->z_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z_prime_, lhs_arena,
      &other->z_prime_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t_, lhs_arena,
      &other->t_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &v_, lhs_arena,
      &other->v_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s_, lhs_arena,
      &other->s_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s1_, lhs_arena,
      &other->s1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s2_, lhs_arena,
      &other->s2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t1_, lhs_arena,
      &other->t1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t2_, lhs_arena,
      &other->t2_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PailAffRangeProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[19]);
}

// ===================================================================

class PailAffGroupEleRangeProof_V1::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& u(const PailAffGroupEleRangeProof_V1* msg);
};

const ::safeheron::proto::CurvePoint&
PailAffGroupEleRangeProof_V1::_Internal::u(const PailAffGroupEleRangeProof_V1* msg) {
  return *msg->u_;
}
void PailAffGroupEleRangeProof_V1::clear_u() {
  if (GetArenaForAllocation() == nullptr && u_ != nullptr) {
    delete u_;
  }
  u_ = nullptr;
}
PailAffGroupEleRangeProof_V1::PailAffGroupEleRangeProof_V1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailAffGroupEleRangeProof_V1)
}
PailAffGroupEleRangeProof_V1::PailAffGroupEleRangeProof_V1(const PailAffGroupEleRangeProof_V1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z().empty()) {
    z_.Set(from._internal_z(), 
      GetArenaForAllocation());
  }
  z_prime_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z_prime_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z_prime().empty()) {
    z_prime_.Set(from._internal_z_prime(), 
      GetArenaForAllocation());
  }
  t_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t().empty()) {
    t_.Set(from._internal_t(), 
      GetArenaForAllocation());
  }
  v_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    v_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_v().empty()) {
    v_.Set(from._internal_v(), 
      GetArenaForAllocation());
  }
  w_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(from._internal_w(), 
      GetArenaForAllocation());
  }
  s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    s_.Set(from._internal_s(), 
      GetArenaForAllocation());
  }
  s1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s1().empty()) {
    s1_.Set(from._internal_s1(), 
      GetArenaForAllocation());
  }
  s2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s2().empty()) {
    s2_.Set(from._internal_s2(), 
      GetArenaForAllocation());
  }
  t1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t1().empty()) {
    t1_.Set(from._internal_t1(), 
      GetArenaForAllocation());
  }
  t2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t2().empty()) {
    t2_.Set(from._internal_t2(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_u()) {
    u_ = new ::safeheron::proto::CurvePoint(*from.u_);
  } else {
    u_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailAffGroupEleRangeProof_V1)
}

inline void PailAffGroupEleRangeProof_V1::SharedCtor() {
z_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z_prime_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z_prime_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
t_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
v_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  v_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
t1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
t2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
u_ = nullptr;
}

PailAffGroupEleRangeProof_V1::~PailAffGroupEleRangeProof_V1() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailAffGroupEleRangeProof_V1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailAffGroupEleRangeProof_V1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  z_.Destroy();
  z_prime_.Destroy();
  t_.Destroy();
  v_.Destroy();
  w_.Destroy();
  s_.Destroy();
  s1_.Destroy();
  s2_.Destroy();
  t1_.Destroy();
  t2_.Destroy();
  if (this != internal_default_instance()) delete u_;
}

void PailAffGroupEleRangeProof_V1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailAffGroupEleRangeProof_V1::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  z_prime_.ClearToEmpty();
  t_.ClearToEmpty();
  v_.ClearToEmpty();
  w_.ClearToEmpty();
  s_.ClearToEmpty();
  s1_.ClearToEmpty();
  s2_.ClearToEmpty();
  t1_.ClearToEmpty();
  t2_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && u_ != nullptr) {
    delete u_;
  }
  u_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailAffGroupEleRangeProof_V1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint u = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_u(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string z = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_z();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.z"));
        } else
          goto handle_unusual;
        continue;
      // string z_prime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_z_prime();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.z_prime"));
        } else
          goto handle_unusual;
        continue;
      // string t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_t();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.t"));
        } else
          goto handle_unusual;
        continue;
      // string v = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_v();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.v"));
        } else
          goto handle_unusual;
        continue;
      // string w = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_w();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.w"));
        } else
          goto handle_unusual;
        continue;
      // string s = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.s"));
        } else
          goto handle_unusual;
        continue;
      // string s1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_s1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.s1"));
        } else
          goto handle_unusual;
        continue;
      // string s2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_s2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.s2"));
        } else
          goto handle_unusual;
        continue;
      // string t1 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_t1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.t1"));
        } else
          goto handle_unusual;
        continue;
      // string t2 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_t2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.t2"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailAffGroupEleRangeProof_V1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint u = 1;
  if (this->_internal_has_u()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::u(this),
        _Internal::u(this).GetCachedSize(), target, stream);
  }

  // string z = 2;
  if (!this->_internal_z().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.z");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_z(), target);
  }

  // string z_prime = 3;
  if (!this->_internal_z_prime().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z_prime().data(), static_cast<int>(this->_internal_z_prime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.z_prime");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z_prime(), target);
  }

  // string t = 4;
  if (!this->_internal_t().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.t");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_t(), target);
  }

  // string v = 5;
  if (!this->_internal_v().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_v().data(), static_cast<int>(this->_internal_v().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.v");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_v(), target);
  }

  // string w = 6;
  if (!this->_internal_w().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.w");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_w(), target);
  }

  // string s = 7;
  if (!this->_internal_s().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.s");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_s(), target);
  }

  // string s1 = 8;
  if (!this->_internal_s1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s1().data(), static_cast<int>(this->_internal_s1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.s1");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_s1(), target);
  }

  // string s2 = 9;
  if (!this->_internal_s2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s2().data(), static_cast<int>(this->_internal_s2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.s2");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_s2(), target);
  }

  // string t1 = 10;
  if (!this->_internal_t1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t1().data(), static_cast<int>(this->_internal_t1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.t1");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_t1(), target);
  }

  // string t2 = 11;
  if (!this->_internal_t2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t2().data(), static_cast<int>(this->_internal_t2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.t2");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_t2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailAffGroupEleRangeProof_V1)
  return target;
}

size_t PailAffGroupEleRangeProof_V1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 2;
  if (!this->_internal_z().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string z_prime = 3;
  if (!this->_internal_z_prime().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z_prime());
  }

  // string t = 4;
  if (!this->_internal_t().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string v = 5;
  if (!this->_internal_v().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_v());
  }

  // string w = 6;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string s = 7;
  if (!this->_internal_s().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string s1 = 8;
  if (!this->_internal_s1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s1());
  }

  // string s2 = 9;
  if (!this->_internal_s2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s2());
  }

  // string t1 = 10;
  if (!this->_internal_t1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t1());
  }

  // string t2 = 11;
  if (!this->_internal_t2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t2());
  }

  // .safeheron.proto.CurvePoint u = 1;
  if (this->_internal_has_u()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *u_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailAffGroupEleRangeProof_V1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailAffGroupEleRangeProof_V1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailAffGroupEleRangeProof_V1::GetClassData() const { return &_class_data_; }

void PailAffGroupEleRangeProof_V1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailAffGroupEleRangeProof_V1 *>(to)->MergeFrom(
      static_cast<const PailAffGroupEleRangeProof_V1 &>(from));
}


void PailAffGroupEleRangeProof_V1::MergeFrom(const PailAffGroupEleRangeProof_V1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_z().empty()) {
    _internal_set_z(from._internal_z());
  }
  if (!from._internal_z_prime().empty()) {
    _internal_set_z_prime(from._internal_z_prime());
  }
  if (!from._internal_t().empty()) {
    _internal_set_t(from._internal_t());
  }
  if (!from._internal_v().empty()) {
    _internal_set_v(from._internal_v());
  }
  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  if (!from._internal_s().empty()) {
    _internal_set_s(from._internal_s());
  }
  if (!from._internal_s1().empty()) {
    _internal_set_s1(from._internal_s1());
  }
  if (!from._internal_s2().empty()) {
    _internal_set_s2(from._internal_s2());
  }
  if (!from._internal_t1().empty()) {
    _internal_set_t1(from._internal_t1());
  }
  if (!from._internal_t2().empty()) {
    _internal_set_t2(from._internal_t2());
  }
  if (from._internal_has_u()) {
    _internal_mutable_u()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_u());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailAffGroupEleRangeProof_V1::CopyFrom(const PailAffGroupEleRangeProof_V1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailAffGroupEleRangeProof_V1::IsInitialized() const {
  return true;
}

void PailAffGroupEleRangeProof_V1::InternalSwap(PailAffGroupEleRangeProof_V1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z_, lhs_arena,
      &other->z_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z_prime_, lhs_arena,
      &other->z_prime_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t_, lhs_arena,
      &other->t_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &v_, lhs_arena,
      &other->v_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s_, lhs_arena,
      &other->s_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s1_, lhs_arena,
      &other->s1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s2_, lhs_arena,
      &other->s2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t1_, lhs_arena,
      &other->t1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t2_, lhs_arena,
      &other->t2_, rhs_arena
  );
  swap(u_, other->u_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailAffGroupEleRangeProof_V1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[20]);
}

// ===================================================================

class PailAffGroupEleRangeProof_V2::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& bx(const PailAffGroupEleRangeProof_V2* msg);
};

const ::safeheron::proto::CurvePoint&
PailAffGroupEleRangeProof_V2::_Internal::bx(const PailAffGroupEleRangeProof_V2* msg) {
  return *msg->bx_;
}
void PailAffGroupEleRangeProof_V2::clear_bx() {
  if (GetArenaForAllocation() == nullptr && bx_ != nullptr) {
    delete bx_;
  }
  bx_ = nullptr;
}
PailAffGroupEleRangeProof_V2::PailAffGroupEleRangeProof_V2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailAffGroupEleRangeProof_V2)
}
PailAffGroupEleRangeProof_V2::PailAffGroupEleRangeProof_V2(const PailAffGroupEleRangeProof_V2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    s_.Set(from._internal_s(), 
      GetArenaForAllocation());
  }
  t_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t().empty()) {
    t_.Set(from._internal_t(), 
      GetArenaForAllocation());
  }
  a_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    a_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_a().empty()) {
    a_.Set(from._internal_a(), 
      GetArenaForAllocation());
  }
  by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_by().empty()) {
    by_.Set(from._internal_by(), 
      GetArenaForAllocation());
  }
  e_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    e_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_e().empty()) {
    e_.Set(from._internal_e(), 
      GetArenaForAllocation());
  }
  f_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    f_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_f().empty()) {
    f_.Set(from._internal_f(), 
      GetArenaForAllocation());
  }
  z1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z1().empty()) {
    z1_.Set(from._internal_z1(), 
      GetArenaForAllocation());
  }
  z2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z2().empty()) {
    z2_.Set(from._internal_z2(), 
      GetArenaForAllocation());
  }
  z3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z3().empty()) {
    z3_.Set(from._internal_z3(), 
      GetArenaForAllocation());
  }
  z4_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z4_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z4().empty()) {
    z4_.Set(from._internal_z4(), 
      GetArenaForAllocation());
  }
  w_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(from._internal_w(), 
      GetArenaForAllocation());
  }
  wy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    wy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_wy().empty()) {
    wy_.Set(from._internal_wy(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_bx()) {
    bx_ = new ::safeheron::proto::CurvePoint(*from.bx_);
  } else {
    bx_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailAffGroupEleRangeProof_V2)
}

inline void PailAffGroupEleRangeProof_V2::SharedCtor() {
s_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
t_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
a_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  a_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
by_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  by_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
e_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  e_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
f_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  f_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z3_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z3_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z4_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z4_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
wy_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  wy_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bx_ = nullptr;
}

PailAffGroupEleRangeProof_V2::~PailAffGroupEleRangeProof_V2() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailAffGroupEleRangeProof_V2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailAffGroupEleRangeProof_V2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  s_.Destroy();
  t_.Destroy();
  a_.Destroy();
  by_.Destroy();
  e_.Destroy();
  f_.Destroy();
  z1_.Destroy();
  z2_.Destroy();
  z3_.Destroy();
  z4_.Destroy();
  w_.Destroy();
  wy_.Destroy();
  if (this != internal_default_instance()) delete bx_;
}

void PailAffGroupEleRangeProof_V2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailAffGroupEleRangeProof_V2::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmpty();
  t_.ClearToEmpty();
  a_.ClearToEmpty();
  by_.ClearToEmpty();
  e_.ClearToEmpty();
  f_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  z3_.ClearToEmpty();
  z4_.ClearToEmpty();
  w_.ClearToEmpty();
  wy_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && bx_ != nullptr) {
    delete bx_;
  }
  bx_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailAffGroupEleRangeProof_V2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string S = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.S"));
        } else
          goto handle_unusual;
        continue;
      // string T = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_t();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.T"));
        } else
          goto handle_unusual;
        continue;
      // string A = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_a();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.A"));
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Bx = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bx(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string By = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_by();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.By"));
        } else
          goto handle_unusual;
        continue;
      // string E = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_e();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.E"));
        } else
          goto handle_unusual;
        continue;
      // string F = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_f();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.F"));
        } else
          goto handle_unusual;
        continue;
      // string z1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_z1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.z1"));
        } else
          goto handle_unusual;
        continue;
      // string z2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_z2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.z2"));
        } else
          goto handle_unusual;
        continue;
      // string z3 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_z3();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.z3"));
        } else
          goto handle_unusual;
        continue;
      // string z4 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_z4();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.z4"));
        } else
          goto handle_unusual;
        continue;
      // string w = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_w();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.w"));
        } else
          goto handle_unusual;
        continue;
      // string wy = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_wy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.wy"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailAffGroupEleRangeProof_V2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string S = 1;
  if (!this->_internal_s().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.S");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_s(), target);
  }

  // string T = 2;
  if (!this->_internal_t().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.T");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_t(), target);
  }

  // string A = 3;
  if (!this->_internal_a().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.A");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_a(), target);
  }

  // .safeheron.proto.CurvePoint Bx = 4;
  if (this->_internal_has_bx()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::bx(this),
        _Internal::bx(this).GetCachedSize(), target, stream);
  }

  // string By = 5;
  if (!this->_internal_by().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_by().data(), static_cast<int>(this->_internal_by().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.By");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_by(), target);
  }

  // string E = 6;
  if (!this->_internal_e().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_e().data(), static_cast<int>(this->_internal_e().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.E");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_e(), target);
  }

  // string F = 7;
  if (!this->_internal_f().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_f().data(), static_cast<int>(this->_internal_f().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.F");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_f(), target);
  }

  // string z1 = 8;
  if (!this->_internal_z1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.z1");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_z1(), target);
  }

  // string z2 = 9;
  if (!this->_internal_z2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.z2");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_z2(), target);
  }

  // string z3 = 10;
  if (!this->_internal_z3().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z3().data(), static_cast<int>(this->_internal_z3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.z3");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_z3(), target);
  }

  // string z4 = 11;
  if (!this->_internal_z4().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z4().data(), static_cast<int>(this->_internal_z4().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.z4");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_z4(), target);
  }

  // string w = 12;
  if (!this->_internal_w().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.w");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_w(), target);
  }

  // string wy = 13;
  if (!this->_internal_wy().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_wy().data(), static_cast<int>(this->_internal_wy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.wy");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_wy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailAffGroupEleRangeProof_V2)
  return target;
}

size_t PailAffGroupEleRangeProof_V2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string S = 1;
  if (!this->_internal_s().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string T = 2;
  if (!this->_internal_t().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string A = 3;
  if (!this->_internal_a().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string By = 5;
  if (!this->_internal_by().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_by());
  }

  // string E = 6;
  if (!this->_internal_e().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_e());
  }

  // string F = 7;
  if (!this->_internal_f().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_f());
  }

  // string z1 = 8;
  if (!this->_internal_z1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 9;
  if (!this->_internal_z2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string z3 = 10;
  if (!this->_internal_z3().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z3());
  }

  // string z4 = 11;
  if (!this->_internal_z4().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z4());
  }

  // string w = 12;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string wy = 13;
  if (!this->_internal_wy().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_wy());
  }

  // .safeheron.proto.CurvePoint Bx = 4;
  if (this->_internal_has_bx()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bx_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailAffGroupEleRangeProof_V2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailAffGroupEleRangeProof_V2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailAffGroupEleRangeProof_V2::GetClassData() const { return &_class_data_; }

void PailAffGroupEleRangeProof_V2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailAffGroupEleRangeProof_V2 *>(to)->MergeFrom(
      static_cast<const PailAffGroupEleRangeProof_V2 &>(from));
}


void PailAffGroupEleRangeProof_V2::MergeFrom(const PailAffGroupEleRangeProof_V2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_s().empty()) {
    _internal_set_s(from._internal_s());
  }
  if (!from._internal_t().empty()) {
    _internal_set_t(from._internal_t());
  }
  if (!from._internal_a().empty()) {
    _internal_set_a(from._internal_a());
  }
  if (!from._internal_by().empty()) {
    _internal_set_by(from._internal_by());
  }
  if (!from._internal_e().empty()) {
    _internal_set_e(from._internal_e());
  }
  if (!from._internal_f().empty()) {
    _internal_set_f(from._internal_f());
  }
  if (!from._internal_z1().empty()) {
    _internal_set_z1(from._internal_z1());
  }
  if (!from._internal_z2().empty()) {
    _internal_set_z2(from._internal_z2());
  }
  if (!from._internal_z3().empty()) {
    _internal_set_z3(from._internal_z3());
  }
  if (!from._internal_z4().empty()) {
    _internal_set_z4(from._internal_z4());
  }
  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  if (!from._internal_wy().empty()) {
    _internal_set_wy(from._internal_wy());
  }
  if (from._internal_has_bx()) {
    _internal_mutable_bx()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_bx());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailAffGroupEleRangeProof_V2::CopyFrom(const PailAffGroupEleRangeProof_V2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailAffGroupEleRangeProof_V2::IsInitialized() const {
  return true;
}

void PailAffGroupEleRangeProof_V2::InternalSwap(PailAffGroupEleRangeProof_V2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s_, lhs_arena,
      &other->s_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t_, lhs_arena,
      &other->t_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &a_, lhs_arena,
      &other->a_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &by_, lhs_arena,
      &other->by_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &e_, lhs_arena,
      &other->e_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &f_, lhs_arena,
      &other->f_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z1_, lhs_arena,
      &other->z1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z2_, lhs_arena,
      &other->z2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z3_, lhs_arena,
      &other->z3_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z4_, lhs_arena,
      &other->z4_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &wy_, lhs_arena,
      &other->wy_, rhs_arena
  );
  swap(bx_, other->bx_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailAffGroupEleRangeProof_V2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[21]);
}

// ===================================================================

class DlogEqualityProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& a(const DlogEqualityProof* msg);
  static const ::safeheron::proto::CurvePoint& b(const DlogEqualityProof* msg);
};

const ::safeheron::proto::CurvePoint&
DlogEqualityProof::_Internal::a(const DlogEqualityProof* msg) {
  return *msg->a_;
}
const ::safeheron::proto::CurvePoint&
DlogEqualityProof::_Internal::b(const DlogEqualityProof* msg) {
  return *msg->b_;
}
void DlogEqualityProof::clear_a() {
  if (GetArenaForAllocation() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
}
void DlogEqualityProof::clear_b() {
  if (GetArenaForAllocation() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
}
DlogEqualityProof::DlogEqualityProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.DlogEqualityProof)
}
DlogEqualityProof::DlogEqualityProof(const DlogEqualityProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z().empty()) {
    z_.Set(from._internal_z(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_a()) {
    a_ = new ::safeheron::proto::CurvePoint(*from.a_);
  } else {
    a_ = nullptr;
  }
  if (from._internal_has_b()) {
    b_ = new ::safeheron::proto::CurvePoint(*from.b_);
  } else {
    b_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.DlogEqualityProof)
}

inline void DlogEqualityProof::SharedCtor() {
z_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&a_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&a_)) + sizeof(b_));
}

DlogEqualityProof::~DlogEqualityProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.DlogEqualityProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DlogEqualityProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  z_.Destroy();
  if (this != internal_default_instance()) delete a_;
  if (this != internal_default_instance()) delete b_;
}

void DlogEqualityProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DlogEqualityProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.DlogEqualityProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
  if (GetArenaForAllocation() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DlogEqualityProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint A = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_a(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint B = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_b(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_z();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.DlogEqualityProof.z"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DlogEqualityProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.DlogEqualityProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint A = 1;
  if (this->_internal_has_a()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::a(this),
        _Internal::a(this).GetCachedSize(), target, stream);
  }

  // .safeheron.proto.CurvePoint B = 2;
  if (this->_internal_has_b()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::b(this),
        _Internal::b(this).GetCachedSize(), target, stream);
  }

  // string z = 3;
  if (!this->_internal_z().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DlogEqualityProof.z");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.DlogEqualityProof)
  return target;
}

size_t DlogEqualityProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.DlogEqualityProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 3;
  if (!this->_internal_z().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // .safeheron.proto.CurvePoint A = 1;
  if (this->_internal_has_a()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *a_);
  }

  // .safeheron.proto.CurvePoint B = 2;
  if (this->_internal_has_b()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *b_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DlogEqualityProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DlogEqualityProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DlogEqualityProof::GetClassData() const { return &_class_data_; }

void DlogEqualityProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DlogEqualityProof *>(to)->MergeFrom(
      static_cast<const DlogEqualityProof &>(from));
}


void DlogEqualityProof::MergeFrom(const DlogEqualityProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.DlogEqualityProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_z().empty()) {
    _internal_set_z(from._internal_z());
  }
  if (from._internal_has_a()) {
    _internal_mutable_a()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_a());
  }
  if (from._internal_has_b()) {
    _internal_mutable_b()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_b());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DlogEqualityProof::CopyFrom(const DlogEqualityProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.DlogEqualityProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DlogEqualityProof::IsInitialized() const {
  return true;
}

void DlogEqualityProof::InternalSwap(DlogEqualityProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z_, lhs_arena,
      &other->z_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DlogEqualityProof, b_)
      + sizeof(DlogEqualityProof::b_)
      - PROTOBUF_FIELD_OFFSET(DlogEqualityProof, a_)>(
          reinterpret_cast<char*>(&a_),
          reinterpret_cast<char*>(&other->a_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DlogEqualityProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[22]);
}

// ===================================================================

class DlogElGamalComProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& a(const DlogElGamalComProof* msg);
  static const ::safeheron::proto::CurvePoint& n(const DlogElGamalComProof* msg);
  static const ::safeheron::proto::CurvePoint& b(const DlogElGamalComProof* msg);
};

const ::safeheron::proto::CurvePoint&
DlogElGamalComProof::_Internal::a(const DlogElGamalComProof* msg) {
  return *msg->a_;
}
const ::safeheron::proto::CurvePoint&
DlogElGamalComProof::_Internal::n(const DlogElGamalComProof* msg) {
  return *msg->n_;
}
const ::safeheron::proto::CurvePoint&
DlogElGamalComProof::_Internal::b(const DlogElGamalComProof* msg) {
  return *msg->b_;
}
void DlogElGamalComProof::clear_a() {
  if (GetArenaForAllocation() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
}
void DlogElGamalComProof::clear_n() {
  if (GetArenaForAllocation() == nullptr && n_ != nullptr) {
    delete n_;
  }
  n_ = nullptr;
}
void DlogElGamalComProof::clear_b() {
  if (GetArenaForAllocation() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
}
DlogElGamalComProof::DlogElGamalComProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.DlogElGamalComProof)
}
DlogElGamalComProof::DlogElGamalComProof(const DlogElGamalComProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z().empty()) {
    z_.Set(from._internal_z(), 
      GetArenaForAllocation());
  }
  u_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    u_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_u().empty()) {
    u_.Set(from._internal_u(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_a()) {
    a_ = new ::safeheron::proto::CurvePoint(*from.a_);
  } else {
    a_ = nullptr;
  }
  if (from._internal_has_n()) {
    n_ = new ::safeheron::proto::CurvePoint(*from.n_);
  } else {
    n_ = nullptr;
  }
  if (from._internal_has_b()) {
    b_ = new ::safeheron::proto::CurvePoint(*from.b_);
  } else {
    b_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.DlogElGamalComProof)
}

inline void DlogElGamalComProof::SharedCtor() {
z_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
u_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  u_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&a_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&a_)) + sizeof(b_));
}

DlogElGamalComProof::~DlogElGamalComProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.DlogElGamalComProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DlogElGamalComProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  z_.Destroy();
  u_.Destroy();
  if (this != internal_default_instance()) delete a_;
  if (this != internal_default_instance()) delete n_;
  if (this != internal_default_instance()) delete b_;
}

void DlogElGamalComProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DlogElGamalComProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.DlogElGamalComProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  u_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
  if (GetArenaForAllocation() == nullptr && n_ != nullptr) {
    delete n_;
  }
  n_ = nullptr;
  if (GetArenaForAllocation() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DlogElGamalComProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint A = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_a(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint N = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_n(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint B = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_b(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string z = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_z();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.DlogElGamalComProof.z"));
        } else
          goto handle_unusual;
        continue;
      // string u = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_u();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.DlogElGamalComProof.u"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DlogElGamalComProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.DlogElGamalComProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint A = 1;
  if (this->_internal_has_a()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::a(this),
        _Internal::a(this).GetCachedSize(), target, stream);
  }

  // .safeheron.proto.CurvePoint N = 2;
  if (this->_internal_has_n()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::n(this),
        _Internal::n(this).GetCachedSize(), target, stream);
  }

  // .safeheron.proto.CurvePoint B = 3;
  if (this->_internal_has_b()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::b(this),
        _Internal::b(this).GetCachedSize(), target, stream);
  }

  // string z = 4;
  if (!this->_internal_z().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DlogElGamalComProof.z");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_z(), target);
  }

  // string u = 5;
  if (!this->_internal_u().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DlogElGamalComProof.u");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_u(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.DlogElGamalComProof)
  return target;
}

size_t DlogElGamalComProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.DlogElGamalComProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 4;
  if (!this->_internal_z().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string u = 5;
  if (!this->_internal_u().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // .safeheron.proto.CurvePoint A = 1;
  if (this->_internal_has_a()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *a_);
  }

  // .safeheron.proto.CurvePoint N = 2;
  if (this->_internal_has_n()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *n_);
  }

  // .safeheron.proto.CurvePoint B = 3;
  if (this->_internal_has_b()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *b_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DlogElGamalComProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DlogElGamalComProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DlogElGamalComProof::GetClassData() const { return &_class_data_; }

void DlogElGamalComProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DlogElGamalComProof *>(to)->MergeFrom(
      static_cast<const DlogElGamalComProof &>(from));
}


void DlogElGamalComProof::MergeFrom(const DlogElGamalComProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.DlogElGamalComProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_z().empty()) {
    _internal_set_z(from._internal_z());
  }
  if (!from._internal_u().empty()) {
    _internal_set_u(from._internal_u());
  }
  if (from._internal_has_a()) {
    _internal_mutable_a()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_a());
  }
  if (from._internal_has_n()) {
    _internal_mutable_n()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_n());
  }
  if (from._internal_has_b()) {
    _internal_mutable_b()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_b());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DlogElGamalComProof::CopyFrom(const DlogElGamalComProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.DlogElGamalComProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DlogElGamalComProof::IsInitialized() const {
  return true;
}

void DlogElGamalComProof::InternalSwap(DlogElGamalComProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z_, lhs_arena,
      &other->z_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &u_, lhs_arena,
      &other->u_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DlogElGamalComProof, b_)
      + sizeof(DlogElGamalComProof::b_)
      - PROTOBUF_FIELD_OFFSET(DlogElGamalComProof, a_)>(
          reinterpret_cast<char*>(&a_),
          reinterpret_cast<char*>(&other->a_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DlogElGamalComProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[23]);
}

// ===================================================================

class PailEncElGamalComRangeProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& y(const PailEncElGamalComRangeProof* msg);
  static const ::safeheron::proto::CurvePoint& z(const PailEncElGamalComRangeProof* msg);
};

const ::safeheron::proto::CurvePoint&
PailEncElGamalComRangeProof::_Internal::y(const PailEncElGamalComRangeProof* msg) {
  return *msg->y_;
}
const ::safeheron::proto::CurvePoint&
PailEncElGamalComRangeProof::_Internal::z(const PailEncElGamalComRangeProof* msg) {
  return *msg->z_;
}
void PailEncElGamalComRangeProof::clear_y() {
  if (GetArenaForAllocation() == nullptr && y_ != nullptr) {
    delete y_;
  }
  y_ = nullptr;
}
void PailEncElGamalComRangeProof::clear_z() {
  if (GetArenaForAllocation() == nullptr && z_ != nullptr) {
    delete z_;
  }
  z_ = nullptr;
}
PailEncElGamalComRangeProof::PailEncElGamalComRangeProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncElGamalComRangeProof)
}
PailEncElGamalComRangeProof::PailEncElGamalComRangeProof(const PailEncElGamalComRangeProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    s_.Set(from._internal_s(), 
      GetArenaForAllocation());
  }
  d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_d().empty()) {
    d_.Set(from._internal_d(), 
      GetArenaForAllocation());
  }
  t_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t().empty()) {
    t_.Set(from._internal_t(), 
      GetArenaForAllocation());
  }
  z1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z1().empty()) {
    z1_.Set(from._internal_z1(), 
      GetArenaForAllocation());
  }
  w_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(from._internal_w(), 
      GetArenaForAllocation());
  }
  z2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z2().empty()) {
    z2_.Set(from._internal_z2(), 
      GetArenaForAllocation());
  }
  z3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z3().empty()) {
    z3_.Set(from._internal_z3(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_y()) {
    y_ = new ::safeheron::proto::CurvePoint(*from.y_);
  } else {
    y_ = nullptr;
  }
  if (from._internal_has_z()) {
    z_ = new ::safeheron::proto::CurvePoint(*from.z_);
  } else {
    z_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncElGamalComRangeProof)
}

inline void PailEncElGamalComRangeProof::SharedCtor() {
s_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
d_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  d_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
t_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z3_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z3_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&y_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&y_)) + sizeof(z_));
}

PailEncElGamalComRangeProof::~PailEncElGamalComRangeProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncElGamalComRangeProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailEncElGamalComRangeProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  s_.Destroy();
  d_.Destroy();
  t_.Destroy();
  z1_.Destroy();
  w_.Destroy();
  z2_.Destroy();
  z3_.Destroy();
  if (this != internal_default_instance()) delete y_;
  if (this != internal_default_instance()) delete z_;
}

void PailEncElGamalComRangeProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailEncElGamalComRangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncElGamalComRangeProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmpty();
  d_.ClearToEmpty();
  t_.ClearToEmpty();
  z1_.ClearToEmpty();
  w_.ClearToEmpty();
  z2_.ClearToEmpty();
  z3_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && y_ != nullptr) {
    delete y_;
  }
  y_ = nullptr;
  if (GetArenaForAllocation() == nullptr && z_ != nullptr) {
    delete z_;
  }
  z_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncElGamalComRangeProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string S = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.S"));
        } else
          goto handle_unusual;
        continue;
      // string D = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_d();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.D"));
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_y(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Z = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_z(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string T = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_t();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.T"));
        } else
          goto handle_unusual;
        continue;
      // string z1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_z1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.z1"));
        } else
          goto handle_unusual;
        continue;
      // string w = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_w();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.w"));
        } else
          goto handle_unusual;
        continue;
      // string z2 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_z2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.z2"));
        } else
          goto handle_unusual;
        continue;
      // string z3 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_z3();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.z3"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailEncElGamalComRangeProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncElGamalComRangeProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string S = 1;
  if (!this->_internal_s().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.S");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_s(), target);
  }

  // string D = 2;
  if (!this->_internal_d().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_d().data(), static_cast<int>(this->_internal_d().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.D");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_d(), target);
  }

  // .safeheron.proto.CurvePoint Y = 3;
  if (this->_internal_has_y()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::y(this),
        _Internal::y(this).GetCachedSize(), target, stream);
  }

  // .safeheron.proto.CurvePoint Z = 4;
  if (this->_internal_has_z()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::z(this),
        _Internal::z(this).GetCachedSize(), target, stream);
  }

  // string T = 5;
  if (!this->_internal_t().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.T");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_t(), target);
  }

  // string z1 = 6;
  if (!this->_internal_z1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.z1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_z1(), target);
  }

  // string w = 7;
  if (!this->_internal_w().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.w");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_w(), target);
  }

  // string z2 = 8;
  if (!this->_internal_z2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.z2");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_z2(), target);
  }

  // string z3 = 9;
  if (!this->_internal_z3().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z3().data(), static_cast<int>(this->_internal_z3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.z3");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_z3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncElGamalComRangeProof)
  return target;
}

size_t PailEncElGamalComRangeProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncElGamalComRangeProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string S = 1;
  if (!this->_internal_s().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string D = 2;
  if (!this->_internal_d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_d());
  }

  // string T = 5;
  if (!this->_internal_t().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string z1 = 6;
  if (!this->_internal_z1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string w = 7;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string z2 = 8;
  if (!this->_internal_z2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string z3 = 9;
  if (!this->_internal_z3().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z3());
  }

  // .safeheron.proto.CurvePoint Y = 3;
  if (this->_internal_has_y()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *y_);
  }

  // .safeheron.proto.CurvePoint Z = 4;
  if (this->_internal_has_z()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *z_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailEncElGamalComRangeProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailEncElGamalComRangeProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailEncElGamalComRangeProof::GetClassData() const { return &_class_data_; }

void PailEncElGamalComRangeProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailEncElGamalComRangeProof *>(to)->MergeFrom(
      static_cast<const PailEncElGamalComRangeProof &>(from));
}


void PailEncElGamalComRangeProof::MergeFrom(const PailEncElGamalComRangeProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncElGamalComRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_s().empty()) {
    _internal_set_s(from._internal_s());
  }
  if (!from._internal_d().empty()) {
    _internal_set_d(from._internal_d());
  }
  if (!from._internal_t().empty()) {
    _internal_set_t(from._internal_t());
  }
  if (!from._internal_z1().empty()) {
    _internal_set_z1(from._internal_z1());
  }
  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  if (!from._internal_z2().empty()) {
    _internal_set_z2(from._internal_z2());
  }
  if (!from._internal_z3().empty()) {
    _internal_set_z3(from._internal_z3());
  }
  if (from._internal_has_y()) {
    _internal_mutable_y()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_y());
  }
  if (from._internal_has_z()) {
    _internal_mutable_z()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_z());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailEncElGamalComRangeProof::CopyFrom(const PailEncElGamalComRangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncElGamalComRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncElGamalComRangeProof::IsInitialized() const {
  return true;
}

void PailEncElGamalComRangeProof::InternalSwap(PailEncElGamalComRangeProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s_, lhs_arena,
      &other->s_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &d_, lhs_arena,
      &other->d_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t_, lhs_arena,
      &other->t_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z1_, lhs_arena,
      &other->z1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z2_, lhs_arena,
      &other->z2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z3_, lhs_arena,
      &other->z3_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PailEncElGamalComRangeProof, z_)
      + sizeof(PailEncElGamalComRangeProof::z_)
      - PROTOBUF_FIELD_OFFSET(PailEncElGamalComRangeProof, y_)>(
          reinterpret_cast<char*>(&y_),
          reinterpret_cast<char*>(&other->y_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncElGamalComRangeProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[24]);
}

// ===================================================================

class NoSmallFactorProof::_Internal {
 public:
};

NoSmallFactorProof::NoSmallFactorProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.NoSmallFactorProof)
}
NoSmallFactorProof::NoSmallFactorProof(const NoSmallFactorProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  p_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    p_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_p().empty()) {
    p_.Set(from._internal_p(), 
      GetArenaForAllocation());
  }
  q_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    q_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_q().empty()) {
    q_.Set(from._internal_q(), 
      GetArenaForAllocation());
  }
  a_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    a_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_a().empty()) {
    a_.Set(from._internal_a(), 
      GetArenaForAllocation());
  }
  b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    b_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_b().empty()) {
    b_.Set(from._internal_b(), 
      GetArenaForAllocation());
  }
  t_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t().empty()) {
    t_.Set(from._internal_t(), 
      GetArenaForAllocation());
  }
  sigma_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sigma_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sigma().empty()) {
    sigma_.Set(from._internal_sigma(), 
      GetArenaForAllocation());
  }
  z1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z1().empty()) {
    z1_.Set(from._internal_z1(), 
      GetArenaForAllocation());
  }
  z2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z2().empty()) {
    z2_.Set(from._internal_z2(), 
      GetArenaForAllocation());
  }
  w1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w1().empty()) {
    w1_.Set(from._internal_w1(), 
      GetArenaForAllocation());
  }
  w2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w2().empty()) {
    w2_.Set(from._internal_w2(), 
      GetArenaForAllocation());
  }
  v_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    v_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_v().empty()) {
    v_.Set(from._internal_v(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.NoSmallFactorProof)
}

inline void NoSmallFactorProof::SharedCtor() {
p_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  p_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
q_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  q_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
a_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  a_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
b_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  b_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
t_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sigma_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sigma_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
v_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  v_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NoSmallFactorProof::~NoSmallFactorProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.NoSmallFactorProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NoSmallFactorProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  p_.Destroy();
  q_.Destroy();
  a_.Destroy();
  b_.Destroy();
  t_.Destroy();
  sigma_.Destroy();
  z1_.Destroy();
  z2_.Destroy();
  w1_.Destroy();
  w2_.Destroy();
  v_.Destroy();
}

void NoSmallFactorProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NoSmallFactorProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.NoSmallFactorProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  p_.ClearToEmpty();
  q_.ClearToEmpty();
  a_.ClearToEmpty();
  b_.ClearToEmpty();
  t_.ClearToEmpty();
  sigma_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  w1_.ClearToEmpty();
  w2_.ClearToEmpty();
  v_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NoSmallFactorProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string P = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_p();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.P"));
        } else
          goto handle_unusual;
        continue;
      // string Q = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_q();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.Q"));
        } else
          goto handle_unusual;
        continue;
      // string A = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_a();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.A"));
        } else
          goto handle_unusual;
        continue;
      // string B = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_b();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.B"));
        } else
          goto handle_unusual;
        continue;
      // string T = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_t();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.T"));
        } else
          goto handle_unusual;
        continue;
      // string sigma = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_sigma();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.sigma"));
        } else
          goto handle_unusual;
        continue;
      // string z1 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_z1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.z1"));
        } else
          goto handle_unusual;
        continue;
      // string z2 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_z2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.z2"));
        } else
          goto handle_unusual;
        continue;
      // string w1 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_w1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.w1"));
        } else
          goto handle_unusual;
        continue;
      // string w2 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_w2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.w2"));
        } else
          goto handle_unusual;
        continue;
      // string v = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_v();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.v"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NoSmallFactorProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.NoSmallFactorProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string P = 1;
  if (!this->_internal_p().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_p().data(), static_cast<int>(this->_internal_p().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.P");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_p(), target);
  }

  // string Q = 2;
  if (!this->_internal_q().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_q().data(), static_cast<int>(this->_internal_q().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.Q");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_q(), target);
  }

  // string A = 3;
  if (!this->_internal_a().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.A");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_a(), target);
  }

  // string B = 4;
  if (!this->_internal_b().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_b().data(), static_cast<int>(this->_internal_b().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.B");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_b(), target);
  }

  // string T = 5;
  if (!this->_internal_t().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.T");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_t(), target);
  }

  // string sigma = 6;
  if (!this->_internal_sigma().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sigma().data(), static_cast<int>(this->_internal_sigma().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.sigma");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_sigma(), target);
  }

  // string z1 = 7;
  if (!this->_internal_z1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.z1");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_z1(), target);
  }

  // string z2 = 8;
  if (!this->_internal_z2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.z2");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_z2(), target);
  }

  // string w1 = 9;
  if (!this->_internal_w1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w1().data(), static_cast<int>(this->_internal_w1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.w1");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_w1(), target);
  }

  // string w2 = 10;
  if (!this->_internal_w2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w2().data(), static_cast<int>(this->_internal_w2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.w2");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_w2(), target);
  }

  // string v = 11;
  if (!this->_internal_v().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_v().data(), static_cast<int>(this->_internal_v().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.v");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_v(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.NoSmallFactorProof)
  return target;
}

size_t NoSmallFactorProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.NoSmallFactorProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string P = 1;
  if (!this->_internal_p().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_p());
  }

  // string Q = 2;
  if (!this->_internal_q().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_q());
  }

  // string A = 3;
  if (!this->_internal_a().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string B = 4;
  if (!this->_internal_b().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_b());
  }

  // string T = 5;
  if (!this->_internal_t().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string sigma = 6;
  if (!this->_internal_sigma().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sigma());
  }

  // string z1 = 7;
  if (!this->_internal_z1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 8;
  if (!this->_internal_z2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string w1 = 9;
  if (!this->_internal_w1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w1());
  }

  // string w2 = 10;
  if (!this->_internal_w2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w2());
  }

  // string v = 11;
  if (!this->_internal_v().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_v());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NoSmallFactorProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NoSmallFactorProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NoSmallFactorProof::GetClassData() const { return &_class_data_; }

void NoSmallFactorProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NoSmallFactorProof *>(to)->MergeFrom(
      static_cast<const NoSmallFactorProof &>(from));
}


void NoSmallFactorProof::MergeFrom(const NoSmallFactorProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.NoSmallFactorProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_p().empty()) {
    _internal_set_p(from._internal_p());
  }
  if (!from._internal_q().empty()) {
    _internal_set_q(from._internal_q());
  }
  if (!from._internal_a().empty()) {
    _internal_set_a(from._internal_a());
  }
  if (!from._internal_b().empty()) {
    _internal_set_b(from._internal_b());
  }
  if (!from._internal_t().empty()) {
    _internal_set_t(from._internal_t());
  }
  if (!from._internal_sigma().empty()) {
    _internal_set_sigma(from._internal_sigma());
  }
  if (!from._internal_z1().empty()) {
    _internal_set_z1(from._internal_z1());
  }
  if (!from._internal_z2().empty()) {
    _internal_set_z2(from._internal_z2());
  }
  if (!from._internal_w1().empty()) {
    _internal_set_w1(from._internal_w1());
  }
  if (!from._internal_w2().empty()) {
    _internal_set_w2(from._internal_w2());
  }
  if (!from._internal_v().empty()) {
    _internal_set_v(from._internal_v());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NoSmallFactorProof::CopyFrom(const NoSmallFactorProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.NoSmallFactorProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NoSmallFactorProof::IsInitialized() const {
  return true;
}

void NoSmallFactorProof::InternalSwap(NoSmallFactorProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &p_, lhs_arena,
      &other->p_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &q_, lhs_arena,
      &other->q_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &a_, lhs_arena,
      &other->a_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &b_, lhs_arena,
      &other->b_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t_, lhs_arena,
      &other->t_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &sigma_, lhs_arena,
      &other->sigma_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z1_, lhs_arena,
      &other->z1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z2_, lhs_arena,
      &other->z2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w1_, lhs_arena,
      &other->w1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w2_, lhs_arena,
      &other->w2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &v_, lhs_arena,
      &other->v_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NoSmallFactorProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[25]);
}

// ===================================================================

class PailBlumModulusProof::_Internal {
 public:
};

PailBlumModulusProof::PailBlumModulusProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  x_arr_(arena),
  a_arr_(arena),
  b_arr_(arena),
  z_arr_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailBlumModulusProof)
}
PailBlumModulusProof::PailBlumModulusProof(const PailBlumModulusProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      x_arr_(from.x_arr_),
      a_arr_(from.a_arr_),
      b_arr_(from.b_arr_),
      z_arr_(from.z_arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  w_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(from._internal_w(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailBlumModulusProof)
}

inline void PailBlumModulusProof::SharedCtor() {
w_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PailBlumModulusProof::~PailBlumModulusProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailBlumModulusProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailBlumModulusProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  w_.Destroy();
}

void PailBlumModulusProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailBlumModulusProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailBlumModulusProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_arr_.Clear();
  a_arr_.Clear();
  b_arr_.Clear();
  z_arr_.Clear();
  w_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailBlumModulusProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string x_arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_x_arr();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailBlumModulusProof.x_arr"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 a_arr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_a_arr(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_a_arr(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 b_arr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_b_arr(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_b_arr(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string z_arr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_z_arr();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailBlumModulusProof.z_arr"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string w = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_w();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailBlumModulusProof.w"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailBlumModulusProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailBlumModulusProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string x_arr = 1;
  for (int i = 0, n = this->_internal_x_arr_size(); i < n; i++) {
    const auto& s = this->_internal_x_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailBlumModulusProof.x_arr");
    target = stream->WriteString(1, s, target);
  }

  // repeated int32 a_arr = 2;
  {
    int byte_size = _a_arr_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_a_arr(), byte_size, target);
    }
  }

  // repeated int32 b_arr = 3;
  {
    int byte_size = _b_arr_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_b_arr(), byte_size, target);
    }
  }

  // repeated string z_arr = 4;
  for (int i = 0, n = this->_internal_z_arr_size(); i < n; i++) {
    const auto& s = this->_internal_z_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailBlumModulusProof.z_arr");
    target = stream->WriteString(4, s, target);
  }

  // string w = 5;
  if (!this->_internal_w().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailBlumModulusProof.w");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_w(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailBlumModulusProof)
  return target;
}

size_t PailBlumModulusProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailBlumModulusProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string x_arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(x_arr_.size());
  for (int i = 0, n = x_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      x_arr_.Get(i));
  }

  // repeated int32 a_arr = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->a_arr_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _a_arr_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 b_arr = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->b_arr_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _b_arr_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string z_arr = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(z_arr_.size());
  for (int i = 0, n = z_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      z_arr_.Get(i));
  }

  // string w = 5;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailBlumModulusProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailBlumModulusProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailBlumModulusProof::GetClassData() const { return &_class_data_; }

void PailBlumModulusProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailBlumModulusProof *>(to)->MergeFrom(
      static_cast<const PailBlumModulusProof &>(from));
}


void PailBlumModulusProof::MergeFrom(const PailBlumModulusProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailBlumModulusProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  x_arr_.MergeFrom(from.x_arr_);
  a_arr_.MergeFrom(from.a_arr_);
  b_arr_.MergeFrom(from.b_arr_);
  z_arr_.MergeFrom(from.z_arr_);
  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailBlumModulusProof::CopyFrom(const PailBlumModulusProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailBlumModulusProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailBlumModulusProof::IsInitialized() const {
  return true;
}

void PailBlumModulusProof::InternalSwap(PailBlumModulusProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  x_arr_.InternalSwap(&other->x_arr_);
  a_arr_.InternalSwap(&other->a_arr_);
  b_arr_.InternalSwap(&other->b_arr_);
  z_arr_.InternalSwap(&other->z_arr_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PailBlumModulusProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[26]);
}

// ===================================================================

class PailDecModuloProof::_Internal {
 public:
};

PailDecModuloProof::PailDecModuloProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailDecModuloProof)
}
PailDecModuloProof::PailDecModuloProof(const PailDecModuloProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    s_.Set(from._internal_s(), 
      GetArenaForAllocation());
  }
  t_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    t_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_t().empty()) {
    t_.Set(from._internal_t(), 
      GetArenaForAllocation());
  }
  a_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    a_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_a().empty()) {
    a_.Set(from._internal_a(), 
      GetArenaForAllocation());
  }
  gamma_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    gamma_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_gamma().empty()) {
    gamma_.Set(from._internal_gamma(), 
      GetArenaForAllocation());
  }
  z1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z1().empty()) {
    z1_.Set(from._internal_z1(), 
      GetArenaForAllocation());
  }
  z2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z2().empty()) {
    z2_.Set(from._internal_z2(), 
      GetArenaForAllocation());
  }
  w_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(from._internal_w(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailDecModuloProof)
}

inline void PailDecModuloProof::SharedCtor() {
s_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
t_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  t_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
a_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  a_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
gamma_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  gamma_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PailDecModuloProof::~PailDecModuloProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailDecModuloProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailDecModuloProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  s_.Destroy();
  t_.Destroy();
  a_.Destroy();
  gamma_.Destroy();
  z1_.Destroy();
  z2_.Destroy();
  w_.Destroy();
}

void PailDecModuloProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailDecModuloProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailDecModuloProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmpty();
  t_.ClearToEmpty();
  a_.ClearToEmpty();
  gamma_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  w_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailDecModuloProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string S = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.S"));
        } else
          goto handle_unusual;
        continue;
      // string T = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_t();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.T"));
        } else
          goto handle_unusual;
        continue;
      // string A = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_a();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.A"));
        } else
          goto handle_unusual;
        continue;
      // string gamma = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_gamma();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.gamma"));
        } else
          goto handle_unusual;
        continue;
      // string z1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_z1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.z1"));
        } else
          goto handle_unusual;
        continue;
      // string z2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_z2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.z2"));
        } else
          goto handle_unusual;
        continue;
      // string w = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_w();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.w"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailDecModuloProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailDecModuloProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string S = 1;
  if (!this->_internal_s().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.S");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_s(), target);
  }

  // string T = 2;
  if (!this->_internal_t().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.T");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_t(), target);
  }

  // string A = 3;
  if (!this->_internal_a().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.A");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_a(), target);
  }

  // string gamma = 4;
  if (!this->_internal_gamma().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gamma().data(), static_cast<int>(this->_internal_gamma().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.gamma");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_gamma(), target);
  }

  // string z1 = 5;
  if (!this->_internal_z1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.z1");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_z1(), target);
  }

  // string z2 = 6;
  if (!this->_internal_z2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.z2");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_z2(), target);
  }

  // string w = 7;
  if (!this->_internal_w().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.w");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_w(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailDecModuloProof)
  return target;
}

size_t PailDecModuloProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailDecModuloProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string S = 1;
  if (!this->_internal_s().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string T = 2;
  if (!this->_internal_t().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string A = 3;
  if (!this->_internal_a().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string gamma = 4;
  if (!this->_internal_gamma().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gamma());
  }

  // string z1 = 5;
  if (!this->_internal_z1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 6;
  if (!this->_internal_z2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string w = 7;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailDecModuloProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailDecModuloProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailDecModuloProof::GetClassData() const { return &_class_data_; }

void PailDecModuloProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailDecModuloProof *>(to)->MergeFrom(
      static_cast<const PailDecModuloProof &>(from));
}


void PailDecModuloProof::MergeFrom(const PailDecModuloProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailDecModuloProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_s().empty()) {
    _internal_set_s(from._internal_s());
  }
  if (!from._internal_t().empty()) {
    _internal_set_t(from._internal_t());
  }
  if (!from._internal_a().empty()) {
    _internal_set_a(from._internal_a());
  }
  if (!from._internal_gamma().empty()) {
    _internal_set_gamma(from._internal_gamma());
  }
  if (!from._internal_z1().empty()) {
    _internal_set_z1(from._internal_z1());
  }
  if (!from._internal_z2().empty()) {
    _internal_set_z2(from._internal_z2());
  }
  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailDecModuloProof::CopyFrom(const PailDecModuloProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailDecModuloProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailDecModuloProof::IsInitialized() const {
  return true;
}

void PailDecModuloProof::InternalSwap(PailDecModuloProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s_, lhs_arena,
      &other->s_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &t_, lhs_arena,
      &other->t_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &a_, lhs_arena,
      &other->a_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &gamma_, lhs_arena,
      &other->gamma_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z1_, lhs_arena,
      &other->z1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z2_, lhs_arena,
      &other->z2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PailDecModuloProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[27]);
}

// ===================================================================

class PailEncMulProof::_Internal {
 public:
};

PailEncMulProof::PailEncMulProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncMulProof)
}
PailEncMulProof::PailEncMulProof(const PailEncMulProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  a_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    a_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_a().empty()) {
    a_.Set(from._internal_a(), 
      GetArenaForAllocation());
  }
  b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    b_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_b().empty()) {
    b_.Set(from._internal_b(), 
      GetArenaForAllocation());
  }
  z_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z().empty()) {
    z_.Set(from._internal_z(), 
      GetArenaForAllocation());
  }
  u_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    u_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_u().empty()) {
    u_.Set(from._internal_u(), 
      GetArenaForAllocation());
  }
  v_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    v_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_v().empty()) {
    v_.Set(from._internal_v(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncMulProof)
}

inline void PailEncMulProof::SharedCtor() {
a_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  a_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
b_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  b_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
u_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  u_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
v_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  v_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PailEncMulProof::~PailEncMulProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncMulProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailEncMulProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  a_.Destroy();
  b_.Destroy();
  z_.Destroy();
  u_.Destroy();
  v_.Destroy();
}

void PailEncMulProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailEncMulProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncMulProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  a_.ClearToEmpty();
  b_.ClearToEmpty();
  z_.ClearToEmpty();
  u_.ClearToEmpty();
  v_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncMulProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string A = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_a();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncMulProof.A"));
        } else
          goto handle_unusual;
        continue;
      // string B = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_b();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncMulProof.B"));
        } else
          goto handle_unusual;
        continue;
      // string z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_z();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncMulProof.z"));
        } else
          goto handle_unusual;
        continue;
      // string u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_u();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncMulProof.u"));
        } else
          goto handle_unusual;
        continue;
      // string v = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_v();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailEncMulProof.v"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailEncMulProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncMulProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string A = 1;
  if (!this->_internal_a().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncMulProof.A");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_a(), target);
  }

  // string B = 2;
  if (!this->_internal_b().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_b().data(), static_cast<int>(this->_internal_b().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncMulProof.B");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_b(), target);
  }

  // string z = 3;
  if (!this->_internal_z().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncMulProof.z");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z(), target);
  }

  // string u = 4;
  if (!this->_internal_u().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncMulProof.u");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_u(), target);
  }

  // string v = 5;
  if (!this->_internal_v().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_v().data(), static_cast<int>(this->_internal_v().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncMulProof.v");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_v(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncMulProof)
  return target;
}

size_t PailEncMulProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncMulProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string A = 1;
  if (!this->_internal_a().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string B = 2;
  if (!this->_internal_b().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_b());
  }

  // string z = 3;
  if (!this->_internal_z().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string u = 4;
  if (!this->_internal_u().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // string v = 5;
  if (!this->_internal_v().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_v());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailEncMulProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailEncMulProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailEncMulProof::GetClassData() const { return &_class_data_; }

void PailEncMulProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailEncMulProof *>(to)->MergeFrom(
      static_cast<const PailEncMulProof &>(from));
}


void PailEncMulProof::MergeFrom(const PailEncMulProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncMulProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_a().empty()) {
    _internal_set_a(from._internal_a());
  }
  if (!from._internal_b().empty()) {
    _internal_set_b(from._internal_b());
  }
  if (!from._internal_z().empty()) {
    _internal_set_z(from._internal_z());
  }
  if (!from._internal_u().empty()) {
    _internal_set_u(from._internal_u());
  }
  if (!from._internal_v().empty()) {
    _internal_set_v(from._internal_v());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailEncMulProof::CopyFrom(const PailEncMulProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncMulProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncMulProof::IsInitialized() const {
  return true;
}

void PailEncMulProof::InternalSwap(PailEncMulProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &a_, lhs_arena,
      &other->a_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &b_, lhs_arena,
      &other->b_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z_, lhs_arena,
      &other->z_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &u_, lhs_arena,
      &other->u_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &v_, lhs_arena,
      &other->v_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncMulProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[28]);
}

// ===================================================================

class PailMulGroupEleRangeProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& b(const PailMulGroupEleRangeProof* msg);
};

const ::safeheron::proto::CurvePoint&
PailMulGroupEleRangeProof::_Internal::b(const PailMulGroupEleRangeProof* msg) {
  return *msg->b_;
}
void PailMulGroupEleRangeProof::clear_b() {
  if (GetArenaForAllocation() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
}
PailMulGroupEleRangeProof::PailMulGroupEleRangeProof(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailMulGroupEleRangeProof)
}
PailMulGroupEleRangeProof::PailMulGroupEleRangeProof(const PailMulGroupEleRangeProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  a_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    a_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_a().empty()) {
    a_.Set(from._internal_a(), 
      GetArenaForAllocation());
  }
  e_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    e_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_e().empty()) {
    e_.Set(from._internal_e(), 
      GetArenaForAllocation());
  }
  s_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    s_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s().empty()) {
    s_.Set(from._internal_s(), 
      GetArenaForAllocation());
  }
  z1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z1().empty()) {
    z1_.Set(from._internal_z1(), 
      GetArenaForAllocation());
  }
  z2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    z2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_z2().empty()) {
    z2_.Set(from._internal_z2(), 
      GetArenaForAllocation());
  }
  w_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(from._internal_w(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_b()) {
    b_ = new ::safeheron::proto::CurvePoint(*from.b_);
  } else {
    b_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailMulGroupEleRangeProof)
}

inline void PailMulGroupEleRangeProof::SharedCtor() {
a_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  a_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
e_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  e_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
s_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  s_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
z2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  z2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
w_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
b_ = nullptr;
}

PailMulGroupEleRangeProof::~PailMulGroupEleRangeProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailMulGroupEleRangeProof)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PailMulGroupEleRangeProof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  a_.Destroy();
  e_.Destroy();
  s_.Destroy();
  z1_.Destroy();
  z2_.Destroy();
  w_.Destroy();
  if (this != internal_default_instance()) delete b_;
}

void PailMulGroupEleRangeProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PailMulGroupEleRangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailMulGroupEleRangeProof)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  a_.ClearToEmpty();
  e_.ClearToEmpty();
  s_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  w_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailMulGroupEleRangeProof::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string A = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_a();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.A"));
        } else
          goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint B = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_b(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string E = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_e();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.E"));
        } else
          goto handle_unusual;
        continue;
      // string S = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_s();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.S"));
        } else
          goto handle_unusual;
        continue;
      // string z1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_z1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.z1"));
        } else
          goto handle_unusual;
        continue;
      // string z2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_z2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.z2"));
        } else
          goto handle_unusual;
        continue;
      // string w = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_w();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.w"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PailMulGroupEleRangeProof::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailMulGroupEleRangeProof)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string A = 1;
  if (!this->_internal_a().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.A");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_a(), target);
  }

  // .safeheron.proto.CurvePoint B = 2;
  if (this->_internal_has_b()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::b(this),
        _Internal::b(this).GetCachedSize(), target, stream);
  }

  // string E = 3;
  if (!this->_internal_e().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_e().data(), static_cast<int>(this->_internal_e().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.E");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_e(), target);
  }

  // string S = 4;
  if (!this->_internal_s().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.S");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_s(), target);
  }

  // string z1 = 5;
  if (!this->_internal_z1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.z1");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_z1(), target);
  }

  // string z2 = 6;
  if (!this->_internal_z2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.z2");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_z2(), target);
  }

  // string w = 7;
  if (!this->_internal_w().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.w");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_w(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailMulGroupEleRangeProof)
  return target;
}

size_t PailMulGroupEleRangeProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailMulGroupEleRangeProof)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string A = 1;
  if (!this->_internal_a().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string E = 3;
  if (!this->_internal_e().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_e());
  }

  // string S = 4;
  if (!this->_internal_s().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string z1 = 5;
  if (!this->_internal_z1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 6;
  if (!this->_internal_z2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string w = 7;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // .safeheron.proto.CurvePoint B = 2;
  if (this->_internal_has_b()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *b_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PailMulGroupEleRangeProof::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PailMulGroupEleRangeProof::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PailMulGroupEleRangeProof::GetClassData() const { return &_class_data_; }

void PailMulGroupEleRangeProof::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PailMulGroupEleRangeProof *>(to)->MergeFrom(
      static_cast<const PailMulGroupEleRangeProof &>(from));
}


void PailMulGroupEleRangeProof::MergeFrom(const PailMulGroupEleRangeProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailMulGroupEleRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_a().empty()) {
    _internal_set_a(from._internal_a());
  }
  if (!from._internal_e().empty()) {
    _internal_set_e(from._internal_e());
  }
  if (!from._internal_s().empty()) {
    _internal_set_s(from._internal_s());
  }
  if (!from._internal_z1().empty()) {
    _internal_set_z1(from._internal_z1());
  }
  if (!from._internal_z2().empty()) {
    _internal_set_z2(from._internal_z2());
  }
  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  if (from._internal_has_b()) {
    _internal_mutable_b()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_b());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PailMulGroupEleRangeProof::CopyFrom(const PailMulGroupEleRangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailMulGroupEleRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailMulGroupEleRangeProof::IsInitialized() const {
  return true;
}

void PailMulGroupEleRangeProof::InternalSwap(PailMulGroupEleRangeProof* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &a_, lhs_arena,
      &other->a_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &e_, lhs_arena,
      &other->e_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &s_, lhs_arena,
      &other->s_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z1_, lhs_arena,
      &other->z1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &z2_, lhs_arena,
      &other->z2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
  swap(b_, other->b_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailMulGroupEleRangeProof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_zkp_2eproto_getter, &descriptor_table_zkp_2eproto_once,
      file_level_metadata_zkp_2eproto[29]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace safeheron
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::safeheron::proto::DLogProof*
Arena::CreateMaybeMessage< ::safeheron::proto::DLogProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::DLogProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::DLogProof_V2*
Arena::CreateMaybeMessage< ::safeheron::proto::DLogProof_V2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::DLogProof_V2 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::HegProof*
Arena::CreateMaybeMessage< ::safeheron::proto::HegProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::HegProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::HEGProof_V2*
Arena::CreateMaybeMessage< ::safeheron::proto::HEGProof_V2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::HEGProof_V2 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::LinearCombinationProof*
Arena::CreateMaybeMessage< ::safeheron::proto::LinearCombinationProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::LinearCombinationProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::HEGProof_V3*
Arena::CreateMaybeMessage< ::safeheron::proto::HEGProof_V3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::HEGProof_V3 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailProof*
Arena::CreateMaybeMessage< ::safeheron::proto::PailProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailNProof*
Arena::CreateMaybeMessage< ::safeheron::proto::PailNProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailNProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::AliceRangeProof*
Arena::CreateMaybeMessage< ::safeheron::proto::AliceRangeProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::AliceRangeProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::RingPedersenParamPub*
Arena::CreateMaybeMessage< ::safeheron::proto::RingPedersenParamPub >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::RingPedersenParamPub >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::RingPedersenParamPriv*
Arena::CreateMaybeMessage< ::safeheron::proto::RingPedersenParamPriv >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::RingPedersenParamPriv >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::DLNProof*
Arena::CreateMaybeMessage< ::safeheron::proto::DLNProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::DLNProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::TwoDLNProof*
Arena::CreateMaybeMessage< ::safeheron::proto::TwoDLNProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::TwoDLNProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PedersenProof*
Arena::CreateMaybeMessage< ::safeheron::proto::PedersenProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PedersenProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncRangeProof_V3_Z*
Arena::CreateMaybeMessage< ::safeheron::proto::PailEncRangeProof_V3_Z >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncRangeProof_V3_Z >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncRangeProof_V3*
Arena::CreateMaybeMessage< ::safeheron::proto::PailEncRangeProof_V3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncRangeProof_V3 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncRangeProof_V1*
Arena::CreateMaybeMessage< ::safeheron::proto::PailEncRangeProof_V1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncRangeProof_V1 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncRangeProof_V2*
Arena::CreateMaybeMessage< ::safeheron::proto::PailEncRangeProof_V2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncRangeProof_V2 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncGroupEleRangeProof*
Arena::CreateMaybeMessage< ::safeheron::proto::PailEncGroupEleRangeProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncGroupEleRangeProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailAffRangeProof*
Arena::CreateMaybeMessage< ::safeheron::proto::PailAffRangeProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailAffRangeProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailAffGroupEleRangeProof_V1*
Arena::CreateMaybeMessage< ::safeheron::proto::PailAffGroupEleRangeProof_V1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailAffGroupEleRangeProof_V1 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailAffGroupEleRangeProof_V2*
Arena::CreateMaybeMessage< ::safeheron::proto::PailAffGroupEleRangeProof_V2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailAffGroupEleRangeProof_V2 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::DlogEqualityProof*
Arena::CreateMaybeMessage< ::safeheron::proto::DlogEqualityProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::DlogEqualityProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::DlogElGamalComProof*
Arena::CreateMaybeMessage< ::safeheron::proto::DlogElGamalComProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::DlogElGamalComProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncElGamalComRangeProof*
Arena::CreateMaybeMessage< ::safeheron::proto::PailEncElGamalComRangeProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncElGamalComRangeProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::NoSmallFactorProof*
Arena::CreateMaybeMessage< ::safeheron::proto::NoSmallFactorProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::NoSmallFactorProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailBlumModulusProof*
Arena::CreateMaybeMessage< ::safeheron::proto::PailBlumModulusProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailBlumModulusProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailDecModuloProof*
Arena::CreateMaybeMessage< ::safeheron::proto::PailDecModuloProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailDecModuloProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncMulProof*
Arena::CreateMaybeMessage< ::safeheron::proto::PailEncMulProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncMulProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailMulGroupEleRangeProof*
Arena::CreateMaybeMessage< ::safeheron::proto::PailMulGroupEleRangeProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailMulGroupEleRangeProof >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
