// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zkp.proto

#include "zkp.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_curve_5fpoint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CurvePoint_curve_5fpoint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_zkp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DLNProof_zkp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_zkp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PailEncRangeProof_V3_Z_zkp_2eproto;
namespace safeheron {
namespace proto {
class DLogProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DLogProof> _instance;
} _DLogProof_default_instance_;
class DLogProof_V2DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DLogProof_V2> _instance;
} _DLogProof_V2_default_instance_;
class HegProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HegProof> _instance;
} _HegProof_default_instance_;
class HEGProof_V2DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HEGProof_V2> _instance;
} _HEGProof_V2_default_instance_;
class LinearCombinationProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LinearCombinationProof> _instance;
} _LinearCombinationProof_default_instance_;
class HEGProof_V3DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HEGProof_V3> _instance;
} _HEGProof_V3_default_instance_;
class PailProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailProof> _instance;
} _PailProof_default_instance_;
class PailNProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailNProof> _instance;
} _PailNProof_default_instance_;
class AliceRangeProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AliceRangeProof> _instance;
} _AliceRangeProof_default_instance_;
class RingPedersenParamPubDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RingPedersenParamPub> _instance;
} _RingPedersenParamPub_default_instance_;
class RingPedersenParamPrivDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RingPedersenParamPriv> _instance;
} _RingPedersenParamPriv_default_instance_;
class DLNProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DLNProof> _instance;
} _DLNProof_default_instance_;
class TwoDLNProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TwoDLNProof> _instance;
} _TwoDLNProof_default_instance_;
class PedersenProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PedersenProof> _instance;
} _PedersenProof_default_instance_;
class PailEncRangeProof_V3_ZDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailEncRangeProof_V3_Z> _instance;
} _PailEncRangeProof_V3_Z_default_instance_;
class PailEncRangeProof_V3DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailEncRangeProof_V3> _instance;
} _PailEncRangeProof_V3_default_instance_;
class PailEncRangeProof_V1DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailEncRangeProof_V1> _instance;
} _PailEncRangeProof_V1_default_instance_;
class PailEncRangeProof_V2DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailEncRangeProof_V2> _instance;
} _PailEncRangeProof_V2_default_instance_;
class PailEncGroupEleRangeProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailEncGroupEleRangeProof> _instance;
} _PailEncGroupEleRangeProof_default_instance_;
class PailAffRangeProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailAffRangeProof> _instance;
} _PailAffRangeProof_default_instance_;
class PailAffGroupEleRangeProof_V1DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailAffGroupEleRangeProof_V1> _instance;
} _PailAffGroupEleRangeProof_V1_default_instance_;
class PailAffGroupEleRangeProof_V2DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailAffGroupEleRangeProof_V2> _instance;
} _PailAffGroupEleRangeProof_V2_default_instance_;
class DlogEqualityProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DlogEqualityProof> _instance;
} _DlogEqualityProof_default_instance_;
class DlogElGamalComProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DlogElGamalComProof> _instance;
} _DlogElGamalComProof_default_instance_;
class PailEncElGamalComRangeProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailEncElGamalComRangeProof> _instance;
} _PailEncElGamalComRangeProof_default_instance_;
class NoSmallFactorProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NoSmallFactorProof> _instance;
} _NoSmallFactorProof_default_instance_;
class PailBlumModulusProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailBlumModulusProof> _instance;
} _PailBlumModulusProof_default_instance_;
class PailDecModuloProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailDecModuloProof> _instance;
} _PailDecModuloProof_default_instance_;
class PailEncMulProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailEncMulProof> _instance;
} _PailEncMulProof_default_instance_;
class PailMulGroupEleRangeProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PailMulGroupEleRangeProof> _instance;
} _PailMulGroupEleRangeProof_default_instance_;
}  // namespace proto
}  // namespace safeheron
static void InitDefaultsscc_info_AliceRangeProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_AliceRangeProof_default_instance_;
    new (ptr) ::safeheron::proto::AliceRangeProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AliceRangeProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AliceRangeProof_zkp_2eproto}, {}};

static void InitDefaultsscc_info_DLNProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_DLNProof_default_instance_;
    new (ptr) ::safeheron::proto::DLNProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DLNProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DLNProof_zkp_2eproto}, {}};

static void InitDefaultsscc_info_DLogProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_DLogProof_default_instance_;
    new (ptr) ::safeheron::proto::DLogProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DLogProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DLogProof_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_DLogProof_V2_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_DLogProof_V2_default_instance_;
    new (ptr) ::safeheron::proto::DLogProof_V2();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DLogProof_V2_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DLogProof_V2_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_DlogElGamalComProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_DlogElGamalComProof_default_instance_;
    new (ptr) ::safeheron::proto::DlogElGamalComProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DlogElGamalComProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DlogElGamalComProof_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_DlogEqualityProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_DlogEqualityProof_default_instance_;
    new (ptr) ::safeheron::proto::DlogEqualityProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DlogEqualityProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DlogEqualityProof_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_HEGProof_V2_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_HEGProof_V2_default_instance_;
    new (ptr) ::safeheron::proto::HEGProof_V2();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HEGProof_V2_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HEGProof_V2_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_HEGProof_V3_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_HEGProof_V3_default_instance_;
    new (ptr) ::safeheron::proto::HEGProof_V3();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HEGProof_V3_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HEGProof_V3_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_HegProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_HegProof_default_instance_;
    new (ptr) ::safeheron::proto::HegProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HegProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HegProof_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_LinearCombinationProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_LinearCombinationProof_default_instance_;
    new (ptr) ::safeheron::proto::LinearCombinationProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LinearCombinationProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LinearCombinationProof_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_NoSmallFactorProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_NoSmallFactorProof_default_instance_;
    new (ptr) ::safeheron::proto::NoSmallFactorProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NoSmallFactorProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NoSmallFactorProof_zkp_2eproto}, {}};

static void InitDefaultsscc_info_PailAffGroupEleRangeProof_V1_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailAffGroupEleRangeProof_V1_default_instance_;
    new (ptr) ::safeheron::proto::PailAffGroupEleRangeProof_V1();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PailAffGroupEleRangeProof_V1_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PailAffGroupEleRangeProof_V1_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_PailAffGroupEleRangeProof_V2_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailAffGroupEleRangeProof_V2_default_instance_;
    new (ptr) ::safeheron::proto::PailAffGroupEleRangeProof_V2();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PailAffGroupEleRangeProof_V2_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PailAffGroupEleRangeProof_V2_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_PailAffRangeProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailAffRangeProof_default_instance_;
    new (ptr) ::safeheron::proto::PailAffRangeProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PailAffRangeProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PailAffRangeProof_zkp_2eproto}, {}};

static void InitDefaultsscc_info_PailBlumModulusProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailBlumModulusProof_default_instance_;
    new (ptr) ::safeheron::proto::PailBlumModulusProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PailBlumModulusProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PailBlumModulusProof_zkp_2eproto}, {}};

static void InitDefaultsscc_info_PailDecModuloProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailDecModuloProof_default_instance_;
    new (ptr) ::safeheron::proto::PailDecModuloProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PailDecModuloProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PailDecModuloProof_zkp_2eproto}, {}};

static void InitDefaultsscc_info_PailEncElGamalComRangeProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailEncElGamalComRangeProof_default_instance_;
    new (ptr) ::safeheron::proto::PailEncElGamalComRangeProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PailEncElGamalComRangeProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PailEncElGamalComRangeProof_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_PailEncGroupEleRangeProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailEncGroupEleRangeProof_default_instance_;
    new (ptr) ::safeheron::proto::PailEncGroupEleRangeProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PailEncGroupEleRangeProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PailEncGroupEleRangeProof_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_PailEncMulProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailEncMulProof_default_instance_;
    new (ptr) ::safeheron::proto::PailEncMulProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PailEncMulProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PailEncMulProof_zkp_2eproto}, {}};

static void InitDefaultsscc_info_PailEncRangeProof_V1_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailEncRangeProof_V1_default_instance_;
    new (ptr) ::safeheron::proto::PailEncRangeProof_V1();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PailEncRangeProof_V1_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PailEncRangeProof_V1_zkp_2eproto}, {}};

static void InitDefaultsscc_info_PailEncRangeProof_V2_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailEncRangeProof_V2_default_instance_;
    new (ptr) ::safeheron::proto::PailEncRangeProof_V2();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PailEncRangeProof_V2_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PailEncRangeProof_V2_zkp_2eproto}, {}};

static void InitDefaultsscc_info_PailEncRangeProof_V3_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailEncRangeProof_V3_default_instance_;
    new (ptr) ::safeheron::proto::PailEncRangeProof_V3();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PailEncRangeProof_V3_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PailEncRangeProof_V3_zkp_2eproto}, {
      &scc_info_PailEncRangeProof_V3_Z_zkp_2eproto.base,}};

static void InitDefaultsscc_info_PailEncRangeProof_V3_Z_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailEncRangeProof_V3_Z_default_instance_;
    new (ptr) ::safeheron::proto::PailEncRangeProof_V3_Z();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PailEncRangeProof_V3_Z_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PailEncRangeProof_V3_Z_zkp_2eproto}, {}};

static void InitDefaultsscc_info_PailMulGroupEleRangeProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailMulGroupEleRangeProof_default_instance_;
    new (ptr) ::safeheron::proto::PailMulGroupEleRangeProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PailMulGroupEleRangeProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PailMulGroupEleRangeProof_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_PailNProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailNProof_default_instance_;
    new (ptr) ::safeheron::proto::PailNProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PailNProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PailNProof_zkp_2eproto}, {}};

static void InitDefaultsscc_info_PailProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PailProof_default_instance_;
    new (ptr) ::safeheron::proto::PailProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PailProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PailProof_zkp_2eproto}, {}};

static void InitDefaultsscc_info_PedersenProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_PedersenProof_default_instance_;
    new (ptr) ::safeheron::proto::PedersenProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PedersenProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PedersenProof_zkp_2eproto}, {
      &scc_info_CurvePoint_curve_5fpoint_2eproto.base,}};

static void InitDefaultsscc_info_RingPedersenParamPriv_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_RingPedersenParamPriv_default_instance_;
    new (ptr) ::safeheron::proto::RingPedersenParamPriv();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RingPedersenParamPriv_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RingPedersenParamPriv_zkp_2eproto}, {}};

static void InitDefaultsscc_info_RingPedersenParamPub_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_RingPedersenParamPub_default_instance_;
    new (ptr) ::safeheron::proto::RingPedersenParamPub();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RingPedersenParamPub_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RingPedersenParamPub_zkp_2eproto}, {}};

static void InitDefaultsscc_info_TwoDLNProof_zkp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::safeheron::proto::_TwoDLNProof_default_instance_;
    new (ptr) ::safeheron::proto::TwoDLNProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TwoDLNProof_zkp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TwoDLNProof_zkp_2eproto}, {
      &scc_info_DLNProof_zkp_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_zkp_2eproto[30];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_zkp_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_zkp_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_zkp_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof, pk_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof, g_r_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof, res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof_V2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof_V2, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLogProof_V2, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HegProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HegProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HegProof, a3_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HegProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HegProof, z2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V2, alpha_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V2, beta_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V2, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V2, u_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::LinearCombinationProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::LinearCombinationProof, alpha_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::LinearCombinationProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::LinearCombinationProof, u_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V3, alpha_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V3, beta_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V3, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::HEGProof_V3, u_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailProof, y_n_arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailNProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailNProof, y_n_arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, u_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, s1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::AliceRangeProof, s2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPub, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPub, n_tilde_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPub, h1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPub, h2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, n_tilde_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, p_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, q_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, h1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, h2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, alpha_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::RingPedersenParamPriv, beta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLNProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLNProof, alpha_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DLNProof, t_arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::TwoDLNProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::TwoDLNProof, dln_proof_1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::TwoDLNProof, dln_proof_2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PedersenProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PedersenProof, alpha_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PedersenProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PedersenProof, u_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, j_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, masked_x_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, masked_r_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, w1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, w2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, r1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3_Z, r2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3, c1_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3, c2_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V3, z_arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, u_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, s1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V1, s2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, c_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncRangeProof_V2, z3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, y_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, d_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncGroupEleRangeProof, z3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, z_prime_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, v_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, s1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, s2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, t1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffRangeProof, t2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, u_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, z_prime_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, v_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, s1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, s2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, t1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V1, t2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, bx_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, by_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, e_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, f_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, z3_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, z4_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailAffGroupEleRangeProof_V2, wy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogEqualityProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogEqualityProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogEqualityProof, b_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogEqualityProof, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, n_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, b_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::DlogElGamalComProof, u_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, d_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, y_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, w_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncElGamalComRangeProof, z3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, p_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, q_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, b_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, sigma_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, w1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, w2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::NoSmallFactorProof, v_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, x_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, a_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, b_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, z_arr_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailBlumModulusProof, w_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, t_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, gamma_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailDecModuloProof, w_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, b_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, z_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, u_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailEncMulProof, v_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, a_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, b_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, e_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, s_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, z1_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, z2_),
  PROTOBUF_FIELD_OFFSET(::safeheron::proto::PailMulGroupEleRangeProof, w_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::safeheron::proto::DLogProof)},
  { 8, -1, sizeof(::safeheron::proto::DLogProof_V2)},
  { 15, -1, sizeof(::safeheron::proto::HegProof)},
  { 24, -1, sizeof(::safeheron::proto::HEGProof_V2)},
  { 33, -1, sizeof(::safeheron::proto::LinearCombinationProof)},
  { 41, -1, sizeof(::safeheron::proto::HEGProof_V3)},
  { 50, -1, sizeof(::safeheron::proto::PailProof)},
  { 56, -1, sizeof(::safeheron::proto::PailNProof)},
  { 62, -1, sizeof(::safeheron::proto::AliceRangeProof)},
  { 73, -1, sizeof(::safeheron::proto::RingPedersenParamPub)},
  { 81, -1, sizeof(::safeheron::proto::RingPedersenParamPriv)},
  { 93, -1, sizeof(::safeheron::proto::DLNProof)},
  { 100, -1, sizeof(::safeheron::proto::TwoDLNProof)},
  { 107, -1, sizeof(::safeheron::proto::PedersenProof)},
  { 115, -1, sizeof(::safeheron::proto::PailEncRangeProof_V3_Z)},
  { 127, -1, sizeof(::safeheron::proto::PailEncRangeProof_V3)},
  { 135, -1, sizeof(::safeheron::proto::PailEncRangeProof_V1)},
  { 146, -1, sizeof(::safeheron::proto::PailEncRangeProof_V2)},
  { 157, -1, sizeof(::safeheron::proto::PailEncGroupEleRangeProof)},
  { 169, -1, sizeof(::safeheron::proto::PailAffRangeProof)},
  { 184, -1, sizeof(::safeheron::proto::PailAffGroupEleRangeProof_V1)},
  { 200, -1, sizeof(::safeheron::proto::PailAffGroupEleRangeProof_V2)},
  { 218, -1, sizeof(::safeheron::proto::DlogEqualityProof)},
  { 226, -1, sizeof(::safeheron::proto::DlogElGamalComProof)},
  { 236, -1, sizeof(::safeheron::proto::PailEncElGamalComRangeProof)},
  { 250, -1, sizeof(::safeheron::proto::NoSmallFactorProof)},
  { 266, -1, sizeof(::safeheron::proto::PailBlumModulusProof)},
  { 276, -1, sizeof(::safeheron::proto::PailDecModuloProof)},
  { 288, -1, sizeof(::safeheron::proto::PailEncMulProof)},
  { 298, -1, sizeof(::safeheron::proto::PailMulGroupEleRangeProof)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_DLogProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_DLogProof_V2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_HegProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_HEGProof_V2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_LinearCombinationProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_HEGProof_V3_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailNProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_AliceRangeProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_RingPedersenParamPub_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_RingPedersenParamPriv_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_DLNProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_TwoDLNProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PedersenProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailEncRangeProof_V3_Z_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailEncRangeProof_V3_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailEncRangeProof_V1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailEncRangeProof_V2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailEncGroupEleRangeProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailAffRangeProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailAffGroupEleRangeProof_V1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailAffGroupEleRangeProof_V2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_DlogEqualityProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_DlogElGamalComProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailEncElGamalComRangeProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_NoSmallFactorProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailBlumModulusProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailDecModuloProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailEncMulProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::safeheron::proto::_PailMulGroupEleRangeProof_default_instance_),
};

const char descriptor_table_protodef_zkp_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tzkp.proto\022\017safeheron.proto\032\021curve_poin"
  "t.proto\"k\n\tDLogProof\022\'\n\002pk\030\001 \001(\0132\033.safeh"
  "eron.proto.CurvePoint\022(\n\003g_r\030\002 \001(\0132\033.saf"
  "eheron.proto.CurvePoint\022\013\n\003res\030\003 \001(\t\"A\n\014"
  "DLogProof_V2\022&\n\001A\030\002 \001(\0132\033.safeheron.prot"
  "o.CurvePoint\022\t\n\001z\030\003 \001(\t\"s\n\010HegProof\022&\n\001T"
  "\030\001 \001(\0132\033.safeheron.proto.CurvePoint\022\'\n\002A"
  "3\030\002 \001(\0132\033.safeheron.proto.CurvePoint\022\n\n\002"
  "z1\030\003 \001(\t\022\n\n\002z2\030\004 \001(\t\"z\n\013HEGProof_V2\022*\n\005A"
  "lpha\030\001 \001(\0132\033.safeheron.proto.CurvePoint\022"
  ")\n\004Beta\030\002 \001(\0132\033.safeheron.proto.CurvePoi"
  "nt\022\t\n\001t\030\003 \001(\t\022\t\n\001u\030\004 \001(\t\"Z\n\026LinearCombin"
  "ationProof\022*\n\005Alpha\030\001 \001(\0132\033.safeheron.pr"
  "oto.CurvePoint\022\t\n\001t\030\003 \001(\t\022\t\n\001u\030\004 \001(\t\"z\n\013"
  "HEGProof_V3\022*\n\005Alpha\030\001 \001(\0132\033.safeheron.p"
  "roto.CurvePoint\022)\n\004Beta\030\002 \001(\0132\033.safehero"
  "n.proto.CurvePoint\022\t\n\001t\030\003 \001(\t\022\t\n\001u\030\004 \001(\t"
  "\"\034\n\tPailProof\022\017\n\007y_N_arr\030\001 \003(\t\"\035\n\nPailNP"
  "roof\022\017\n\007y_N_arr\030\001 \003(\t\"U\n\017AliceRangeProof"
  "\022\t\n\001z\030\001 \001(\t\022\t\n\001u\030\002 \001(\t\022\t\n\001w\030\003 \001(\t\022\t\n\001s\030\004"
  " \001(\t\022\n\n\002s1\030\005 \001(\t\022\n\n\002s2\030\006 \001(\t\"\?\n\024RingPede"
  "rsenParamPub\022\017\n\007N_tilde\030\001 \001(\t\022\n\n\002h1\030\002 \001("
  "\t\022\n\n\002h2\030\003 \001(\t\"s\n\025RingPedersenParamPriv\022\017"
  "\n\007N_tilde\030\001 \001(\t\022\t\n\001p\030\002 \001(\t\022\t\n\001q\030\003 \001(\t\022\n\n"
  "\002h1\030\004 \001(\t\022\n\n\002h2\030\005 \001(\t\022\r\n\005alpha\030\006 \001(\t\022\014\n\004"
  "beta\030\007 \001(\t\",\n\010DLNProof\022\021\n\talpha_arr\030\001 \003("
  "\t\022\r\n\005t_arr\030\002 \003(\t\"m\n\013TwoDLNProof\022.\n\013dln_p"
  "roof_1\030\001 \001(\0132\031.safeheron.proto.DLNProof\022"
  ".\n\013dln_proof_2\030\002 \001(\0132\031.safeheron.proto.D"
  "LNProof\"Q\n\rPedersenProof\022*\n\005Alpha\030\003 \001(\0132"
  "\033.safeheron.proto.CurvePoint\022\t\n\001t\030\004 \001(\t\022"
  "\t\n\001u\030\005 \001(\t\"\322\001\n\024PailEncRangeProof_V3\022\016\n\006c"
  "1_arr\030\001 \003(\t\022\016\n\006c2_arr\030\002 \003(\t\0226\n\005z_arr\030\003 \003"
  "(\0132\'.safeheron.proto.PailEncRangeProof_V"
  "3.Z\032b\n\001Z\022\t\n\001j\030\001 \001(\005\022\020\n\010masked_x\030\002 \001(\t\022\020\n"
  "\010masked_r\030\003 \001(\t\022\n\n\002w1\030\004 \001(\t\022\n\n\002w2\030\005 \001(\t\022"
  "\n\n\002r1\030\006 \001(\t\022\n\n\002r2\030\007 \001(\t\"Z\n\024PailEncRangeP"
  "roof_V1\022\t\n\001z\030\001 \001(\t\022\t\n\001u\030\002 \001(\t\022\t\n\001w\030\003 \001(\t"
  "\022\t\n\001s\030\004 \001(\t\022\n\n\002s1\030\005 \001(\t\022\n\n\002s2\030\006 \001(\t\"[\n\024P"
  "ailEncRangeProof_V2\022\t\n\001S\030\001 \001(\t\022\t\n\001A\030\002 \001("
  "\t\022\t\n\001C\030\003 \001(\t\022\n\n\002z1\030\004 \001(\t\022\n\n\002z2\030\005 \001(\t\022\n\n\002"
  "z3\030\006 \001(\t\"\210\001\n\031PailEncGroupEleRangeProof\022\t"
  "\n\001S\030\001 \001(\t\022\t\n\001A\030\002 \001(\t\022&\n\001Y\030\003 \001(\0132\033.safehe"
  "ron.proto.CurvePoint\022\t\n\001D\030\004 \001(\t\022\n\n\002z1\030\005 "
  "\001(\t\022\n\n\002z2\030\006 \001(\t\022\n\n\002z3\030\007 \001(\t\"\213\001\n\021PailAffR"
  "angeProof\022\t\n\001z\030\002 \001(\t\022\017\n\007z_prime\030\003 \001(\t\022\t\n"
  "\001t\030\004 \001(\t\022\t\n\001v\030\005 \001(\t\022\t\n\001w\030\006 \001(\t\022\t\n\001s\030\007 \001("
  "\t\022\n\n\002s1\030\010 \001(\t\022\n\n\002s2\030\t \001(\t\022\n\n\002t1\030\n \001(\t\022\n\n"
  "\002t2\030\013 \001(\t\"\276\001\n\034PailAffGroupEleRangeProof_"
  "V1\022&\n\001u\030\001 \001(\0132\033.safeheron.proto.CurvePoi"
  "nt\022\t\n\001z\030\002 \001(\t\022\017\n\007z_prime\030\003 \001(\t\022\t\n\001t\030\004 \001("
  "\t\022\t\n\001v\030\005 \001(\t\022\t\n\001w\030\006 \001(\t\022\t\n\001s\030\007 \001(\t\022\n\n\002s1"
  "\030\010 \001(\t\022\n\n\002s2\030\t \001(\t\022\n\n\002t1\030\n \001(\t\022\n\n\002t2\030\013 \001"
  "(\t\"\321\001\n\034PailAffGroupEleRangeProof_V2\022\t\n\001S"
  "\030\001 \001(\t\022\t\n\001T\030\002 \001(\t\022\t\n\001A\030\003 \001(\t\022\'\n\002Bx\030\004 \001(\013"
  "2\033.safeheron.proto.CurvePoint\022\n\n\002By\030\005 \001("
  "\t\022\t\n\001E\030\006 \001(\t\022\t\n\001F\030\007 \001(\t\022\n\n\002z1\030\010 \001(\t\022\n\n\002z"
  "2\030\t \001(\t\022\n\n\002z3\030\n \001(\t\022\n\n\002z4\030\013 \001(\t\022\t\n\001w\030\014 \001"
  "(\t\022\n\n\002wy\030\r \001(\t\"n\n\021DlogEqualityProof\022&\n\001A"
  "\030\001 \001(\0132\033.safeheron.proto.CurvePoint\022&\n\001B"
  "\030\002 \001(\0132\033.safeheron.proto.CurvePoint\022\t\n\001z"
  "\030\003 \001(\t\"\243\001\n\023DlogElGamalComProof\022&\n\001A\030\001 \001("
  "\0132\033.safeheron.proto.CurvePoint\022&\n\001N\030\002 \001("
  "\0132\033.safeheron.proto.CurvePoint\022&\n\001B\030\003 \001("
  "\0132\033.safeheron.proto.CurvePoint\022\t\n\001z\030\004 \001("
  "\t\022\t\n\001u\030\005 \001(\t\"\275\001\n\033PailEncElGamalComRangeP"
  "roof\022\t\n\001S\030\001 \001(\t\022\t\n\001D\030\002 \001(\t\022&\n\001Y\030\003 \001(\0132\033."
  "safeheron.proto.CurvePoint\022&\n\001Z\030\004 \001(\0132\033."
  "safeheron.proto.CurvePoint\022\t\n\001T\030\005 \001(\t\022\n\n"
  "\002z1\030\006 \001(\t\022\t\n\001w\030\007 \001(\t\022\n\n\002z2\030\010 \001(\t\022\n\n\002z3\030\t"
  " \001(\t\"\225\001\n\022NoSmallFactorProof\022\t\n\001P\030\001 \001(\t\022\t"
  "\n\001Q\030\002 \001(\t\022\t\n\001A\030\003 \001(\t\022\t\n\001B\030\004 \001(\t\022\t\n\001T\030\005 \001"
  "(\t\022\r\n\005sigma\030\006 \001(\t\022\n\n\002z1\030\007 \001(\t\022\n\n\002z2\030\010 \001("
  "\t\022\n\n\002w1\030\t \001(\t\022\n\n\002w2\030\n \001(\t\022\t\n\001v\030\013 \001(\t\"]\n\024"
  "PailBlumModulusProof\022\r\n\005x_arr\030\001 \003(\t\022\r\n\005a"
  "_arr\030\002 \003(\005\022\r\n\005b_arr\030\003 \003(\005\022\r\n\005z_arr\030\004 \003(\t"
  "\022\t\n\001w\030\005 \001(\t\"g\n\022PailDecModuloProof\022\t\n\001S\030\001"
  " \001(\t\022\t\n\001T\030\002 \001(\t\022\t\n\001A\030\003 \001(\t\022\r\n\005gamma\030\004 \001("
  "\t\022\n\n\002z1\030\005 \001(\t\022\n\n\002z2\030\006 \001(\t\022\t\n\001w\030\007 \001(\t\"H\n\017"
  "PailEncMulProof\022\t\n\001A\030\001 \001(\t\022\t\n\001B\030\002 \001(\t\022\t\n"
  "\001z\030\003 \001(\t\022\t\n\001u\030\004 \001(\t\022\t\n\001v\030\005 \001(\t\"\207\001\n\031PailM"
  "ulGroupEleRangeProof\022\t\n\001A\030\001 \001(\t\022&\n\001B\030\002 \001"
  "(\0132\033.safeheron.proto.CurvePoint\022\t\n\001E\030\003 \001"
  "(\t\022\t\n\001S\030\004 \001(\t\022\n\n\002z1\030\005 \001(\t\022\n\n\002z2\030\006 \001(\t\022\t\n"
  "\001w\030\007 \001(\tb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_zkp_2eproto_deps[1] = {
  &::descriptor_table_curve_5fpoint_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_zkp_2eproto_sccs[30] = {
  &scc_info_AliceRangeProof_zkp_2eproto.base,
  &scc_info_DLNProof_zkp_2eproto.base,
  &scc_info_DLogProof_zkp_2eproto.base,
  &scc_info_DLogProof_V2_zkp_2eproto.base,
  &scc_info_DlogElGamalComProof_zkp_2eproto.base,
  &scc_info_DlogEqualityProof_zkp_2eproto.base,
  &scc_info_HEGProof_V2_zkp_2eproto.base,
  &scc_info_HEGProof_V3_zkp_2eproto.base,
  &scc_info_HegProof_zkp_2eproto.base,
  &scc_info_LinearCombinationProof_zkp_2eproto.base,
  &scc_info_NoSmallFactorProof_zkp_2eproto.base,
  &scc_info_PailAffGroupEleRangeProof_V1_zkp_2eproto.base,
  &scc_info_PailAffGroupEleRangeProof_V2_zkp_2eproto.base,
  &scc_info_PailAffRangeProof_zkp_2eproto.base,
  &scc_info_PailBlumModulusProof_zkp_2eproto.base,
  &scc_info_PailDecModuloProof_zkp_2eproto.base,
  &scc_info_PailEncElGamalComRangeProof_zkp_2eproto.base,
  &scc_info_PailEncGroupEleRangeProof_zkp_2eproto.base,
  &scc_info_PailEncMulProof_zkp_2eproto.base,
  &scc_info_PailEncRangeProof_V1_zkp_2eproto.base,
  &scc_info_PailEncRangeProof_V2_zkp_2eproto.base,
  &scc_info_PailEncRangeProof_V3_zkp_2eproto.base,
  &scc_info_PailEncRangeProof_V3_Z_zkp_2eproto.base,
  &scc_info_PailMulGroupEleRangeProof_zkp_2eproto.base,
  &scc_info_PailNProof_zkp_2eproto.base,
  &scc_info_PailProof_zkp_2eproto.base,
  &scc_info_PedersenProof_zkp_2eproto.base,
  &scc_info_RingPedersenParamPriv_zkp_2eproto.base,
  &scc_info_RingPedersenParamPub_zkp_2eproto.base,
  &scc_info_TwoDLNProof_zkp_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_zkp_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_zkp_2eproto = {
  false, false, descriptor_table_protodef_zkp_2eproto, "zkp.proto", 3376,
  &descriptor_table_zkp_2eproto_once, descriptor_table_zkp_2eproto_sccs, descriptor_table_zkp_2eproto_deps, 30, 1,
  schemas, file_default_instances, TableStruct_zkp_2eproto::offsets,
  file_level_metadata_zkp_2eproto, 30, file_level_enum_descriptors_zkp_2eproto, file_level_service_descriptors_zkp_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_zkp_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_zkp_2eproto)), true);
namespace safeheron {
namespace proto {

// ===================================================================

class DLogProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& pk(const DLogProof* msg);
  static const ::safeheron::proto::CurvePoint& g_r(const DLogProof* msg);
};

const ::safeheron::proto::CurvePoint&
DLogProof::_Internal::pk(const DLogProof* msg) {
  return *msg->pk_;
}
const ::safeheron::proto::CurvePoint&
DLogProof::_Internal::g_r(const DLogProof* msg) {
  return *msg->g_r_;
}
void DLogProof::clear_pk() {
  if (GetArena() == nullptr && pk_ != nullptr) {
    delete pk_;
  }
  pk_ = nullptr;
}
void DLogProof::clear_g_r() {
  if (GetArena() == nullptr && g_r_ != nullptr) {
    delete g_r_;
  }
  g_r_ = nullptr;
}
DLogProof::DLogProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.DLogProof)
}
DLogProof::DLogProof(const DLogProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  res_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_res().empty()) {
    res_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_res(), 
      GetArena());
  }
  if (from._internal_has_pk()) {
    pk_ = new ::safeheron::proto::CurvePoint(*from.pk_);
  } else {
    pk_ = nullptr;
  }
  if (from._internal_has_g_r()) {
    g_r_ = new ::safeheron::proto::CurvePoint(*from.g_r_);
  } else {
    g_r_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.DLogProof)
}

void DLogProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DLogProof_zkp_2eproto.base);
  res_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&pk_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&g_r_) -
      reinterpret_cast<char*>(&pk_)) + sizeof(g_r_));
}

DLogProof::~DLogProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.DLogProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DLogProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  res_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pk_;
  if (this != internal_default_instance()) delete g_r_;
}

void DLogProof::ArenaDtor(void* object) {
  DLogProof* _this = reinterpret_cast< DLogProof* >(object);
  (void)_this;
}
void DLogProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DLogProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DLogProof& DLogProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DLogProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void DLogProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.DLogProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_.ClearToEmpty();
  if (GetArena() == nullptr && pk_ != nullptr) {
    delete pk_;
  }
  pk_ = nullptr;
  if (GetArena() == nullptr && g_r_ != nullptr) {
    delete g_r_;
  }
  g_r_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DLogProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint pk = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pk(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint g_r = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_g_r(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string res = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_res();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.DLogProof.res"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DLogProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.DLogProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint pk = 1;
  if (this->has_pk()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::pk(this), target, stream);
  }

  // .safeheron.proto.CurvePoint g_r = 2;
  if (this->has_g_r()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::g_r(this), target, stream);
  }

  // string res = 3;
  if (this->res().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_res().data(), static_cast<int>(this->_internal_res().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DLogProof.res");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.DLogProof)
  return target;
}

size_t DLogProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.DLogProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string res = 3;
  if (this->res().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_res());
  }

  // .safeheron.proto.CurvePoint pk = 1;
  if (this->has_pk()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pk_);
  }

  // .safeheron.proto.CurvePoint g_r = 2;
  if (this->has_g_r()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *g_r_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DLogProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.DLogProof)
  GOOGLE_DCHECK_NE(&from, this);
  const DLogProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DLogProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.DLogProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.DLogProof)
    MergeFrom(*source);
  }
}

void DLogProof::MergeFrom(const DLogProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.DLogProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res().size() > 0) {
    _internal_set_res(from._internal_res());
  }
  if (from.has_pk()) {
    _internal_mutable_pk()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_pk());
  }
  if (from.has_g_r()) {
    _internal_mutable_g_r()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_g_r());
  }
}

void DLogProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.DLogProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DLogProof::CopyFrom(const DLogProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.DLogProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DLogProof::IsInitialized() const {
  return true;
}

void DLogProof::InternalSwap(DLogProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  res_.Swap(&other->res_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DLogProof, g_r_)
      + sizeof(DLogProof::g_r_)
      - PROTOBUF_FIELD_OFFSET(DLogProof, pk_)>(
          reinterpret_cast<char*>(&pk_),
          reinterpret_cast<char*>(&other->pk_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DLogProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DLogProof_V2::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& a(const DLogProof_V2* msg);
};

const ::safeheron::proto::CurvePoint&
DLogProof_V2::_Internal::a(const DLogProof_V2* msg) {
  return *msg->a_;
}
void DLogProof_V2::clear_a() {
  if (GetArena() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
}
DLogProof_V2::DLogProof_V2(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.DLogProof_V2)
}
DLogProof_V2::DLogProof_V2(const DLogProof_V2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z().empty()) {
    z_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z(), 
      GetArena());
  }
  if (from._internal_has_a()) {
    a_ = new ::safeheron::proto::CurvePoint(*from.a_);
  } else {
    a_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.DLogProof_V2)
}

void DLogProof_V2::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DLogProof_V2_zkp_2eproto.base);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  a_ = nullptr;
}

DLogProof_V2::~DLogProof_V2() {
  // @@protoc_insertion_point(destructor:safeheron.proto.DLogProof_V2)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DLogProof_V2::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  z_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete a_;
}

void DLogProof_V2::ArenaDtor(void* object) {
  DLogProof_V2* _this = reinterpret_cast< DLogProof_V2* >(object);
  (void)_this;
}
void DLogProof_V2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DLogProof_V2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DLogProof_V2& DLogProof_V2::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DLogProof_V2_zkp_2eproto.base);
  return *internal_default_instance();
}


void DLogProof_V2::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.DLogProof_V2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  if (GetArena() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DLogProof_V2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint A = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_a(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_z();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.DLogProof_V2.z"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DLogProof_V2::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.DLogProof_V2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint A = 2;
  if (this->has_a()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::a(this), target, stream);
  }

  // string z = 3;
  if (this->z().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DLogProof_V2.z");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.DLogProof_V2)
  return target;
}

size_t DLogProof_V2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.DLogProof_V2)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 3;
  if (this->z().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // .safeheron.proto.CurvePoint A = 2;
  if (this->has_a()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *a_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DLogProof_V2::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.DLogProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  const DLogProof_V2* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DLogProof_V2>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.DLogProof_V2)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.DLogProof_V2)
    MergeFrom(*source);
  }
}

void DLogProof_V2::MergeFrom(const DLogProof_V2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.DLogProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.z().size() > 0) {
    _internal_set_z(from._internal_z());
  }
  if (from.has_a()) {
    _internal_mutable_a()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_a());
  }
}

void DLogProof_V2::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.DLogProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DLogProof_V2::CopyFrom(const DLogProof_V2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.DLogProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DLogProof_V2::IsInitialized() const {
  return true;
}

void DLogProof_V2::InternalSwap(DLogProof_V2* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  z_.Swap(&other->z_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(a_, other->a_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DLogProof_V2::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HegProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& t(const HegProof* msg);
  static const ::safeheron::proto::CurvePoint& a3(const HegProof* msg);
};

const ::safeheron::proto::CurvePoint&
HegProof::_Internal::t(const HegProof* msg) {
  return *msg->t_;
}
const ::safeheron::proto::CurvePoint&
HegProof::_Internal::a3(const HegProof* msg) {
  return *msg->a3_;
}
void HegProof::clear_t() {
  if (GetArena() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
}
void HegProof::clear_a3() {
  if (GetArena() == nullptr && a3_ != nullptr) {
    delete a3_;
  }
  a3_ = nullptr;
}
HegProof::HegProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.HegProof)
}
HegProof::HegProof(const HegProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z1().empty()) {
    z1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z1(), 
      GetArena());
  }
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z2().empty()) {
    z2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z2(), 
      GetArena());
  }
  if (from._internal_has_t()) {
    t_ = new ::safeheron::proto::CurvePoint(*from.t_);
  } else {
    t_ = nullptr;
  }
  if (from._internal_has_a3()) {
    a3_ = new ::safeheron::proto::CurvePoint(*from.a3_);
  } else {
    a3_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.HegProof)
}

void HegProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HegProof_zkp_2eproto.base);
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&t_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&a3_) -
      reinterpret_cast<char*>(&t_)) + sizeof(a3_));
}

HegProof::~HegProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.HegProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HegProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  z1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete t_;
  if (this != internal_default_instance()) delete a3_;
}

void HegProof::ArenaDtor(void* object) {
  HegProof* _this = reinterpret_cast< HegProof* >(object);
  (void)_this;
}
void HegProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HegProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HegProof& HegProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HegProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void HegProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.HegProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  if (GetArena() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  if (GetArena() == nullptr && a3_ != nullptr) {
    delete a3_;
  }
  a3_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HegProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint T = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint A3 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_a3(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_z1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.HegProof.z1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_z2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.HegProof.z2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HegProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.HegProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint T = 1;
  if (this->has_t()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::t(this), target, stream);
  }

  // .safeheron.proto.CurvePoint A3 = 2;
  if (this->has_a3()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::a3(this), target, stream);
  }

  // string z1 = 3;
  if (this->z1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HegProof.z1");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z1(), target);
  }

  // string z2 = 4;
  if (this->z2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HegProof.z2");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_z2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.HegProof)
  return target;
}

size_t HegProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.HegProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z1 = 3;
  if (this->z1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 4;
  if (this->z2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // .safeheron.proto.CurvePoint T = 1;
  if (this->has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // .safeheron.proto.CurvePoint A3 = 2;
  if (this->has_a3()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *a3_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HegProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.HegProof)
  GOOGLE_DCHECK_NE(&from, this);
  const HegProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HegProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.HegProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.HegProof)
    MergeFrom(*source);
  }
}

void HegProof::MergeFrom(const HegProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.HegProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.z1().size() > 0) {
    _internal_set_z1(from._internal_z1());
  }
  if (from.z2().size() > 0) {
    _internal_set_z2(from._internal_z2());
  }
  if (from.has_t()) {
    _internal_mutable_t()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_t());
  }
  if (from.has_a3()) {
    _internal_mutable_a3()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_a3());
  }
}

void HegProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.HegProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HegProof::CopyFrom(const HegProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.HegProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HegProof::IsInitialized() const {
  return true;
}

void HegProof::InternalSwap(HegProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  z1_.Swap(&other->z1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z2_.Swap(&other->z2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HegProof, a3_)
      + sizeof(HegProof::a3_)
      - PROTOBUF_FIELD_OFFSET(HegProof, t_)>(
          reinterpret_cast<char*>(&t_),
          reinterpret_cast<char*>(&other->t_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HegProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HEGProof_V2::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& alpha(const HEGProof_V2* msg);
  static const ::safeheron::proto::CurvePoint& beta(const HEGProof_V2* msg);
};

const ::safeheron::proto::CurvePoint&
HEGProof_V2::_Internal::alpha(const HEGProof_V2* msg) {
  return *msg->alpha_;
}
const ::safeheron::proto::CurvePoint&
HEGProof_V2::_Internal::beta(const HEGProof_V2* msg) {
  return *msg->beta_;
}
void HEGProof_V2::clear_alpha() {
  if (GetArena() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
}
void HEGProof_V2::clear_beta() {
  if (GetArena() == nullptr && beta_ != nullptr) {
    delete beta_;
  }
  beta_ = nullptr;
}
HEGProof_V2::HEGProof_V2(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.HEGProof_V2)
}
HEGProof_V2::HEGProof_V2(const HEGProof_V2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t().empty()) {
    t_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t(), 
      GetArena());
  }
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_u().empty()) {
    u_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_u(), 
      GetArena());
  }
  if (from._internal_has_alpha()) {
    alpha_ = new ::safeheron::proto::CurvePoint(*from.alpha_);
  } else {
    alpha_ = nullptr;
  }
  if (from._internal_has_beta()) {
    beta_ = new ::safeheron::proto::CurvePoint(*from.beta_);
  } else {
    beta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.HEGProof_V2)
}

void HEGProof_V2::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HEGProof_V2_zkp_2eproto.base);
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&alpha_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&beta_) -
      reinterpret_cast<char*>(&alpha_)) + sizeof(beta_));
}

HEGProof_V2::~HEGProof_V2() {
  // @@protoc_insertion_point(destructor:safeheron.proto.HEGProof_V2)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HEGProof_V2::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  t_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete alpha_;
  if (this != internal_default_instance()) delete beta_;
}

void HEGProof_V2::ArenaDtor(void* object) {
  HEGProof_V2* _this = reinterpret_cast< HEGProof_V2* >(object);
  (void)_this;
}
void HEGProof_V2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HEGProof_V2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HEGProof_V2& HEGProof_V2::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HEGProof_V2_zkp_2eproto.base);
  return *internal_default_instance();
}


void HEGProof_V2::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.HEGProof_V2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.ClearToEmpty();
  u_.ClearToEmpty();
  if (GetArena() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
  if (GetArena() == nullptr && beta_ != nullptr) {
    delete beta_;
  }
  beta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HEGProof_V2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint Alpha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_alpha(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Beta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_beta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string t = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_t();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.HEGProof_V2.t"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_u();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.HEGProof_V2.u"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HEGProof_V2::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.HEGProof_V2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->has_alpha()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::alpha(this), target, stream);
  }

  // .safeheron.proto.CurvePoint Beta = 2;
  if (this->has_beta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::beta(this), target, stream);
  }

  // string t = 3;
  if (this->t().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HEGProof_V2.t");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_t(), target);
  }

  // string u = 4;
  if (this->u().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HEGProof_V2.u");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_u(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.HEGProof_V2)
  return target;
}

size_t HEGProof_V2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.HEGProof_V2)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string t = 3;
  if (this->t().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string u = 4;
  if (this->u().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->has_alpha()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *alpha_);
  }

  // .safeheron.proto.CurvePoint Beta = 2;
  if (this->has_beta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *beta_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HEGProof_V2::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.HEGProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  const HEGProof_V2* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HEGProof_V2>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.HEGProof_V2)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.HEGProof_V2)
    MergeFrom(*source);
  }
}

void HEGProof_V2::MergeFrom(const HEGProof_V2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.HEGProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.t().size() > 0) {
    _internal_set_t(from._internal_t());
  }
  if (from.u().size() > 0) {
    _internal_set_u(from._internal_u());
  }
  if (from.has_alpha()) {
    _internal_mutable_alpha()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_alpha());
  }
  if (from.has_beta()) {
    _internal_mutable_beta()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_beta());
  }
}

void HEGProof_V2::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.HEGProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HEGProof_V2::CopyFrom(const HEGProof_V2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.HEGProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HEGProof_V2::IsInitialized() const {
  return true;
}

void HEGProof_V2::InternalSwap(HEGProof_V2* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  t_.Swap(&other->t_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  u_.Swap(&other->u_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HEGProof_V2, beta_)
      + sizeof(HEGProof_V2::beta_)
      - PROTOBUF_FIELD_OFFSET(HEGProof_V2, alpha_)>(
          reinterpret_cast<char*>(&alpha_),
          reinterpret_cast<char*>(&other->alpha_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HEGProof_V2::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LinearCombinationProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& alpha(const LinearCombinationProof* msg);
};

const ::safeheron::proto::CurvePoint&
LinearCombinationProof::_Internal::alpha(const LinearCombinationProof* msg) {
  return *msg->alpha_;
}
void LinearCombinationProof::clear_alpha() {
  if (GetArena() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
}
LinearCombinationProof::LinearCombinationProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.LinearCombinationProof)
}
LinearCombinationProof::LinearCombinationProof(const LinearCombinationProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t().empty()) {
    t_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t(), 
      GetArena());
  }
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_u().empty()) {
    u_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_u(), 
      GetArena());
  }
  if (from._internal_has_alpha()) {
    alpha_ = new ::safeheron::proto::CurvePoint(*from.alpha_);
  } else {
    alpha_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.LinearCombinationProof)
}

void LinearCombinationProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LinearCombinationProof_zkp_2eproto.base);
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alpha_ = nullptr;
}

LinearCombinationProof::~LinearCombinationProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.LinearCombinationProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LinearCombinationProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  t_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete alpha_;
}

void LinearCombinationProof::ArenaDtor(void* object) {
  LinearCombinationProof* _this = reinterpret_cast< LinearCombinationProof* >(object);
  (void)_this;
}
void LinearCombinationProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LinearCombinationProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinearCombinationProof& LinearCombinationProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LinearCombinationProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void LinearCombinationProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.LinearCombinationProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.ClearToEmpty();
  u_.ClearToEmpty();
  if (GetArena() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinearCombinationProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint Alpha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_alpha(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string t = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_t();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.LinearCombinationProof.t"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_u();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.LinearCombinationProof.u"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LinearCombinationProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.LinearCombinationProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->has_alpha()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::alpha(this), target, stream);
  }

  // string t = 3;
  if (this->t().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.LinearCombinationProof.t");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_t(), target);
  }

  // string u = 4;
  if (this->u().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.LinearCombinationProof.u");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_u(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.LinearCombinationProof)
  return target;
}

size_t LinearCombinationProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.LinearCombinationProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string t = 3;
  if (this->t().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string u = 4;
  if (this->u().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->has_alpha()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *alpha_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinearCombinationProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.LinearCombinationProof)
  GOOGLE_DCHECK_NE(&from, this);
  const LinearCombinationProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LinearCombinationProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.LinearCombinationProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.LinearCombinationProof)
    MergeFrom(*source);
  }
}

void LinearCombinationProof::MergeFrom(const LinearCombinationProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.LinearCombinationProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.t().size() > 0) {
    _internal_set_t(from._internal_t());
  }
  if (from.u().size() > 0) {
    _internal_set_u(from._internal_u());
  }
  if (from.has_alpha()) {
    _internal_mutable_alpha()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_alpha());
  }
}

void LinearCombinationProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.LinearCombinationProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinearCombinationProof::CopyFrom(const LinearCombinationProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.LinearCombinationProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinearCombinationProof::IsInitialized() const {
  return true;
}

void LinearCombinationProof::InternalSwap(LinearCombinationProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  t_.Swap(&other->t_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  u_.Swap(&other->u_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(alpha_, other->alpha_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LinearCombinationProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HEGProof_V3::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& alpha(const HEGProof_V3* msg);
  static const ::safeheron::proto::CurvePoint& beta(const HEGProof_V3* msg);
};

const ::safeheron::proto::CurvePoint&
HEGProof_V3::_Internal::alpha(const HEGProof_V3* msg) {
  return *msg->alpha_;
}
const ::safeheron::proto::CurvePoint&
HEGProof_V3::_Internal::beta(const HEGProof_V3* msg) {
  return *msg->beta_;
}
void HEGProof_V3::clear_alpha() {
  if (GetArena() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
}
void HEGProof_V3::clear_beta() {
  if (GetArena() == nullptr && beta_ != nullptr) {
    delete beta_;
  }
  beta_ = nullptr;
}
HEGProof_V3::HEGProof_V3(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.HEGProof_V3)
}
HEGProof_V3::HEGProof_V3(const HEGProof_V3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t().empty()) {
    t_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t(), 
      GetArena());
  }
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_u().empty()) {
    u_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_u(), 
      GetArena());
  }
  if (from._internal_has_alpha()) {
    alpha_ = new ::safeheron::proto::CurvePoint(*from.alpha_);
  } else {
    alpha_ = nullptr;
  }
  if (from._internal_has_beta()) {
    beta_ = new ::safeheron::proto::CurvePoint(*from.beta_);
  } else {
    beta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.HEGProof_V3)
}

void HEGProof_V3::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HEGProof_V3_zkp_2eproto.base);
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&alpha_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&beta_) -
      reinterpret_cast<char*>(&alpha_)) + sizeof(beta_));
}

HEGProof_V3::~HEGProof_V3() {
  // @@protoc_insertion_point(destructor:safeheron.proto.HEGProof_V3)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HEGProof_V3::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  t_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete alpha_;
  if (this != internal_default_instance()) delete beta_;
}

void HEGProof_V3::ArenaDtor(void* object) {
  HEGProof_V3* _this = reinterpret_cast< HEGProof_V3* >(object);
  (void)_this;
}
void HEGProof_V3::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HEGProof_V3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HEGProof_V3& HEGProof_V3::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HEGProof_V3_zkp_2eproto.base);
  return *internal_default_instance();
}


void HEGProof_V3::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.HEGProof_V3)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.ClearToEmpty();
  u_.ClearToEmpty();
  if (GetArena() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
  if (GetArena() == nullptr && beta_ != nullptr) {
    delete beta_;
  }
  beta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HEGProof_V3::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint Alpha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_alpha(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Beta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_beta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string t = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_t();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.HEGProof_V3.t"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_u();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.HEGProof_V3.u"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HEGProof_V3::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.HEGProof_V3)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->has_alpha()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::alpha(this), target, stream);
  }

  // .safeheron.proto.CurvePoint Beta = 2;
  if (this->has_beta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::beta(this), target, stream);
  }

  // string t = 3;
  if (this->t().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HEGProof_V3.t");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_t(), target);
  }

  // string u = 4;
  if (this->u().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.HEGProof_V3.u");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_u(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.HEGProof_V3)
  return target;
}

size_t HEGProof_V3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.HEGProof_V3)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string t = 3;
  if (this->t().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string u = 4;
  if (this->u().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // .safeheron.proto.CurvePoint Alpha = 1;
  if (this->has_alpha()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *alpha_);
  }

  // .safeheron.proto.CurvePoint Beta = 2;
  if (this->has_beta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *beta_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HEGProof_V3::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.HEGProof_V3)
  GOOGLE_DCHECK_NE(&from, this);
  const HEGProof_V3* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HEGProof_V3>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.HEGProof_V3)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.HEGProof_V3)
    MergeFrom(*source);
  }
}

void HEGProof_V3::MergeFrom(const HEGProof_V3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.HEGProof_V3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.t().size() > 0) {
    _internal_set_t(from._internal_t());
  }
  if (from.u().size() > 0) {
    _internal_set_u(from._internal_u());
  }
  if (from.has_alpha()) {
    _internal_mutable_alpha()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_alpha());
  }
  if (from.has_beta()) {
    _internal_mutable_beta()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_beta());
  }
}

void HEGProof_V3::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.HEGProof_V3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HEGProof_V3::CopyFrom(const HEGProof_V3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.HEGProof_V3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HEGProof_V3::IsInitialized() const {
  return true;
}

void HEGProof_V3::InternalSwap(HEGProof_V3* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  t_.Swap(&other->t_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  u_.Swap(&other->u_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HEGProof_V3, beta_)
      + sizeof(HEGProof_V3::beta_)
      - PROTOBUF_FIELD_OFFSET(HEGProof_V3, alpha_)>(
          reinterpret_cast<char*>(&alpha_),
          reinterpret_cast<char*>(&other->alpha_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HEGProof_V3::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailProof::_Internal {
 public:
};

PailProof::PailProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  y_n_arr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailProof)
}
PailProof::PailProof(const PailProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      y_n_arr_(from.y_n_arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailProof)
}

void PailProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailProof_zkp_2eproto.base);
}

PailProof::~PailProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PailProof::ArenaDtor(void* object) {
  PailProof* _this = reinterpret_cast< PailProof* >(object);
  (void)_this;
}
void PailProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailProof& PailProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  y_n_arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string y_N_arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_y_n_arr();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailProof.y_N_arr"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string y_N_arr = 1;
  for (int i = 0, n = this->_internal_y_n_arr_size(); i < n; i++) {
    const auto& s = this->_internal_y_n_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailProof.y_N_arr");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailProof)
  return target;
}

size_t PailProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string y_N_arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(y_n_arr_.size());
  for (int i = 0, n = y_n_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      y_n_arr_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailProof)
  GOOGLE_DCHECK_NE(&from, this);
  const PailProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailProof)
    MergeFrom(*source);
  }
}

void PailProof::MergeFrom(const PailProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  y_n_arr_.MergeFrom(from.y_n_arr_);
}

void PailProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailProof::CopyFrom(const PailProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailProof::IsInitialized() const {
  return true;
}

void PailProof::InternalSwap(PailProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  y_n_arr_.InternalSwap(&other->y_n_arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailNProof::_Internal {
 public:
};

PailNProof::PailNProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  y_n_arr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailNProof)
}
PailNProof::PailNProof(const PailNProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      y_n_arr_(from.y_n_arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailNProof)
}

void PailNProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailNProof_zkp_2eproto.base);
}

PailNProof::~PailNProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailNProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailNProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PailNProof::ArenaDtor(void* object) {
  PailNProof* _this = reinterpret_cast< PailNProof* >(object);
  (void)_this;
}
void PailNProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailNProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailNProof& PailNProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailNProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailNProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailNProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  y_n_arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailNProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string y_N_arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_y_n_arr();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailNProof.y_N_arr"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailNProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailNProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string y_N_arr = 1;
  for (int i = 0, n = this->_internal_y_n_arr_size(); i < n; i++) {
    const auto& s = this->_internal_y_n_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailNProof.y_N_arr");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailNProof)
  return target;
}

size_t PailNProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailNProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string y_N_arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(y_n_arr_.size());
  for (int i = 0, n = y_n_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      y_n_arr_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailNProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailNProof)
  GOOGLE_DCHECK_NE(&from, this);
  const PailNProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailNProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailNProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailNProof)
    MergeFrom(*source);
  }
}

void PailNProof::MergeFrom(const PailNProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailNProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  y_n_arr_.MergeFrom(from.y_n_arr_);
}

void PailNProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailNProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailNProof::CopyFrom(const PailNProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailNProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailNProof::IsInitialized() const {
  return true;
}

void PailNProof::InternalSwap(PailNProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  y_n_arr_.InternalSwap(&other->y_n_arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailNProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AliceRangeProof::_Internal {
 public:
};

AliceRangeProof::AliceRangeProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.AliceRangeProof)
}
AliceRangeProof::AliceRangeProof(const AliceRangeProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z().empty()) {
    z_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z(), 
      GetArena());
  }
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_u().empty()) {
    u_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_u(), 
      GetArena());
  }
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArena());
  }
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s(), 
      GetArena());
  }
  s1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s1().empty()) {
    s1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s1(), 
      GetArena());
  }
  s2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s2().empty()) {
    s2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s2(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.AliceRangeProof)
}

void AliceRangeProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AliceRangeProof_zkp_2eproto.base);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AliceRangeProof::~AliceRangeProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.AliceRangeProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AliceRangeProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  z_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AliceRangeProof::ArenaDtor(void* object) {
  AliceRangeProof* _this = reinterpret_cast< AliceRangeProof* >(object);
  (void)_this;
}
void AliceRangeProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AliceRangeProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AliceRangeProof& AliceRangeProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AliceRangeProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void AliceRangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.AliceRangeProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  u_.ClearToEmpty();
  w_.ClearToEmpty();
  s_.ClearToEmpty();
  s1_.ClearToEmpty();
  s2_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AliceRangeProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string z = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_z();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.z"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string u = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_u();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.u"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.w"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.s"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_s1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.s1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_s2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.AliceRangeProof.s2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AliceRangeProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.AliceRangeProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string z = 1;
  if (this->z().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.z");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_z(), target);
  }

  // string u = 2;
  if (this->u().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.u");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_u(), target);
  }

  // string w = 3;
  if (this->w().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.w");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_w(), target);
  }

  // string s = 4;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.s");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_s(), target);
  }

  // string s1 = 5;
  if (this->s1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s1().data(), static_cast<int>(this->_internal_s1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.s1");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_s1(), target);
  }

  // string s2 = 6;
  if (this->s2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s2().data(), static_cast<int>(this->_internal_s2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.AliceRangeProof.s2");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_s2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.AliceRangeProof)
  return target;
}

size_t AliceRangeProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.AliceRangeProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 1;
  if (this->z().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string u = 2;
  if (this->u().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // string w = 3;
  if (this->w().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string s = 4;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string s1 = 5;
  if (this->s1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s1());
  }

  // string s2 = 6;
  if (this->s2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AliceRangeProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.AliceRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  const AliceRangeProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AliceRangeProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.AliceRangeProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.AliceRangeProof)
    MergeFrom(*source);
  }
}

void AliceRangeProof::MergeFrom(const AliceRangeProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.AliceRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.z().size() > 0) {
    _internal_set_z(from._internal_z());
  }
  if (from.u().size() > 0) {
    _internal_set_u(from._internal_u());
  }
  if (from.w().size() > 0) {
    _internal_set_w(from._internal_w());
  }
  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
  if (from.s1().size() > 0) {
    _internal_set_s1(from._internal_s1());
  }
  if (from.s2().size() > 0) {
    _internal_set_s2(from._internal_s2());
  }
}

void AliceRangeProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.AliceRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AliceRangeProof::CopyFrom(const AliceRangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.AliceRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AliceRangeProof::IsInitialized() const {
  return true;
}

void AliceRangeProof::InternalSwap(AliceRangeProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  z_.Swap(&other->z_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  u_.Swap(&other->u_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w_.Swap(&other->w_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s1_.Swap(&other->s1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s2_.Swap(&other->s2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AliceRangeProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RingPedersenParamPub::_Internal {
 public:
};

RingPedersenParamPub::RingPedersenParamPub(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.RingPedersenParamPub)
}
RingPedersenParamPub::RingPedersenParamPub(const RingPedersenParamPub& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  n_tilde_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_n_tilde().empty()) {
    n_tilde_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_n_tilde(), 
      GetArena());
  }
  h1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_h1().empty()) {
    h1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_h1(), 
      GetArena());
  }
  h2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_h2().empty()) {
    h2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_h2(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.RingPedersenParamPub)
}

void RingPedersenParamPub::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RingPedersenParamPub_zkp_2eproto.base);
  n_tilde_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  h1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  h2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RingPedersenParamPub::~RingPedersenParamPub() {
  // @@protoc_insertion_point(destructor:safeheron.proto.RingPedersenParamPub)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RingPedersenParamPub::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  n_tilde_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  h1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  h2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RingPedersenParamPub::ArenaDtor(void* object) {
  RingPedersenParamPub* _this = reinterpret_cast< RingPedersenParamPub* >(object);
  (void)_this;
}
void RingPedersenParamPub::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RingPedersenParamPub::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RingPedersenParamPub& RingPedersenParamPub::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RingPedersenParamPub_zkp_2eproto.base);
  return *internal_default_instance();
}


void RingPedersenParamPub::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.RingPedersenParamPub)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  n_tilde_.ClearToEmpty();
  h1_.ClearToEmpty();
  h2_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RingPedersenParamPub::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string N_tilde = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_n_tilde();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPub.N_tilde"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string h1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_h1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPub.h1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string h2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_h2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPub.h2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RingPedersenParamPub::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.RingPedersenParamPub)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string N_tilde = 1;
  if (this->n_tilde().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_n_tilde().data(), static_cast<int>(this->_internal_n_tilde().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPub.N_tilde");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_n_tilde(), target);
  }

  // string h1 = 2;
  if (this->h1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_h1().data(), static_cast<int>(this->_internal_h1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPub.h1");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_h1(), target);
  }

  // string h2 = 3;
  if (this->h2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_h2().data(), static_cast<int>(this->_internal_h2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPub.h2");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_h2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.RingPedersenParamPub)
  return target;
}

size_t RingPedersenParamPub::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.RingPedersenParamPub)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string N_tilde = 1;
  if (this->n_tilde().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_n_tilde());
  }

  // string h1 = 2;
  if (this->h1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_h1());
  }

  // string h2 = 3;
  if (this->h2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_h2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RingPedersenParamPub::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.RingPedersenParamPub)
  GOOGLE_DCHECK_NE(&from, this);
  const RingPedersenParamPub* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RingPedersenParamPub>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.RingPedersenParamPub)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.RingPedersenParamPub)
    MergeFrom(*source);
  }
}

void RingPedersenParamPub::MergeFrom(const RingPedersenParamPub& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.RingPedersenParamPub)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.n_tilde().size() > 0) {
    _internal_set_n_tilde(from._internal_n_tilde());
  }
  if (from.h1().size() > 0) {
    _internal_set_h1(from._internal_h1());
  }
  if (from.h2().size() > 0) {
    _internal_set_h2(from._internal_h2());
  }
}

void RingPedersenParamPub::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.RingPedersenParamPub)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RingPedersenParamPub::CopyFrom(const RingPedersenParamPub& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.RingPedersenParamPub)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RingPedersenParamPub::IsInitialized() const {
  return true;
}

void RingPedersenParamPub::InternalSwap(RingPedersenParamPub* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  n_tilde_.Swap(&other->n_tilde_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  h1_.Swap(&other->h1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  h2_.Swap(&other->h2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RingPedersenParamPub::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RingPedersenParamPriv::_Internal {
 public:
};

RingPedersenParamPriv::RingPedersenParamPriv(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.RingPedersenParamPriv)
}
RingPedersenParamPriv::RingPedersenParamPriv(const RingPedersenParamPriv& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  n_tilde_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_n_tilde().empty()) {
    n_tilde_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_n_tilde(), 
      GetArena());
  }
  p_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_p().empty()) {
    p_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_p(), 
      GetArena());
  }
  q_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_q().empty()) {
    q_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_q(), 
      GetArena());
  }
  h1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_h1().empty()) {
    h1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_h1(), 
      GetArena());
  }
  h2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_h2().empty()) {
    h2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_h2(), 
      GetArena());
  }
  alpha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alpha().empty()) {
    alpha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_alpha(), 
      GetArena());
  }
  beta_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_beta().empty()) {
    beta_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_beta(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.RingPedersenParamPriv)
}

void RingPedersenParamPriv::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RingPedersenParamPriv_zkp_2eproto.base);
  n_tilde_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  p_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  q_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  h1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  h2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alpha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  beta_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RingPedersenParamPriv::~RingPedersenParamPriv() {
  // @@protoc_insertion_point(destructor:safeheron.proto.RingPedersenParamPriv)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RingPedersenParamPriv::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  n_tilde_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  p_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  q_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  h1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  h2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alpha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  beta_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RingPedersenParamPriv::ArenaDtor(void* object) {
  RingPedersenParamPriv* _this = reinterpret_cast< RingPedersenParamPriv* >(object);
  (void)_this;
}
void RingPedersenParamPriv::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RingPedersenParamPriv::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RingPedersenParamPriv& RingPedersenParamPriv::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RingPedersenParamPriv_zkp_2eproto.base);
  return *internal_default_instance();
}


void RingPedersenParamPriv::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.RingPedersenParamPriv)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  n_tilde_.ClearToEmpty();
  p_.ClearToEmpty();
  q_.ClearToEmpty();
  h1_.ClearToEmpty();
  h2_.ClearToEmpty();
  alpha_.ClearToEmpty();
  beta_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RingPedersenParamPriv::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string N_tilde = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_n_tilde();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.N_tilde"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string p = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_p();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.p"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string q = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_q();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.q"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string h1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_h1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.h1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string h2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_h2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.h2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string alpha = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_alpha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.alpha"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string beta = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_beta();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.RingPedersenParamPriv.beta"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RingPedersenParamPriv::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.RingPedersenParamPriv)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string N_tilde = 1;
  if (this->n_tilde().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_n_tilde().data(), static_cast<int>(this->_internal_n_tilde().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.N_tilde");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_n_tilde(), target);
  }

  // string p = 2;
  if (this->p().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_p().data(), static_cast<int>(this->_internal_p().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.p");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_p(), target);
  }

  // string q = 3;
  if (this->q().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_q().data(), static_cast<int>(this->_internal_q().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.q");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_q(), target);
  }

  // string h1 = 4;
  if (this->h1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_h1().data(), static_cast<int>(this->_internal_h1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.h1");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_h1(), target);
  }

  // string h2 = 5;
  if (this->h2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_h2().data(), static_cast<int>(this->_internal_h2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.h2");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_h2(), target);
  }

  // string alpha = 6;
  if (this->alpha().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alpha().data(), static_cast<int>(this->_internal_alpha().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.alpha");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_alpha(), target);
  }

  // string beta = 7;
  if (this->beta().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_beta().data(), static_cast<int>(this->_internal_beta().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.RingPedersenParamPriv.beta");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_beta(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.RingPedersenParamPriv)
  return target;
}

size_t RingPedersenParamPriv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.RingPedersenParamPriv)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string N_tilde = 1;
  if (this->n_tilde().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_n_tilde());
  }

  // string p = 2;
  if (this->p().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_p());
  }

  // string q = 3;
  if (this->q().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_q());
  }

  // string h1 = 4;
  if (this->h1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_h1());
  }

  // string h2 = 5;
  if (this->h2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_h2());
  }

  // string alpha = 6;
  if (this->alpha().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alpha());
  }

  // string beta = 7;
  if (this->beta().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_beta());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RingPedersenParamPriv::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.RingPedersenParamPriv)
  GOOGLE_DCHECK_NE(&from, this);
  const RingPedersenParamPriv* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RingPedersenParamPriv>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.RingPedersenParamPriv)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.RingPedersenParamPriv)
    MergeFrom(*source);
  }
}

void RingPedersenParamPriv::MergeFrom(const RingPedersenParamPriv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.RingPedersenParamPriv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.n_tilde().size() > 0) {
    _internal_set_n_tilde(from._internal_n_tilde());
  }
  if (from.p().size() > 0) {
    _internal_set_p(from._internal_p());
  }
  if (from.q().size() > 0) {
    _internal_set_q(from._internal_q());
  }
  if (from.h1().size() > 0) {
    _internal_set_h1(from._internal_h1());
  }
  if (from.h2().size() > 0) {
    _internal_set_h2(from._internal_h2());
  }
  if (from.alpha().size() > 0) {
    _internal_set_alpha(from._internal_alpha());
  }
  if (from.beta().size() > 0) {
    _internal_set_beta(from._internal_beta());
  }
}

void RingPedersenParamPriv::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.RingPedersenParamPriv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RingPedersenParamPriv::CopyFrom(const RingPedersenParamPriv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.RingPedersenParamPriv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RingPedersenParamPriv::IsInitialized() const {
  return true;
}

void RingPedersenParamPriv::InternalSwap(RingPedersenParamPriv* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  n_tilde_.Swap(&other->n_tilde_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  p_.Swap(&other->p_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  q_.Swap(&other->q_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  h1_.Swap(&other->h1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  h2_.Swap(&other->h2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  alpha_.Swap(&other->alpha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  beta_.Swap(&other->beta_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RingPedersenParamPriv::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DLNProof::_Internal {
 public:
};

DLNProof::DLNProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  alpha_arr_(arena),
  t_arr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.DLNProof)
}
DLNProof::DLNProof(const DLNProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      alpha_arr_(from.alpha_arr_),
      t_arr_(from.t_arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.DLNProof)
}

void DLNProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DLNProof_zkp_2eproto.base);
}

DLNProof::~DLNProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.DLNProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DLNProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DLNProof::ArenaDtor(void* object) {
  DLNProof* _this = reinterpret_cast< DLNProof* >(object);
  (void)_this;
}
void DLNProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DLNProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DLNProof& DLNProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DLNProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void DLNProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.DLNProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alpha_arr_.Clear();
  t_arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DLNProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string alpha_arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_alpha_arr();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.DLNProof.alpha_arr"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string t_arr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_t_arr();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.DLNProof.t_arr"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DLNProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.DLNProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string alpha_arr = 1;
  for (int i = 0, n = this->_internal_alpha_arr_size(); i < n; i++) {
    const auto& s = this->_internal_alpha_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DLNProof.alpha_arr");
    target = stream->WriteString(1, s, target);
  }

  // repeated string t_arr = 2;
  for (int i = 0, n = this->_internal_t_arr_size(); i < n; i++) {
    const auto& s = this->_internal_t_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DLNProof.t_arr");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.DLNProof)
  return target;
}

size_t DLNProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.DLNProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string alpha_arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(alpha_arr_.size());
  for (int i = 0, n = alpha_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      alpha_arr_.Get(i));
  }

  // repeated string t_arr = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(t_arr_.size());
  for (int i = 0, n = t_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      t_arr_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DLNProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.DLNProof)
  GOOGLE_DCHECK_NE(&from, this);
  const DLNProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DLNProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.DLNProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.DLNProof)
    MergeFrom(*source);
  }
}

void DLNProof::MergeFrom(const DLNProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.DLNProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alpha_arr_.MergeFrom(from.alpha_arr_);
  t_arr_.MergeFrom(from.t_arr_);
}

void DLNProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.DLNProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DLNProof::CopyFrom(const DLNProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.DLNProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DLNProof::IsInitialized() const {
  return true;
}

void DLNProof::InternalSwap(DLNProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  alpha_arr_.InternalSwap(&other->alpha_arr_);
  t_arr_.InternalSwap(&other->t_arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DLNProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TwoDLNProof::_Internal {
 public:
  static const ::safeheron::proto::DLNProof& dln_proof_1(const TwoDLNProof* msg);
  static const ::safeheron::proto::DLNProof& dln_proof_2(const TwoDLNProof* msg);
};

const ::safeheron::proto::DLNProof&
TwoDLNProof::_Internal::dln_proof_1(const TwoDLNProof* msg) {
  return *msg->dln_proof_1_;
}
const ::safeheron::proto::DLNProof&
TwoDLNProof::_Internal::dln_proof_2(const TwoDLNProof* msg) {
  return *msg->dln_proof_2_;
}
TwoDLNProof::TwoDLNProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.TwoDLNProof)
}
TwoDLNProof::TwoDLNProof(const TwoDLNProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dln_proof_1()) {
    dln_proof_1_ = new ::safeheron::proto::DLNProof(*from.dln_proof_1_);
  } else {
    dln_proof_1_ = nullptr;
  }
  if (from._internal_has_dln_proof_2()) {
    dln_proof_2_ = new ::safeheron::proto::DLNProof(*from.dln_proof_2_);
  } else {
    dln_proof_2_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.TwoDLNProof)
}

void TwoDLNProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TwoDLNProof_zkp_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&dln_proof_1_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&dln_proof_2_) -
      reinterpret_cast<char*>(&dln_proof_1_)) + sizeof(dln_proof_2_));
}

TwoDLNProof::~TwoDLNProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.TwoDLNProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TwoDLNProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete dln_proof_1_;
  if (this != internal_default_instance()) delete dln_proof_2_;
}

void TwoDLNProof::ArenaDtor(void* object) {
  TwoDLNProof* _this = reinterpret_cast< TwoDLNProof* >(object);
  (void)_this;
}
void TwoDLNProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TwoDLNProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TwoDLNProof& TwoDLNProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TwoDLNProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void TwoDLNProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.TwoDLNProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && dln_proof_1_ != nullptr) {
    delete dln_proof_1_;
  }
  dln_proof_1_ = nullptr;
  if (GetArena() == nullptr && dln_proof_2_ != nullptr) {
    delete dln_proof_2_;
  }
  dln_proof_2_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TwoDLNProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .safeheron.proto.DLNProof dln_proof_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dln_proof_1(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.DLNProof dln_proof_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_dln_proof_2(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TwoDLNProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.TwoDLNProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.DLNProof dln_proof_1 = 1;
  if (this->has_dln_proof_1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dln_proof_1(this), target, stream);
  }

  // .safeheron.proto.DLNProof dln_proof_2 = 2;
  if (this->has_dln_proof_2()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::dln_proof_2(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.TwoDLNProof)
  return target;
}

size_t TwoDLNProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.TwoDLNProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .safeheron.proto.DLNProof dln_proof_1 = 1;
  if (this->has_dln_proof_1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dln_proof_1_);
  }

  // .safeheron.proto.DLNProof dln_proof_2 = 2;
  if (this->has_dln_proof_2()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dln_proof_2_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TwoDLNProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.TwoDLNProof)
  GOOGLE_DCHECK_NE(&from, this);
  const TwoDLNProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TwoDLNProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.TwoDLNProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.TwoDLNProof)
    MergeFrom(*source);
  }
}

void TwoDLNProof::MergeFrom(const TwoDLNProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.TwoDLNProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dln_proof_1()) {
    _internal_mutable_dln_proof_1()->::safeheron::proto::DLNProof::MergeFrom(from._internal_dln_proof_1());
  }
  if (from.has_dln_proof_2()) {
    _internal_mutable_dln_proof_2()->::safeheron::proto::DLNProof::MergeFrom(from._internal_dln_proof_2());
  }
}

void TwoDLNProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.TwoDLNProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TwoDLNProof::CopyFrom(const TwoDLNProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.TwoDLNProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TwoDLNProof::IsInitialized() const {
  return true;
}

void TwoDLNProof::InternalSwap(TwoDLNProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TwoDLNProof, dln_proof_2_)
      + sizeof(TwoDLNProof::dln_proof_2_)
      - PROTOBUF_FIELD_OFFSET(TwoDLNProof, dln_proof_1_)>(
          reinterpret_cast<char*>(&dln_proof_1_),
          reinterpret_cast<char*>(&other->dln_proof_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TwoDLNProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PedersenProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& alpha(const PedersenProof* msg);
};

const ::safeheron::proto::CurvePoint&
PedersenProof::_Internal::alpha(const PedersenProof* msg) {
  return *msg->alpha_;
}
void PedersenProof::clear_alpha() {
  if (GetArena() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
}
PedersenProof::PedersenProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PedersenProof)
}
PedersenProof::PedersenProof(const PedersenProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t().empty()) {
    t_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t(), 
      GetArena());
  }
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_u().empty()) {
    u_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_u(), 
      GetArena());
  }
  if (from._internal_has_alpha()) {
    alpha_ = new ::safeheron::proto::CurvePoint(*from.alpha_);
  } else {
    alpha_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PedersenProof)
}

void PedersenProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PedersenProof_zkp_2eproto.base);
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alpha_ = nullptr;
}

PedersenProof::~PedersenProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PedersenProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PedersenProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  t_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete alpha_;
}

void PedersenProof::ArenaDtor(void* object) {
  PedersenProof* _this = reinterpret_cast< PedersenProof* >(object);
  (void)_this;
}
void PedersenProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PedersenProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PedersenProof& PedersenProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PedersenProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void PedersenProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PedersenProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.ClearToEmpty();
  u_.ClearToEmpty();
  if (GetArena() == nullptr && alpha_ != nullptr) {
    delete alpha_;
  }
  alpha_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PedersenProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint Alpha = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_alpha(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_t();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PedersenProof.t"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string u = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_u();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PedersenProof.u"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PedersenProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PedersenProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint Alpha = 3;
  if (this->has_alpha()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::alpha(this), target, stream);
  }

  // string t = 4;
  if (this->t().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PedersenProof.t");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_t(), target);
  }

  // string u = 5;
  if (this->u().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PedersenProof.u");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_u(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PedersenProof)
  return target;
}

size_t PedersenProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PedersenProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string t = 4;
  if (this->t().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string u = 5;
  if (this->u().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // .safeheron.proto.CurvePoint Alpha = 3;
  if (this->has_alpha()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *alpha_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PedersenProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PedersenProof)
  GOOGLE_DCHECK_NE(&from, this);
  const PedersenProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PedersenProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PedersenProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PedersenProof)
    MergeFrom(*source);
  }
}

void PedersenProof::MergeFrom(const PedersenProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PedersenProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.t().size() > 0) {
    _internal_set_t(from._internal_t());
  }
  if (from.u().size() > 0) {
    _internal_set_u(from._internal_u());
  }
  if (from.has_alpha()) {
    _internal_mutable_alpha()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_alpha());
  }
}

void PedersenProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PedersenProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PedersenProof::CopyFrom(const PedersenProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PedersenProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PedersenProof::IsInitialized() const {
  return true;
}

void PedersenProof::InternalSwap(PedersenProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  t_.Swap(&other->t_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  u_.Swap(&other->u_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(alpha_, other->alpha_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PedersenProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailEncRangeProof_V3_Z::_Internal {
 public:
};

PailEncRangeProof_V3_Z::PailEncRangeProof_V3_Z(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncRangeProof_V3.Z)
}
PailEncRangeProof_V3_Z::PailEncRangeProof_V3_Z(const PailEncRangeProof_V3_Z& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  masked_x_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_masked_x().empty()) {
    masked_x_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_masked_x(), 
      GetArena());
  }
  masked_r_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_masked_r().empty()) {
    masked_r_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_masked_r(), 
      GetArena());
  }
  w1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w1().empty()) {
    w1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w1(), 
      GetArena());
  }
  w2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w2().empty()) {
    w2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w2(), 
      GetArena());
  }
  r1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_r1().empty()) {
    r1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_r1(), 
      GetArena());
  }
  r2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_r2().empty()) {
    r2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_r2(), 
      GetArena());
  }
  j_ = from.j_;
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncRangeProof_V3.Z)
}

void PailEncRangeProof_V3_Z::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailEncRangeProof_V3_Z_zkp_2eproto.base);
  masked_x_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  masked_r_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  r1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  r2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  j_ = 0;
}

PailEncRangeProof_V3_Z::~PailEncRangeProof_V3_Z() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncRangeProof_V3.Z)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailEncRangeProof_V3_Z::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  masked_x_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  masked_r_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  r1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  r2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PailEncRangeProof_V3_Z::ArenaDtor(void* object) {
  PailEncRangeProof_V3_Z* _this = reinterpret_cast< PailEncRangeProof_V3_Z* >(object);
  (void)_this;
}
void PailEncRangeProof_V3_Z::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailEncRangeProof_V3_Z::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailEncRangeProof_V3_Z& PailEncRangeProof_V3_Z::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailEncRangeProof_V3_Z_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailEncRangeProof_V3_Z::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncRangeProof_V3.Z)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  masked_x_.ClearToEmpty();
  masked_r_.ClearToEmpty();
  w1_.ClearToEmpty();
  w2_.ClearToEmpty();
  r1_.ClearToEmpty();
  r2_.ClearToEmpty();
  j_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncRangeProof_V3_Z::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 j = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          j_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string masked_x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_masked_x();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.masked_x"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string masked_r = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_masked_r();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.masked_r"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_w1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.w1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_w2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.w2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string r1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_r1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.r1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string r2 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_r2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.Z.r2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailEncRangeProof_V3_Z::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncRangeProof_V3.Z)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 j = 1;
  if (this->j() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_j(), target);
  }

  // string masked_x = 2;
  if (this->masked_x().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_masked_x().data(), static_cast<int>(this->_internal_masked_x().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.masked_x");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_masked_x(), target);
  }

  // string masked_r = 3;
  if (this->masked_r().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_masked_r().data(), static_cast<int>(this->_internal_masked_r().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.masked_r");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_masked_r(), target);
  }

  // string w1 = 4;
  if (this->w1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w1().data(), static_cast<int>(this->_internal_w1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.w1");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_w1(), target);
  }

  // string w2 = 5;
  if (this->w2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w2().data(), static_cast<int>(this->_internal_w2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.w2");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_w2(), target);
  }

  // string r1 = 6;
  if (this->r1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_r1().data(), static_cast<int>(this->_internal_r1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.r1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_r1(), target);
  }

  // string r2 = 7;
  if (this->r2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_r2().data(), static_cast<int>(this->_internal_r2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.Z.r2");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_r2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncRangeProof_V3.Z)
  return target;
}

size_t PailEncRangeProof_V3_Z::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncRangeProof_V3.Z)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string masked_x = 2;
  if (this->masked_x().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_masked_x());
  }

  // string masked_r = 3;
  if (this->masked_r().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_masked_r());
  }

  // string w1 = 4;
  if (this->w1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w1());
  }

  // string w2 = 5;
  if (this->w2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w2());
  }

  // string r1 = 6;
  if (this->r1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_r1());
  }

  // string r2 = 7;
  if (this->r2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_r2());
  }

  // int32 j = 1;
  if (this->j() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_j());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailEncRangeProof_V3_Z::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailEncRangeProof_V3.Z)
  GOOGLE_DCHECK_NE(&from, this);
  const PailEncRangeProof_V3_Z* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailEncRangeProof_V3_Z>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailEncRangeProof_V3.Z)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailEncRangeProof_V3.Z)
    MergeFrom(*source);
  }
}

void PailEncRangeProof_V3_Z::MergeFrom(const PailEncRangeProof_V3_Z& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncRangeProof_V3.Z)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.masked_x().size() > 0) {
    _internal_set_masked_x(from._internal_masked_x());
  }
  if (from.masked_r().size() > 0) {
    _internal_set_masked_r(from._internal_masked_r());
  }
  if (from.w1().size() > 0) {
    _internal_set_w1(from._internal_w1());
  }
  if (from.w2().size() > 0) {
    _internal_set_w2(from._internal_w2());
  }
  if (from.r1().size() > 0) {
    _internal_set_r1(from._internal_r1());
  }
  if (from.r2().size() > 0) {
    _internal_set_r2(from._internal_r2());
  }
  if (from.j() != 0) {
    _internal_set_j(from._internal_j());
  }
}

void PailEncRangeProof_V3_Z::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailEncRangeProof_V3.Z)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailEncRangeProof_V3_Z::CopyFrom(const PailEncRangeProof_V3_Z& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncRangeProof_V3.Z)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncRangeProof_V3_Z::IsInitialized() const {
  return true;
}

void PailEncRangeProof_V3_Z::InternalSwap(PailEncRangeProof_V3_Z* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  masked_x_.Swap(&other->masked_x_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  masked_r_.Swap(&other->masked_r_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w1_.Swap(&other->w1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w2_.Swap(&other->w2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  r1_.Swap(&other->r1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  r2_.Swap(&other->r2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(j_, other->j_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncRangeProof_V3_Z::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailEncRangeProof_V3::_Internal {
 public:
};

PailEncRangeProof_V3::PailEncRangeProof_V3(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  c1_arr_(arena),
  c2_arr_(arena),
  z_arr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncRangeProof_V3)
}
PailEncRangeProof_V3::PailEncRangeProof_V3(const PailEncRangeProof_V3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      c1_arr_(from.c1_arr_),
      c2_arr_(from.c2_arr_),
      z_arr_(from.z_arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncRangeProof_V3)
}

void PailEncRangeProof_V3::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailEncRangeProof_V3_zkp_2eproto.base);
}

PailEncRangeProof_V3::~PailEncRangeProof_V3() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncRangeProof_V3)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailEncRangeProof_V3::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PailEncRangeProof_V3::ArenaDtor(void* object) {
  PailEncRangeProof_V3* _this = reinterpret_cast< PailEncRangeProof_V3* >(object);
  (void)_this;
}
void PailEncRangeProof_V3::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailEncRangeProof_V3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailEncRangeProof_V3& PailEncRangeProof_V3::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailEncRangeProof_V3_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailEncRangeProof_V3::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncRangeProof_V3)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  c1_arr_.Clear();
  c2_arr_.Clear();
  z_arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncRangeProof_V3::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string c1_arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_c1_arr();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.c1_arr"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string c2_arr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_c2_arr();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V3.c2_arr"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .safeheron.proto.PailEncRangeProof_V3.Z z_arr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_z_arr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailEncRangeProof_V3::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncRangeProof_V3)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string c1_arr = 1;
  for (int i = 0, n = this->_internal_c1_arr_size(); i < n; i++) {
    const auto& s = this->_internal_c1_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.c1_arr");
    target = stream->WriteString(1, s, target);
  }

  // repeated string c2_arr = 2;
  for (int i = 0, n = this->_internal_c2_arr_size(); i < n; i++) {
    const auto& s = this->_internal_c2_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V3.c2_arr");
    target = stream->WriteString(2, s, target);
  }

  // repeated .safeheron.proto.PailEncRangeProof_V3.Z z_arr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_z_arr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_z_arr(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncRangeProof_V3)
  return target;
}

size_t PailEncRangeProof_V3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncRangeProof_V3)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string c1_arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(c1_arr_.size());
  for (int i = 0, n = c1_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      c1_arr_.Get(i));
  }

  // repeated string c2_arr = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(c2_arr_.size());
  for (int i = 0, n = c2_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      c2_arr_.Get(i));
  }

  // repeated .safeheron.proto.PailEncRangeProof_V3.Z z_arr = 3;
  total_size += 1UL * this->_internal_z_arr_size();
  for (const auto& msg : this->z_arr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailEncRangeProof_V3::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailEncRangeProof_V3)
  GOOGLE_DCHECK_NE(&from, this);
  const PailEncRangeProof_V3* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailEncRangeProof_V3>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailEncRangeProof_V3)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailEncRangeProof_V3)
    MergeFrom(*source);
  }
}

void PailEncRangeProof_V3::MergeFrom(const PailEncRangeProof_V3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncRangeProof_V3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  c1_arr_.MergeFrom(from.c1_arr_);
  c2_arr_.MergeFrom(from.c2_arr_);
  z_arr_.MergeFrom(from.z_arr_);
}

void PailEncRangeProof_V3::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailEncRangeProof_V3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailEncRangeProof_V3::CopyFrom(const PailEncRangeProof_V3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncRangeProof_V3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncRangeProof_V3::IsInitialized() const {
  return true;
}

void PailEncRangeProof_V3::InternalSwap(PailEncRangeProof_V3* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  c1_arr_.InternalSwap(&other->c1_arr_);
  c2_arr_.InternalSwap(&other->c2_arr_);
  z_arr_.InternalSwap(&other->z_arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncRangeProof_V3::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailEncRangeProof_V1::_Internal {
 public:
};

PailEncRangeProof_V1::PailEncRangeProof_V1(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncRangeProof_V1)
}
PailEncRangeProof_V1::PailEncRangeProof_V1(const PailEncRangeProof_V1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z().empty()) {
    z_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z(), 
      GetArena());
  }
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_u().empty()) {
    u_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_u(), 
      GetArena());
  }
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArena());
  }
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s(), 
      GetArena());
  }
  s1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s1().empty()) {
    s1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s1(), 
      GetArena());
  }
  s2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s2().empty()) {
    s2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s2(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncRangeProof_V1)
}

void PailEncRangeProof_V1::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailEncRangeProof_V1_zkp_2eproto.base);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PailEncRangeProof_V1::~PailEncRangeProof_V1() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncRangeProof_V1)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailEncRangeProof_V1::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  z_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PailEncRangeProof_V1::ArenaDtor(void* object) {
  PailEncRangeProof_V1* _this = reinterpret_cast< PailEncRangeProof_V1* >(object);
  (void)_this;
}
void PailEncRangeProof_V1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailEncRangeProof_V1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailEncRangeProof_V1& PailEncRangeProof_V1::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailEncRangeProof_V1_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailEncRangeProof_V1::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncRangeProof_V1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  u_.ClearToEmpty();
  w_.ClearToEmpty();
  s_.ClearToEmpty();
  s1_.ClearToEmpty();
  s2_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncRangeProof_V1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string z = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_z();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.z"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string u = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_u();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.u"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.w"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.s"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_s1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.s1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_s2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V1.s2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailEncRangeProof_V1::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncRangeProof_V1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string z = 1;
  if (this->z().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.z");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_z(), target);
  }

  // string u = 2;
  if (this->u().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.u");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_u(), target);
  }

  // string w = 3;
  if (this->w().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.w");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_w(), target);
  }

  // string s = 4;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.s");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_s(), target);
  }

  // string s1 = 5;
  if (this->s1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s1().data(), static_cast<int>(this->_internal_s1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.s1");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_s1(), target);
  }

  // string s2 = 6;
  if (this->s2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s2().data(), static_cast<int>(this->_internal_s2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V1.s2");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_s2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncRangeProof_V1)
  return target;
}

size_t PailEncRangeProof_V1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncRangeProof_V1)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 1;
  if (this->z().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string u = 2;
  if (this->u().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // string w = 3;
  if (this->w().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string s = 4;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string s1 = 5;
  if (this->s1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s1());
  }

  // string s2 = 6;
  if (this->s2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailEncRangeProof_V1::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailEncRangeProof_V1)
  GOOGLE_DCHECK_NE(&from, this);
  const PailEncRangeProof_V1* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailEncRangeProof_V1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailEncRangeProof_V1)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailEncRangeProof_V1)
    MergeFrom(*source);
  }
}

void PailEncRangeProof_V1::MergeFrom(const PailEncRangeProof_V1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncRangeProof_V1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.z().size() > 0) {
    _internal_set_z(from._internal_z());
  }
  if (from.u().size() > 0) {
    _internal_set_u(from._internal_u());
  }
  if (from.w().size() > 0) {
    _internal_set_w(from._internal_w());
  }
  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
  if (from.s1().size() > 0) {
    _internal_set_s1(from._internal_s1());
  }
  if (from.s2().size() > 0) {
    _internal_set_s2(from._internal_s2());
  }
}

void PailEncRangeProof_V1::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailEncRangeProof_V1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailEncRangeProof_V1::CopyFrom(const PailEncRangeProof_V1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncRangeProof_V1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncRangeProof_V1::IsInitialized() const {
  return true;
}

void PailEncRangeProof_V1::InternalSwap(PailEncRangeProof_V1* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  z_.Swap(&other->z_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  u_.Swap(&other->u_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w_.Swap(&other->w_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s1_.Swap(&other->s1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s2_.Swap(&other->s2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncRangeProof_V1::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailEncRangeProof_V2::_Internal {
 public:
};

PailEncRangeProof_V2::PailEncRangeProof_V2(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncRangeProof_V2)
}
PailEncRangeProof_V2::PailEncRangeProof_V2(const PailEncRangeProof_V2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s(), 
      GetArena());
  }
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_a().empty()) {
    a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_a(), 
      GetArena());
  }
  c_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_c().empty()) {
    c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_c(), 
      GetArena());
  }
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z1().empty()) {
    z1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z1(), 
      GetArena());
  }
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z2().empty()) {
    z2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z2(), 
      GetArena());
  }
  z3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z3().empty()) {
    z3_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z3(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncRangeProof_V2)
}

void PailEncRangeProof_V2::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailEncRangeProof_V2_zkp_2eproto.base);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  c_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PailEncRangeProof_V2::~PailEncRangeProof_V2() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncRangeProof_V2)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailEncRangeProof_V2::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  a_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  c_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z3_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PailEncRangeProof_V2::ArenaDtor(void* object) {
  PailEncRangeProof_V2* _this = reinterpret_cast< PailEncRangeProof_V2* >(object);
  (void)_this;
}
void PailEncRangeProof_V2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailEncRangeProof_V2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailEncRangeProof_V2& PailEncRangeProof_V2::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailEncRangeProof_V2_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailEncRangeProof_V2::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncRangeProof_V2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmpty();
  a_.ClearToEmpty();
  c_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  z3_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncRangeProof_V2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string S = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.S"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string A = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_a();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.A"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string C = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_c();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.C"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_z1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.z1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_z2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.z2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z3 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_z3();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncRangeProof_V2.z3"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailEncRangeProof_V2::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncRangeProof_V2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string S = 1;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.S");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_s(), target);
  }

  // string A = 2;
  if (this->a().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.A");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_a(), target);
  }

  // string C = 3;
  if (this->c().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_c().data(), static_cast<int>(this->_internal_c().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.C");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_c(), target);
  }

  // string z1 = 4;
  if (this->z1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.z1");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_z1(), target);
  }

  // string z2 = 5;
  if (this->z2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.z2");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_z2(), target);
  }

  // string z3 = 6;
  if (this->z3().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z3().data(), static_cast<int>(this->_internal_z3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncRangeProof_V2.z3");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_z3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncRangeProof_V2)
  return target;
}

size_t PailEncRangeProof_V2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncRangeProof_V2)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string S = 1;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string A = 2;
  if (this->a().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string C = 3;
  if (this->c().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_c());
  }

  // string z1 = 4;
  if (this->z1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 5;
  if (this->z2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string z3 = 6;
  if (this->z3().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z3());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailEncRangeProof_V2::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailEncRangeProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  const PailEncRangeProof_V2* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailEncRangeProof_V2>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailEncRangeProof_V2)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailEncRangeProof_V2)
    MergeFrom(*source);
  }
}

void PailEncRangeProof_V2::MergeFrom(const PailEncRangeProof_V2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncRangeProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
  if (from.a().size() > 0) {
    _internal_set_a(from._internal_a());
  }
  if (from.c().size() > 0) {
    _internal_set_c(from._internal_c());
  }
  if (from.z1().size() > 0) {
    _internal_set_z1(from._internal_z1());
  }
  if (from.z2().size() > 0) {
    _internal_set_z2(from._internal_z2());
  }
  if (from.z3().size() > 0) {
    _internal_set_z3(from._internal_z3());
  }
}

void PailEncRangeProof_V2::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailEncRangeProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailEncRangeProof_V2::CopyFrom(const PailEncRangeProof_V2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncRangeProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncRangeProof_V2::IsInitialized() const {
  return true;
}

void PailEncRangeProof_V2::InternalSwap(PailEncRangeProof_V2* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  a_.Swap(&other->a_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  c_.Swap(&other->c_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z1_.Swap(&other->z1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z2_.Swap(&other->z2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z3_.Swap(&other->z3_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncRangeProof_V2::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailEncGroupEleRangeProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& y(const PailEncGroupEleRangeProof* msg);
};

const ::safeheron::proto::CurvePoint&
PailEncGroupEleRangeProof::_Internal::y(const PailEncGroupEleRangeProof* msg) {
  return *msg->y_;
}
void PailEncGroupEleRangeProof::clear_y() {
  if (GetArena() == nullptr && y_ != nullptr) {
    delete y_;
  }
  y_ = nullptr;
}
PailEncGroupEleRangeProof::PailEncGroupEleRangeProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncGroupEleRangeProof)
}
PailEncGroupEleRangeProof::PailEncGroupEleRangeProof(const PailEncGroupEleRangeProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s(), 
      GetArena());
  }
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_a().empty()) {
    a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_a(), 
      GetArena());
  }
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_d().empty()) {
    d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_d(), 
      GetArena());
  }
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z1().empty()) {
    z1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z1(), 
      GetArena());
  }
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z2().empty()) {
    z2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z2(), 
      GetArena());
  }
  z3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z3().empty()) {
    z3_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z3(), 
      GetArena());
  }
  if (from._internal_has_y()) {
    y_ = new ::safeheron::proto::CurvePoint(*from.y_);
  } else {
    y_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncGroupEleRangeProof)
}

void PailEncGroupEleRangeProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailEncGroupEleRangeProof_zkp_2eproto.base);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  y_ = nullptr;
}

PailEncGroupEleRangeProof::~PailEncGroupEleRangeProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncGroupEleRangeProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailEncGroupEleRangeProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  a_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z3_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete y_;
}

void PailEncGroupEleRangeProof::ArenaDtor(void* object) {
  PailEncGroupEleRangeProof* _this = reinterpret_cast< PailEncGroupEleRangeProof* >(object);
  (void)_this;
}
void PailEncGroupEleRangeProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailEncGroupEleRangeProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailEncGroupEleRangeProof& PailEncGroupEleRangeProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailEncGroupEleRangeProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailEncGroupEleRangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncGroupEleRangeProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmpty();
  a_.ClearToEmpty();
  d_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  z3_.ClearToEmpty();
  if (GetArena() == nullptr && y_ != nullptr) {
    delete y_;
  }
  y_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncGroupEleRangeProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string S = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.S"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string A = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_a();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.A"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_y(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string D = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_d();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.D"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_z1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.z1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_z2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.z2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z3 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_z3();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncGroupEleRangeProof.z3"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailEncGroupEleRangeProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncGroupEleRangeProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string S = 1;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.S");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_s(), target);
  }

  // string A = 2;
  if (this->a().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.A");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_a(), target);
  }

  // .safeheron.proto.CurvePoint Y = 3;
  if (this->has_y()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::y(this), target, stream);
  }

  // string D = 4;
  if (this->d().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_d().data(), static_cast<int>(this->_internal_d().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.D");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_d(), target);
  }

  // string z1 = 5;
  if (this->z1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.z1");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_z1(), target);
  }

  // string z2 = 6;
  if (this->z2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.z2");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_z2(), target);
  }

  // string z3 = 7;
  if (this->z3().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z3().data(), static_cast<int>(this->_internal_z3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncGroupEleRangeProof.z3");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_z3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncGroupEleRangeProof)
  return target;
}

size_t PailEncGroupEleRangeProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncGroupEleRangeProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string S = 1;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string A = 2;
  if (this->a().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string D = 4;
  if (this->d().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_d());
  }

  // string z1 = 5;
  if (this->z1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 6;
  if (this->z2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string z3 = 7;
  if (this->z3().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z3());
  }

  // .safeheron.proto.CurvePoint Y = 3;
  if (this->has_y()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *y_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailEncGroupEleRangeProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailEncGroupEleRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  const PailEncGroupEleRangeProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailEncGroupEleRangeProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailEncGroupEleRangeProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailEncGroupEleRangeProof)
    MergeFrom(*source);
  }
}

void PailEncGroupEleRangeProof::MergeFrom(const PailEncGroupEleRangeProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncGroupEleRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
  if (from.a().size() > 0) {
    _internal_set_a(from._internal_a());
  }
  if (from.d().size() > 0) {
    _internal_set_d(from._internal_d());
  }
  if (from.z1().size() > 0) {
    _internal_set_z1(from._internal_z1());
  }
  if (from.z2().size() > 0) {
    _internal_set_z2(from._internal_z2());
  }
  if (from.z3().size() > 0) {
    _internal_set_z3(from._internal_z3());
  }
  if (from.has_y()) {
    _internal_mutable_y()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_y());
  }
}

void PailEncGroupEleRangeProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailEncGroupEleRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailEncGroupEleRangeProof::CopyFrom(const PailEncGroupEleRangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncGroupEleRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncGroupEleRangeProof::IsInitialized() const {
  return true;
}

void PailEncGroupEleRangeProof::InternalSwap(PailEncGroupEleRangeProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  a_.Swap(&other->a_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  d_.Swap(&other->d_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z1_.Swap(&other->z1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z2_.Swap(&other->z2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z3_.Swap(&other->z3_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(y_, other->y_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncGroupEleRangeProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailAffRangeProof::_Internal {
 public:
};

PailAffRangeProof::PailAffRangeProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailAffRangeProof)
}
PailAffRangeProof::PailAffRangeProof(const PailAffRangeProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z().empty()) {
    z_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z(), 
      GetArena());
  }
  z_prime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z_prime().empty()) {
    z_prime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z_prime(), 
      GetArena());
  }
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t().empty()) {
    t_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t(), 
      GetArena());
  }
  v_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_v().empty()) {
    v_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_v(), 
      GetArena());
  }
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArena());
  }
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s(), 
      GetArena());
  }
  s1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s1().empty()) {
    s1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s1(), 
      GetArena());
  }
  s2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s2().empty()) {
    s2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s2(), 
      GetArena());
  }
  t1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t1().empty()) {
    t1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t1(), 
      GetArena());
  }
  t2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t2().empty()) {
    t2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t2(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailAffRangeProof)
}

void PailAffRangeProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailAffRangeProof_zkp_2eproto.base);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z_prime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PailAffRangeProof::~PailAffRangeProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailAffRangeProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailAffRangeProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  z_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z_prime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PailAffRangeProof::ArenaDtor(void* object) {
  PailAffRangeProof* _this = reinterpret_cast< PailAffRangeProof* >(object);
  (void)_this;
}
void PailAffRangeProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailAffRangeProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailAffRangeProof& PailAffRangeProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailAffRangeProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailAffRangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailAffRangeProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  z_prime_.ClearToEmpty();
  t_.ClearToEmpty();
  v_.ClearToEmpty();
  w_.ClearToEmpty();
  s_.ClearToEmpty();
  s1_.ClearToEmpty();
  s2_.ClearToEmpty();
  t1_.ClearToEmpty();
  t2_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailAffRangeProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string z = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_z();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.z"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z_prime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_z_prime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.z_prime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_t();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.t"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string v = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_v();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.v"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.w"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.s"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_s1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.s1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_s2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.s2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string t1 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_t1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.t1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string t2 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_t2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffRangeProof.t2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailAffRangeProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailAffRangeProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string z = 2;
  if (this->z().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.z");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_z(), target);
  }

  // string z_prime = 3;
  if (this->z_prime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z_prime().data(), static_cast<int>(this->_internal_z_prime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.z_prime");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z_prime(), target);
  }

  // string t = 4;
  if (this->t().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.t");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_t(), target);
  }

  // string v = 5;
  if (this->v().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_v().data(), static_cast<int>(this->_internal_v().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.v");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_v(), target);
  }

  // string w = 6;
  if (this->w().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.w");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_w(), target);
  }

  // string s = 7;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.s");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_s(), target);
  }

  // string s1 = 8;
  if (this->s1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s1().data(), static_cast<int>(this->_internal_s1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.s1");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_s1(), target);
  }

  // string s2 = 9;
  if (this->s2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s2().data(), static_cast<int>(this->_internal_s2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.s2");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_s2(), target);
  }

  // string t1 = 10;
  if (this->t1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t1().data(), static_cast<int>(this->_internal_t1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.t1");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_t1(), target);
  }

  // string t2 = 11;
  if (this->t2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t2().data(), static_cast<int>(this->_internal_t2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffRangeProof.t2");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_t2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailAffRangeProof)
  return target;
}

size_t PailAffRangeProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailAffRangeProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 2;
  if (this->z().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string z_prime = 3;
  if (this->z_prime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z_prime());
  }

  // string t = 4;
  if (this->t().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string v = 5;
  if (this->v().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_v());
  }

  // string w = 6;
  if (this->w().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string s = 7;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string s1 = 8;
  if (this->s1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s1());
  }

  // string s2 = 9;
  if (this->s2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s2());
  }

  // string t1 = 10;
  if (this->t1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t1());
  }

  // string t2 = 11;
  if (this->t2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailAffRangeProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailAffRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  const PailAffRangeProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailAffRangeProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailAffRangeProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailAffRangeProof)
    MergeFrom(*source);
  }
}

void PailAffRangeProof::MergeFrom(const PailAffRangeProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailAffRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.z().size() > 0) {
    _internal_set_z(from._internal_z());
  }
  if (from.z_prime().size() > 0) {
    _internal_set_z_prime(from._internal_z_prime());
  }
  if (from.t().size() > 0) {
    _internal_set_t(from._internal_t());
  }
  if (from.v().size() > 0) {
    _internal_set_v(from._internal_v());
  }
  if (from.w().size() > 0) {
    _internal_set_w(from._internal_w());
  }
  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
  if (from.s1().size() > 0) {
    _internal_set_s1(from._internal_s1());
  }
  if (from.s2().size() > 0) {
    _internal_set_s2(from._internal_s2());
  }
  if (from.t1().size() > 0) {
    _internal_set_t1(from._internal_t1());
  }
  if (from.t2().size() > 0) {
    _internal_set_t2(from._internal_t2());
  }
}

void PailAffRangeProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailAffRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailAffRangeProof::CopyFrom(const PailAffRangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailAffRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailAffRangeProof::IsInitialized() const {
  return true;
}

void PailAffRangeProof::InternalSwap(PailAffRangeProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  z_.Swap(&other->z_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z_prime_.Swap(&other->z_prime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  t_.Swap(&other->t_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  v_.Swap(&other->v_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w_.Swap(&other->w_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s1_.Swap(&other->s1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s2_.Swap(&other->s2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  t1_.Swap(&other->t1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  t2_.Swap(&other->t2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PailAffRangeProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailAffGroupEleRangeProof_V1::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& u(const PailAffGroupEleRangeProof_V1* msg);
};

const ::safeheron::proto::CurvePoint&
PailAffGroupEleRangeProof_V1::_Internal::u(const PailAffGroupEleRangeProof_V1* msg) {
  return *msg->u_;
}
void PailAffGroupEleRangeProof_V1::clear_u() {
  if (GetArena() == nullptr && u_ != nullptr) {
    delete u_;
  }
  u_ = nullptr;
}
PailAffGroupEleRangeProof_V1::PailAffGroupEleRangeProof_V1(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailAffGroupEleRangeProof_V1)
}
PailAffGroupEleRangeProof_V1::PailAffGroupEleRangeProof_V1(const PailAffGroupEleRangeProof_V1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z().empty()) {
    z_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z(), 
      GetArena());
  }
  z_prime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z_prime().empty()) {
    z_prime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z_prime(), 
      GetArena());
  }
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t().empty()) {
    t_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t(), 
      GetArena());
  }
  v_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_v().empty()) {
    v_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_v(), 
      GetArena());
  }
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArena());
  }
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s(), 
      GetArena());
  }
  s1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s1().empty()) {
    s1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s1(), 
      GetArena());
  }
  s2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s2().empty()) {
    s2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s2(), 
      GetArena());
  }
  t1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t1().empty()) {
    t1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t1(), 
      GetArena());
  }
  t2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t2().empty()) {
    t2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t2(), 
      GetArena());
  }
  if (from._internal_has_u()) {
    u_ = new ::safeheron::proto::CurvePoint(*from.u_);
  } else {
    u_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailAffGroupEleRangeProof_V1)
}

void PailAffGroupEleRangeProof_V1::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailAffGroupEleRangeProof_V1_zkp_2eproto.base);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z_prime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_ = nullptr;
}

PailAffGroupEleRangeProof_V1::~PailAffGroupEleRangeProof_V1() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailAffGroupEleRangeProof_V1)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailAffGroupEleRangeProof_V1::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  z_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z_prime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete u_;
}

void PailAffGroupEleRangeProof_V1::ArenaDtor(void* object) {
  PailAffGroupEleRangeProof_V1* _this = reinterpret_cast< PailAffGroupEleRangeProof_V1* >(object);
  (void)_this;
}
void PailAffGroupEleRangeProof_V1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailAffGroupEleRangeProof_V1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailAffGroupEleRangeProof_V1& PailAffGroupEleRangeProof_V1::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailAffGroupEleRangeProof_V1_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailAffGroupEleRangeProof_V1::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  z_prime_.ClearToEmpty();
  t_.ClearToEmpty();
  v_.ClearToEmpty();
  w_.ClearToEmpty();
  s_.ClearToEmpty();
  s1_.ClearToEmpty();
  s2_.ClearToEmpty();
  t1_.ClearToEmpty();
  t2_.ClearToEmpty();
  if (GetArena() == nullptr && u_ != nullptr) {
    delete u_;
  }
  u_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailAffGroupEleRangeProof_V1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint u = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_u(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_z();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.z"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z_prime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_z_prime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.z_prime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_t();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.t"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string v = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_v();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.v"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.w"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.s"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_s1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.s1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string s2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_s2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.s2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string t1 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_t1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.t1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string t2 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_t2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V1.t2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailAffGroupEleRangeProof_V1::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint u = 1;
  if (this->has_u()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::u(this), target, stream);
  }

  // string z = 2;
  if (this->z().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.z");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_z(), target);
  }

  // string z_prime = 3;
  if (this->z_prime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z_prime().data(), static_cast<int>(this->_internal_z_prime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.z_prime");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z_prime(), target);
  }

  // string t = 4;
  if (this->t().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.t");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_t(), target);
  }

  // string v = 5;
  if (this->v().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_v().data(), static_cast<int>(this->_internal_v().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.v");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_v(), target);
  }

  // string w = 6;
  if (this->w().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.w");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_w(), target);
  }

  // string s = 7;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.s");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_s(), target);
  }

  // string s1 = 8;
  if (this->s1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s1().data(), static_cast<int>(this->_internal_s1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.s1");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_s1(), target);
  }

  // string s2 = 9;
  if (this->s2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s2().data(), static_cast<int>(this->_internal_s2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.s2");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_s2(), target);
  }

  // string t1 = 10;
  if (this->t1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t1().data(), static_cast<int>(this->_internal_t1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.t1");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_t1(), target);
  }

  // string t2 = 11;
  if (this->t2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t2().data(), static_cast<int>(this->_internal_t2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V1.t2");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_t2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailAffGroupEleRangeProof_V1)
  return target;
}

size_t PailAffGroupEleRangeProof_V1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 2;
  if (this->z().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string z_prime = 3;
  if (this->z_prime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z_prime());
  }

  // string t = 4;
  if (this->t().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string v = 5;
  if (this->v().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_v());
  }

  // string w = 6;
  if (this->w().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string s = 7;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string s1 = 8;
  if (this->s1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s1());
  }

  // string s2 = 9;
  if (this->s2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s2());
  }

  // string t1 = 10;
  if (this->t1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t1());
  }

  // string t2 = 11;
  if (this->t2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t2());
  }

  // .safeheron.proto.CurvePoint u = 1;
  if (this->has_u()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *u_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailAffGroupEleRangeProof_V1::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  GOOGLE_DCHECK_NE(&from, this);
  const PailAffGroupEleRangeProof_V1* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailAffGroupEleRangeProof_V1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailAffGroupEleRangeProof_V1)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailAffGroupEleRangeProof_V1)
    MergeFrom(*source);
  }
}

void PailAffGroupEleRangeProof_V1::MergeFrom(const PailAffGroupEleRangeProof_V1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.z().size() > 0) {
    _internal_set_z(from._internal_z());
  }
  if (from.z_prime().size() > 0) {
    _internal_set_z_prime(from._internal_z_prime());
  }
  if (from.t().size() > 0) {
    _internal_set_t(from._internal_t());
  }
  if (from.v().size() > 0) {
    _internal_set_v(from._internal_v());
  }
  if (from.w().size() > 0) {
    _internal_set_w(from._internal_w());
  }
  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
  if (from.s1().size() > 0) {
    _internal_set_s1(from._internal_s1());
  }
  if (from.s2().size() > 0) {
    _internal_set_s2(from._internal_s2());
  }
  if (from.t1().size() > 0) {
    _internal_set_t1(from._internal_t1());
  }
  if (from.t2().size() > 0) {
    _internal_set_t2(from._internal_t2());
  }
  if (from.has_u()) {
    _internal_mutable_u()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_u());
  }
}

void PailAffGroupEleRangeProof_V1::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailAffGroupEleRangeProof_V1::CopyFrom(const PailAffGroupEleRangeProof_V1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailAffGroupEleRangeProof_V1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailAffGroupEleRangeProof_V1::IsInitialized() const {
  return true;
}

void PailAffGroupEleRangeProof_V1::InternalSwap(PailAffGroupEleRangeProof_V1* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  z_.Swap(&other->z_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z_prime_.Swap(&other->z_prime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  t_.Swap(&other->t_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  v_.Swap(&other->v_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w_.Swap(&other->w_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s1_.Swap(&other->s1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s2_.Swap(&other->s2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  t1_.Swap(&other->t1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  t2_.Swap(&other->t2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(u_, other->u_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailAffGroupEleRangeProof_V1::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailAffGroupEleRangeProof_V2::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& bx(const PailAffGroupEleRangeProof_V2* msg);
};

const ::safeheron::proto::CurvePoint&
PailAffGroupEleRangeProof_V2::_Internal::bx(const PailAffGroupEleRangeProof_V2* msg) {
  return *msg->bx_;
}
void PailAffGroupEleRangeProof_V2::clear_bx() {
  if (GetArena() == nullptr && bx_ != nullptr) {
    delete bx_;
  }
  bx_ = nullptr;
}
PailAffGroupEleRangeProof_V2::PailAffGroupEleRangeProof_V2(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailAffGroupEleRangeProof_V2)
}
PailAffGroupEleRangeProof_V2::PailAffGroupEleRangeProof_V2(const PailAffGroupEleRangeProof_V2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s(), 
      GetArena());
  }
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t().empty()) {
    t_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t(), 
      GetArena());
  }
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_a().empty()) {
    a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_a(), 
      GetArena());
  }
  by_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_by().empty()) {
    by_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_by(), 
      GetArena());
  }
  e_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_e().empty()) {
    e_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_e(), 
      GetArena());
  }
  f_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_f().empty()) {
    f_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_f(), 
      GetArena());
  }
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z1().empty()) {
    z1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z1(), 
      GetArena());
  }
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z2().empty()) {
    z2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z2(), 
      GetArena());
  }
  z3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z3().empty()) {
    z3_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z3(), 
      GetArena());
  }
  z4_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z4().empty()) {
    z4_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z4(), 
      GetArena());
  }
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArena());
  }
  wy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_wy().empty()) {
    wy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_wy(), 
      GetArena());
  }
  if (from._internal_has_bx()) {
    bx_ = new ::safeheron::proto::CurvePoint(*from.bx_);
  } else {
    bx_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailAffGroupEleRangeProof_V2)
}

void PailAffGroupEleRangeProof_V2::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailAffGroupEleRangeProof_V2_zkp_2eproto.base);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  by_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  e_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  f_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z4_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bx_ = nullptr;
}

PailAffGroupEleRangeProof_V2::~PailAffGroupEleRangeProof_V2() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailAffGroupEleRangeProof_V2)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailAffGroupEleRangeProof_V2::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  a_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  by_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  e_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  f_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z3_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z4_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wy_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bx_;
}

void PailAffGroupEleRangeProof_V2::ArenaDtor(void* object) {
  PailAffGroupEleRangeProof_V2* _this = reinterpret_cast< PailAffGroupEleRangeProof_V2* >(object);
  (void)_this;
}
void PailAffGroupEleRangeProof_V2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailAffGroupEleRangeProof_V2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailAffGroupEleRangeProof_V2& PailAffGroupEleRangeProof_V2::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailAffGroupEleRangeProof_V2_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailAffGroupEleRangeProof_V2::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmpty();
  t_.ClearToEmpty();
  a_.ClearToEmpty();
  by_.ClearToEmpty();
  e_.ClearToEmpty();
  f_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  z3_.ClearToEmpty();
  z4_.ClearToEmpty();
  w_.ClearToEmpty();
  wy_.ClearToEmpty();
  if (GetArena() == nullptr && bx_ != nullptr) {
    delete bx_;
  }
  bx_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailAffGroupEleRangeProof_V2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string S = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.S"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string T = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_t();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.T"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string A = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_a();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.A"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Bx = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bx(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string By = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_by();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.By"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string E = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_e();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.E"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string F = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_f();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.F"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_z1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.z1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_z2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.z2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z3 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_z3();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.z3"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z4 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_z4();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.z4"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.w"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string wy = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_wy();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailAffGroupEleRangeProof_V2.wy"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailAffGroupEleRangeProof_V2::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string S = 1;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.S");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_s(), target);
  }

  // string T = 2;
  if (this->t().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.T");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_t(), target);
  }

  // string A = 3;
  if (this->a().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.A");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_a(), target);
  }

  // .safeheron.proto.CurvePoint Bx = 4;
  if (this->has_bx()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::bx(this), target, stream);
  }

  // string By = 5;
  if (this->by().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_by().data(), static_cast<int>(this->_internal_by().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.By");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_by(), target);
  }

  // string E = 6;
  if (this->e().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_e().data(), static_cast<int>(this->_internal_e().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.E");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_e(), target);
  }

  // string F = 7;
  if (this->f().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_f().data(), static_cast<int>(this->_internal_f().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.F");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_f(), target);
  }

  // string z1 = 8;
  if (this->z1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.z1");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_z1(), target);
  }

  // string z2 = 9;
  if (this->z2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.z2");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_z2(), target);
  }

  // string z3 = 10;
  if (this->z3().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z3().data(), static_cast<int>(this->_internal_z3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.z3");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_z3(), target);
  }

  // string z4 = 11;
  if (this->z4().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z4().data(), static_cast<int>(this->_internal_z4().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.z4");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_z4(), target);
  }

  // string w = 12;
  if (this->w().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.w");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_w(), target);
  }

  // string wy = 13;
  if (this->wy().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_wy().data(), static_cast<int>(this->_internal_wy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailAffGroupEleRangeProof_V2.wy");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_wy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailAffGroupEleRangeProof_V2)
  return target;
}

size_t PailAffGroupEleRangeProof_V2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string S = 1;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string T = 2;
  if (this->t().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string A = 3;
  if (this->a().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string By = 5;
  if (this->by().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_by());
  }

  // string E = 6;
  if (this->e().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_e());
  }

  // string F = 7;
  if (this->f().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_f());
  }

  // string z1 = 8;
  if (this->z1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 9;
  if (this->z2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string z3 = 10;
  if (this->z3().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z3());
  }

  // string z4 = 11;
  if (this->z4().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z4());
  }

  // string w = 12;
  if (this->w().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string wy = 13;
  if (this->wy().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_wy());
  }

  // .safeheron.proto.CurvePoint Bx = 4;
  if (this->has_bx()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bx_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailAffGroupEleRangeProof_V2::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  const PailAffGroupEleRangeProof_V2* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailAffGroupEleRangeProof_V2>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailAffGroupEleRangeProof_V2)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailAffGroupEleRangeProof_V2)
    MergeFrom(*source);
  }
}

void PailAffGroupEleRangeProof_V2::MergeFrom(const PailAffGroupEleRangeProof_V2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
  if (from.t().size() > 0) {
    _internal_set_t(from._internal_t());
  }
  if (from.a().size() > 0) {
    _internal_set_a(from._internal_a());
  }
  if (from.by().size() > 0) {
    _internal_set_by(from._internal_by());
  }
  if (from.e().size() > 0) {
    _internal_set_e(from._internal_e());
  }
  if (from.f().size() > 0) {
    _internal_set_f(from._internal_f());
  }
  if (from.z1().size() > 0) {
    _internal_set_z1(from._internal_z1());
  }
  if (from.z2().size() > 0) {
    _internal_set_z2(from._internal_z2());
  }
  if (from.z3().size() > 0) {
    _internal_set_z3(from._internal_z3());
  }
  if (from.z4().size() > 0) {
    _internal_set_z4(from._internal_z4());
  }
  if (from.w().size() > 0) {
    _internal_set_w(from._internal_w());
  }
  if (from.wy().size() > 0) {
    _internal_set_wy(from._internal_wy());
  }
  if (from.has_bx()) {
    _internal_mutable_bx()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_bx());
  }
}

void PailAffGroupEleRangeProof_V2::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailAffGroupEleRangeProof_V2::CopyFrom(const PailAffGroupEleRangeProof_V2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailAffGroupEleRangeProof_V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailAffGroupEleRangeProof_V2::IsInitialized() const {
  return true;
}

void PailAffGroupEleRangeProof_V2::InternalSwap(PailAffGroupEleRangeProof_V2* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  t_.Swap(&other->t_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  a_.Swap(&other->a_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  by_.Swap(&other->by_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  e_.Swap(&other->e_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  f_.Swap(&other->f_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z1_.Swap(&other->z1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z2_.Swap(&other->z2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z3_.Swap(&other->z3_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z4_.Swap(&other->z4_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w_.Swap(&other->w_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  wy_.Swap(&other->wy_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(bx_, other->bx_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailAffGroupEleRangeProof_V2::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DlogEqualityProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& a(const DlogEqualityProof* msg);
  static const ::safeheron::proto::CurvePoint& b(const DlogEqualityProof* msg);
};

const ::safeheron::proto::CurvePoint&
DlogEqualityProof::_Internal::a(const DlogEqualityProof* msg) {
  return *msg->a_;
}
const ::safeheron::proto::CurvePoint&
DlogEqualityProof::_Internal::b(const DlogEqualityProof* msg) {
  return *msg->b_;
}
void DlogEqualityProof::clear_a() {
  if (GetArena() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
}
void DlogEqualityProof::clear_b() {
  if (GetArena() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
}
DlogEqualityProof::DlogEqualityProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.DlogEqualityProof)
}
DlogEqualityProof::DlogEqualityProof(const DlogEqualityProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z().empty()) {
    z_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z(), 
      GetArena());
  }
  if (from._internal_has_a()) {
    a_ = new ::safeheron::proto::CurvePoint(*from.a_);
  } else {
    a_ = nullptr;
  }
  if (from._internal_has_b()) {
    b_ = new ::safeheron::proto::CurvePoint(*from.b_);
  } else {
    b_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.DlogEqualityProof)
}

void DlogEqualityProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DlogEqualityProof_zkp_2eproto.base);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&a_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&a_)) + sizeof(b_));
}

DlogEqualityProof::~DlogEqualityProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.DlogEqualityProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DlogEqualityProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  z_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete a_;
  if (this != internal_default_instance()) delete b_;
}

void DlogEqualityProof::ArenaDtor(void* object) {
  DlogEqualityProof* _this = reinterpret_cast< DlogEqualityProof* >(object);
  (void)_this;
}
void DlogEqualityProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DlogEqualityProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DlogEqualityProof& DlogEqualityProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DlogEqualityProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void DlogEqualityProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.DlogEqualityProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  if (GetArena() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
  if (GetArena() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DlogEqualityProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint A = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_a(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint B = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_b(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_z();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.DlogEqualityProof.z"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DlogEqualityProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.DlogEqualityProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint A = 1;
  if (this->has_a()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::a(this), target, stream);
  }

  // .safeheron.proto.CurvePoint B = 2;
  if (this->has_b()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::b(this), target, stream);
  }

  // string z = 3;
  if (this->z().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DlogEqualityProof.z");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.DlogEqualityProof)
  return target;
}

size_t DlogEqualityProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.DlogEqualityProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 3;
  if (this->z().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // .safeheron.proto.CurvePoint A = 1;
  if (this->has_a()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *a_);
  }

  // .safeheron.proto.CurvePoint B = 2;
  if (this->has_b()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *b_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DlogEqualityProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.DlogEqualityProof)
  GOOGLE_DCHECK_NE(&from, this);
  const DlogEqualityProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DlogEqualityProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.DlogEqualityProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.DlogEqualityProof)
    MergeFrom(*source);
  }
}

void DlogEqualityProof::MergeFrom(const DlogEqualityProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.DlogEqualityProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.z().size() > 0) {
    _internal_set_z(from._internal_z());
  }
  if (from.has_a()) {
    _internal_mutable_a()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_a());
  }
  if (from.has_b()) {
    _internal_mutable_b()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_b());
  }
}

void DlogEqualityProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.DlogEqualityProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DlogEqualityProof::CopyFrom(const DlogEqualityProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.DlogEqualityProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DlogEqualityProof::IsInitialized() const {
  return true;
}

void DlogEqualityProof::InternalSwap(DlogEqualityProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  z_.Swap(&other->z_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DlogEqualityProof, b_)
      + sizeof(DlogEqualityProof::b_)
      - PROTOBUF_FIELD_OFFSET(DlogEqualityProof, a_)>(
          reinterpret_cast<char*>(&a_),
          reinterpret_cast<char*>(&other->a_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DlogEqualityProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DlogElGamalComProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& a(const DlogElGamalComProof* msg);
  static const ::safeheron::proto::CurvePoint& n(const DlogElGamalComProof* msg);
  static const ::safeheron::proto::CurvePoint& b(const DlogElGamalComProof* msg);
};

const ::safeheron::proto::CurvePoint&
DlogElGamalComProof::_Internal::a(const DlogElGamalComProof* msg) {
  return *msg->a_;
}
const ::safeheron::proto::CurvePoint&
DlogElGamalComProof::_Internal::n(const DlogElGamalComProof* msg) {
  return *msg->n_;
}
const ::safeheron::proto::CurvePoint&
DlogElGamalComProof::_Internal::b(const DlogElGamalComProof* msg) {
  return *msg->b_;
}
void DlogElGamalComProof::clear_a() {
  if (GetArena() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
}
void DlogElGamalComProof::clear_n() {
  if (GetArena() == nullptr && n_ != nullptr) {
    delete n_;
  }
  n_ = nullptr;
}
void DlogElGamalComProof::clear_b() {
  if (GetArena() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
}
DlogElGamalComProof::DlogElGamalComProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.DlogElGamalComProof)
}
DlogElGamalComProof::DlogElGamalComProof(const DlogElGamalComProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z().empty()) {
    z_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z(), 
      GetArena());
  }
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_u().empty()) {
    u_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_u(), 
      GetArena());
  }
  if (from._internal_has_a()) {
    a_ = new ::safeheron::proto::CurvePoint(*from.a_);
  } else {
    a_ = nullptr;
  }
  if (from._internal_has_n()) {
    n_ = new ::safeheron::proto::CurvePoint(*from.n_);
  } else {
    n_ = nullptr;
  }
  if (from._internal_has_b()) {
    b_ = new ::safeheron::proto::CurvePoint(*from.b_);
  } else {
    b_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.DlogElGamalComProof)
}

void DlogElGamalComProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DlogElGamalComProof_zkp_2eproto.base);
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&a_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&a_)) + sizeof(b_));
}

DlogElGamalComProof::~DlogElGamalComProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.DlogElGamalComProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DlogElGamalComProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  z_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete a_;
  if (this != internal_default_instance()) delete n_;
  if (this != internal_default_instance()) delete b_;
}

void DlogElGamalComProof::ArenaDtor(void* object) {
  DlogElGamalComProof* _this = reinterpret_cast< DlogElGamalComProof* >(object);
  (void)_this;
}
void DlogElGamalComProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DlogElGamalComProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DlogElGamalComProof& DlogElGamalComProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DlogElGamalComProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void DlogElGamalComProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.DlogElGamalComProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.ClearToEmpty();
  u_.ClearToEmpty();
  if (GetArena() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
  if (GetArena() == nullptr && n_ != nullptr) {
    delete n_;
  }
  n_ = nullptr;
  if (GetArena() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DlogElGamalComProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .safeheron.proto.CurvePoint A = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_a(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint N = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_n(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint B = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_b(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_z();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.DlogElGamalComProof.z"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string u = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_u();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.DlogElGamalComProof.u"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DlogElGamalComProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.DlogElGamalComProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .safeheron.proto.CurvePoint A = 1;
  if (this->has_a()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::a(this), target, stream);
  }

  // .safeheron.proto.CurvePoint N = 2;
  if (this->has_n()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::n(this), target, stream);
  }

  // .safeheron.proto.CurvePoint B = 3;
  if (this->has_b()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::b(this), target, stream);
  }

  // string z = 4;
  if (this->z().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DlogElGamalComProof.z");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_z(), target);
  }

  // string u = 5;
  if (this->u().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.DlogElGamalComProof.u");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_u(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.DlogElGamalComProof)
  return target;
}

size_t DlogElGamalComProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.DlogElGamalComProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string z = 4;
  if (this->z().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string u = 5;
  if (this->u().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // .safeheron.proto.CurvePoint A = 1;
  if (this->has_a()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *a_);
  }

  // .safeheron.proto.CurvePoint N = 2;
  if (this->has_n()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *n_);
  }

  // .safeheron.proto.CurvePoint B = 3;
  if (this->has_b()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *b_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DlogElGamalComProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.DlogElGamalComProof)
  GOOGLE_DCHECK_NE(&from, this);
  const DlogElGamalComProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DlogElGamalComProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.DlogElGamalComProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.DlogElGamalComProof)
    MergeFrom(*source);
  }
}

void DlogElGamalComProof::MergeFrom(const DlogElGamalComProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.DlogElGamalComProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.z().size() > 0) {
    _internal_set_z(from._internal_z());
  }
  if (from.u().size() > 0) {
    _internal_set_u(from._internal_u());
  }
  if (from.has_a()) {
    _internal_mutable_a()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_a());
  }
  if (from.has_n()) {
    _internal_mutable_n()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_n());
  }
  if (from.has_b()) {
    _internal_mutable_b()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_b());
  }
}

void DlogElGamalComProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.DlogElGamalComProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DlogElGamalComProof::CopyFrom(const DlogElGamalComProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.DlogElGamalComProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DlogElGamalComProof::IsInitialized() const {
  return true;
}

void DlogElGamalComProof::InternalSwap(DlogElGamalComProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  z_.Swap(&other->z_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  u_.Swap(&other->u_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DlogElGamalComProof, b_)
      + sizeof(DlogElGamalComProof::b_)
      - PROTOBUF_FIELD_OFFSET(DlogElGamalComProof, a_)>(
          reinterpret_cast<char*>(&a_),
          reinterpret_cast<char*>(&other->a_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DlogElGamalComProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailEncElGamalComRangeProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& y(const PailEncElGamalComRangeProof* msg);
  static const ::safeheron::proto::CurvePoint& z(const PailEncElGamalComRangeProof* msg);
};

const ::safeheron::proto::CurvePoint&
PailEncElGamalComRangeProof::_Internal::y(const PailEncElGamalComRangeProof* msg) {
  return *msg->y_;
}
const ::safeheron::proto::CurvePoint&
PailEncElGamalComRangeProof::_Internal::z(const PailEncElGamalComRangeProof* msg) {
  return *msg->z_;
}
void PailEncElGamalComRangeProof::clear_y() {
  if (GetArena() == nullptr && y_ != nullptr) {
    delete y_;
  }
  y_ = nullptr;
}
void PailEncElGamalComRangeProof::clear_z() {
  if (GetArena() == nullptr && z_ != nullptr) {
    delete z_;
  }
  z_ = nullptr;
}
PailEncElGamalComRangeProof::PailEncElGamalComRangeProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncElGamalComRangeProof)
}
PailEncElGamalComRangeProof::PailEncElGamalComRangeProof(const PailEncElGamalComRangeProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s(), 
      GetArena());
  }
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_d().empty()) {
    d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_d(), 
      GetArena());
  }
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t().empty()) {
    t_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t(), 
      GetArena());
  }
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z1().empty()) {
    z1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z1(), 
      GetArena());
  }
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArena());
  }
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z2().empty()) {
    z2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z2(), 
      GetArena());
  }
  z3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z3().empty()) {
    z3_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z3(), 
      GetArena());
  }
  if (from._internal_has_y()) {
    y_ = new ::safeheron::proto::CurvePoint(*from.y_);
  } else {
    y_ = nullptr;
  }
  if (from._internal_has_z()) {
    z_ = new ::safeheron::proto::CurvePoint(*from.z_);
  } else {
    z_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncElGamalComRangeProof)
}

void PailEncElGamalComRangeProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailEncElGamalComRangeProof_zkp_2eproto.base);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&y_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&y_)) + sizeof(z_));
}

PailEncElGamalComRangeProof::~PailEncElGamalComRangeProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncElGamalComRangeProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailEncElGamalComRangeProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z3_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete y_;
  if (this != internal_default_instance()) delete z_;
}

void PailEncElGamalComRangeProof::ArenaDtor(void* object) {
  PailEncElGamalComRangeProof* _this = reinterpret_cast< PailEncElGamalComRangeProof* >(object);
  (void)_this;
}
void PailEncElGamalComRangeProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailEncElGamalComRangeProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailEncElGamalComRangeProof& PailEncElGamalComRangeProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailEncElGamalComRangeProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailEncElGamalComRangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncElGamalComRangeProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmpty();
  d_.ClearToEmpty();
  t_.ClearToEmpty();
  z1_.ClearToEmpty();
  w_.ClearToEmpty();
  z2_.ClearToEmpty();
  z3_.ClearToEmpty();
  if (GetArena() == nullptr && y_ != nullptr) {
    delete y_;
  }
  y_ = nullptr;
  if (GetArena() == nullptr && z_ != nullptr) {
    delete z_;
  }
  z_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncElGamalComRangeProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string S = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.S"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string D = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_d();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.D"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_y(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint Z = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_z(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string T = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_t();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.T"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_z1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.z1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.w"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z2 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_z2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.z2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z3 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_z3();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncElGamalComRangeProof.z3"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailEncElGamalComRangeProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncElGamalComRangeProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string S = 1;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.S");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_s(), target);
  }

  // string D = 2;
  if (this->d().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_d().data(), static_cast<int>(this->_internal_d().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.D");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_d(), target);
  }

  // .safeheron.proto.CurvePoint Y = 3;
  if (this->has_y()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::y(this), target, stream);
  }

  // .safeheron.proto.CurvePoint Z = 4;
  if (this->has_z()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::z(this), target, stream);
  }

  // string T = 5;
  if (this->t().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.T");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_t(), target);
  }

  // string z1 = 6;
  if (this->z1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.z1");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_z1(), target);
  }

  // string w = 7;
  if (this->w().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.w");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_w(), target);
  }

  // string z2 = 8;
  if (this->z2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.z2");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_z2(), target);
  }

  // string z3 = 9;
  if (this->z3().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z3().data(), static_cast<int>(this->_internal_z3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncElGamalComRangeProof.z3");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_z3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncElGamalComRangeProof)
  return target;
}

size_t PailEncElGamalComRangeProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncElGamalComRangeProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string S = 1;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string D = 2;
  if (this->d().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_d());
  }

  // string T = 5;
  if (this->t().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string z1 = 6;
  if (this->z1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string w = 7;
  if (this->w().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // string z2 = 8;
  if (this->z2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string z3 = 9;
  if (this->z3().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z3());
  }

  // .safeheron.proto.CurvePoint Y = 3;
  if (this->has_y()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *y_);
  }

  // .safeheron.proto.CurvePoint Z = 4;
  if (this->has_z()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *z_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailEncElGamalComRangeProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailEncElGamalComRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  const PailEncElGamalComRangeProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailEncElGamalComRangeProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailEncElGamalComRangeProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailEncElGamalComRangeProof)
    MergeFrom(*source);
  }
}

void PailEncElGamalComRangeProof::MergeFrom(const PailEncElGamalComRangeProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncElGamalComRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
  if (from.d().size() > 0) {
    _internal_set_d(from._internal_d());
  }
  if (from.t().size() > 0) {
    _internal_set_t(from._internal_t());
  }
  if (from.z1().size() > 0) {
    _internal_set_z1(from._internal_z1());
  }
  if (from.w().size() > 0) {
    _internal_set_w(from._internal_w());
  }
  if (from.z2().size() > 0) {
    _internal_set_z2(from._internal_z2());
  }
  if (from.z3().size() > 0) {
    _internal_set_z3(from._internal_z3());
  }
  if (from.has_y()) {
    _internal_mutable_y()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_y());
  }
  if (from.has_z()) {
    _internal_mutable_z()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_z());
  }
}

void PailEncElGamalComRangeProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailEncElGamalComRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailEncElGamalComRangeProof::CopyFrom(const PailEncElGamalComRangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncElGamalComRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncElGamalComRangeProof::IsInitialized() const {
  return true;
}

void PailEncElGamalComRangeProof::InternalSwap(PailEncElGamalComRangeProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  d_.Swap(&other->d_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  t_.Swap(&other->t_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z1_.Swap(&other->z1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w_.Swap(&other->w_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z2_.Swap(&other->z2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z3_.Swap(&other->z3_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PailEncElGamalComRangeProof, z_)
      + sizeof(PailEncElGamalComRangeProof::z_)
      - PROTOBUF_FIELD_OFFSET(PailEncElGamalComRangeProof, y_)>(
          reinterpret_cast<char*>(&y_),
          reinterpret_cast<char*>(&other->y_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncElGamalComRangeProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class NoSmallFactorProof::_Internal {
 public:
};

NoSmallFactorProof::NoSmallFactorProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.NoSmallFactorProof)
}
NoSmallFactorProof::NoSmallFactorProof(const NoSmallFactorProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  p_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_p().empty()) {
    p_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_p(), 
      GetArena());
  }
  q_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_q().empty()) {
    q_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_q(), 
      GetArena());
  }
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_a().empty()) {
    a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_a(), 
      GetArena());
  }
  b_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_b().empty()) {
    b_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_b(), 
      GetArena());
  }
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t().empty()) {
    t_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t(), 
      GetArena());
  }
  sigma_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sigma().empty()) {
    sigma_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sigma(), 
      GetArena());
  }
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z1().empty()) {
    z1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z1(), 
      GetArena());
  }
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z2().empty()) {
    z2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z2(), 
      GetArena());
  }
  w1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w1().empty()) {
    w1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w1(), 
      GetArena());
  }
  w2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w2().empty()) {
    w2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w2(), 
      GetArena());
  }
  v_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_v().empty()) {
    v_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_v(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.NoSmallFactorProof)
}

void NoSmallFactorProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NoSmallFactorProof_zkp_2eproto.base);
  p_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  q_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  b_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sigma_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

NoSmallFactorProof::~NoSmallFactorProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.NoSmallFactorProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NoSmallFactorProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  p_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  q_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  a_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  b_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sigma_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NoSmallFactorProof::ArenaDtor(void* object) {
  NoSmallFactorProof* _this = reinterpret_cast< NoSmallFactorProof* >(object);
  (void)_this;
}
void NoSmallFactorProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NoSmallFactorProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NoSmallFactorProof& NoSmallFactorProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NoSmallFactorProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void NoSmallFactorProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.NoSmallFactorProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  p_.ClearToEmpty();
  q_.ClearToEmpty();
  a_.ClearToEmpty();
  b_.ClearToEmpty();
  t_.ClearToEmpty();
  sigma_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  w1_.ClearToEmpty();
  w2_.ClearToEmpty();
  v_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NoSmallFactorProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string P = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_p();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.P"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Q = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_q();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.Q"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string A = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_a();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.A"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string B = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_b();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.B"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string T = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_t();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.T"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sigma = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_sigma();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.sigma"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z1 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_z1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.z1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z2 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_z2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.z2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w1 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_w1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.w1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w2 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_w2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.w2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string v = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_v();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.NoSmallFactorProof.v"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NoSmallFactorProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.NoSmallFactorProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string P = 1;
  if (this->p().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_p().data(), static_cast<int>(this->_internal_p().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.P");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_p(), target);
  }

  // string Q = 2;
  if (this->q().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_q().data(), static_cast<int>(this->_internal_q().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.Q");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_q(), target);
  }

  // string A = 3;
  if (this->a().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.A");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_a(), target);
  }

  // string B = 4;
  if (this->b().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_b().data(), static_cast<int>(this->_internal_b().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.B");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_b(), target);
  }

  // string T = 5;
  if (this->t().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.T");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_t(), target);
  }

  // string sigma = 6;
  if (this->sigma().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sigma().data(), static_cast<int>(this->_internal_sigma().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.sigma");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_sigma(), target);
  }

  // string z1 = 7;
  if (this->z1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.z1");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_z1(), target);
  }

  // string z2 = 8;
  if (this->z2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.z2");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_z2(), target);
  }

  // string w1 = 9;
  if (this->w1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w1().data(), static_cast<int>(this->_internal_w1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.w1");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_w1(), target);
  }

  // string w2 = 10;
  if (this->w2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w2().data(), static_cast<int>(this->_internal_w2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.w2");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_w2(), target);
  }

  // string v = 11;
  if (this->v().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_v().data(), static_cast<int>(this->_internal_v().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.NoSmallFactorProof.v");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_v(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.NoSmallFactorProof)
  return target;
}

size_t NoSmallFactorProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.NoSmallFactorProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string P = 1;
  if (this->p().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_p());
  }

  // string Q = 2;
  if (this->q().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_q());
  }

  // string A = 3;
  if (this->a().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string B = 4;
  if (this->b().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_b());
  }

  // string T = 5;
  if (this->t().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string sigma = 6;
  if (this->sigma().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sigma());
  }

  // string z1 = 7;
  if (this->z1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 8;
  if (this->z2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string w1 = 9;
  if (this->w1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w1());
  }

  // string w2 = 10;
  if (this->w2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w2());
  }

  // string v = 11;
  if (this->v().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_v());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NoSmallFactorProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.NoSmallFactorProof)
  GOOGLE_DCHECK_NE(&from, this);
  const NoSmallFactorProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NoSmallFactorProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.NoSmallFactorProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.NoSmallFactorProof)
    MergeFrom(*source);
  }
}

void NoSmallFactorProof::MergeFrom(const NoSmallFactorProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.NoSmallFactorProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.p().size() > 0) {
    _internal_set_p(from._internal_p());
  }
  if (from.q().size() > 0) {
    _internal_set_q(from._internal_q());
  }
  if (from.a().size() > 0) {
    _internal_set_a(from._internal_a());
  }
  if (from.b().size() > 0) {
    _internal_set_b(from._internal_b());
  }
  if (from.t().size() > 0) {
    _internal_set_t(from._internal_t());
  }
  if (from.sigma().size() > 0) {
    _internal_set_sigma(from._internal_sigma());
  }
  if (from.z1().size() > 0) {
    _internal_set_z1(from._internal_z1());
  }
  if (from.z2().size() > 0) {
    _internal_set_z2(from._internal_z2());
  }
  if (from.w1().size() > 0) {
    _internal_set_w1(from._internal_w1());
  }
  if (from.w2().size() > 0) {
    _internal_set_w2(from._internal_w2());
  }
  if (from.v().size() > 0) {
    _internal_set_v(from._internal_v());
  }
}

void NoSmallFactorProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.NoSmallFactorProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NoSmallFactorProof::CopyFrom(const NoSmallFactorProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.NoSmallFactorProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NoSmallFactorProof::IsInitialized() const {
  return true;
}

void NoSmallFactorProof::InternalSwap(NoSmallFactorProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  p_.Swap(&other->p_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  q_.Swap(&other->q_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  a_.Swap(&other->a_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  b_.Swap(&other->b_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  t_.Swap(&other->t_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sigma_.Swap(&other->sigma_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z1_.Swap(&other->z1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z2_.Swap(&other->z2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w1_.Swap(&other->w1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w2_.Swap(&other->w2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  v_.Swap(&other->v_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata NoSmallFactorProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailBlumModulusProof::_Internal {
 public:
};

PailBlumModulusProof::PailBlumModulusProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  x_arr_(arena),
  a_arr_(arena),
  b_arr_(arena),
  z_arr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailBlumModulusProof)
}
PailBlumModulusProof::PailBlumModulusProof(const PailBlumModulusProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      x_arr_(from.x_arr_),
      a_arr_(from.a_arr_),
      b_arr_(from.b_arr_),
      z_arr_(from.z_arr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailBlumModulusProof)
}

void PailBlumModulusProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailBlumModulusProof_zkp_2eproto.base);
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PailBlumModulusProof::~PailBlumModulusProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailBlumModulusProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailBlumModulusProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PailBlumModulusProof::ArenaDtor(void* object) {
  PailBlumModulusProof* _this = reinterpret_cast< PailBlumModulusProof* >(object);
  (void)_this;
}
void PailBlumModulusProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailBlumModulusProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailBlumModulusProof& PailBlumModulusProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailBlumModulusProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailBlumModulusProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailBlumModulusProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_arr_.Clear();
  a_arr_.Clear();
  b_arr_.Clear();
  z_arr_.Clear();
  w_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailBlumModulusProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string x_arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_x_arr();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailBlumModulusProof.x_arr"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated int32 a_arr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_a_arr(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_a_arr(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 b_arr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_b_arr(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_b_arr(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string z_arr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_z_arr();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailBlumModulusProof.z_arr"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string w = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailBlumModulusProof.w"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailBlumModulusProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailBlumModulusProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string x_arr = 1;
  for (int i = 0, n = this->_internal_x_arr_size(); i < n; i++) {
    const auto& s = this->_internal_x_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailBlumModulusProof.x_arr");
    target = stream->WriteString(1, s, target);
  }

  // repeated int32 a_arr = 2;
  {
    int byte_size = _a_arr_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_a_arr(), byte_size, target);
    }
  }

  // repeated int32 b_arr = 3;
  {
    int byte_size = _b_arr_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_b_arr(), byte_size, target);
    }
  }

  // repeated string z_arr = 4;
  for (int i = 0, n = this->_internal_z_arr_size(); i < n; i++) {
    const auto& s = this->_internal_z_arr(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailBlumModulusProof.z_arr");
    target = stream->WriteString(4, s, target);
  }

  // string w = 5;
  if (this->w().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailBlumModulusProof.w");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_w(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailBlumModulusProof)
  return target;
}

size_t PailBlumModulusProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailBlumModulusProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string x_arr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(x_arr_.size());
  for (int i = 0, n = x_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      x_arr_.Get(i));
  }

  // repeated int32 a_arr = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->a_arr_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _a_arr_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 b_arr = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->b_arr_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _b_arr_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string z_arr = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(z_arr_.size());
  for (int i = 0, n = z_arr_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      z_arr_.Get(i));
  }

  // string w = 5;
  if (this->w().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailBlumModulusProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailBlumModulusProof)
  GOOGLE_DCHECK_NE(&from, this);
  const PailBlumModulusProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailBlumModulusProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailBlumModulusProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailBlumModulusProof)
    MergeFrom(*source);
  }
}

void PailBlumModulusProof::MergeFrom(const PailBlumModulusProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailBlumModulusProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  x_arr_.MergeFrom(from.x_arr_);
  a_arr_.MergeFrom(from.a_arr_);
  b_arr_.MergeFrom(from.b_arr_);
  z_arr_.MergeFrom(from.z_arr_);
  if (from.w().size() > 0) {
    _internal_set_w(from._internal_w());
  }
}

void PailBlumModulusProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailBlumModulusProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailBlumModulusProof::CopyFrom(const PailBlumModulusProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailBlumModulusProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailBlumModulusProof::IsInitialized() const {
  return true;
}

void PailBlumModulusProof::InternalSwap(PailBlumModulusProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  x_arr_.InternalSwap(&other->x_arr_);
  a_arr_.InternalSwap(&other->a_arr_);
  b_arr_.InternalSwap(&other->b_arr_);
  z_arr_.InternalSwap(&other->z_arr_);
  w_.Swap(&other->w_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PailBlumModulusProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailDecModuloProof::_Internal {
 public:
};

PailDecModuloProof::PailDecModuloProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailDecModuloProof)
}
PailDecModuloProof::PailDecModuloProof(const PailDecModuloProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s(), 
      GetArena());
  }
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_t().empty()) {
    t_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_t(), 
      GetArena());
  }
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_a().empty()) {
    a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_a(), 
      GetArena());
  }
  gamma_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_gamma().empty()) {
    gamma_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gamma(), 
      GetArena());
  }
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z1().empty()) {
    z1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z1(), 
      GetArena());
  }
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z2().empty()) {
    z2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z2(), 
      GetArena());
  }
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailDecModuloProof)
}

void PailDecModuloProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailDecModuloProof_zkp_2eproto.base);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gamma_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PailDecModuloProof::~PailDecModuloProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailDecModuloProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailDecModuloProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  t_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  a_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gamma_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PailDecModuloProof::ArenaDtor(void* object) {
  PailDecModuloProof* _this = reinterpret_cast< PailDecModuloProof* >(object);
  (void)_this;
}
void PailDecModuloProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailDecModuloProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailDecModuloProof& PailDecModuloProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailDecModuloProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailDecModuloProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailDecModuloProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmpty();
  t_.ClearToEmpty();
  a_.ClearToEmpty();
  gamma_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  w_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailDecModuloProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string S = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.S"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string T = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_t();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.T"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string A = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_a();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.A"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string gamma = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_gamma();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.gamma"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_z1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.z1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_z2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.z2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailDecModuloProof.w"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailDecModuloProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailDecModuloProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string S = 1;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.S");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_s(), target);
  }

  // string T = 2;
  if (this->t().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_t().data(), static_cast<int>(this->_internal_t().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.T");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_t(), target);
  }

  // string A = 3;
  if (this->a().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.A");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_a(), target);
  }

  // string gamma = 4;
  if (this->gamma().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gamma().data(), static_cast<int>(this->_internal_gamma().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.gamma");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_gamma(), target);
  }

  // string z1 = 5;
  if (this->z1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.z1");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_z1(), target);
  }

  // string z2 = 6;
  if (this->z2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.z2");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_z2(), target);
  }

  // string w = 7;
  if (this->w().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailDecModuloProof.w");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_w(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailDecModuloProof)
  return target;
}

size_t PailDecModuloProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailDecModuloProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string S = 1;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string T = 2;
  if (this->t().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_t());
  }

  // string A = 3;
  if (this->a().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string gamma = 4;
  if (this->gamma().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gamma());
  }

  // string z1 = 5;
  if (this->z1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 6;
  if (this->z2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string w = 7;
  if (this->w().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailDecModuloProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailDecModuloProof)
  GOOGLE_DCHECK_NE(&from, this);
  const PailDecModuloProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailDecModuloProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailDecModuloProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailDecModuloProof)
    MergeFrom(*source);
  }
}

void PailDecModuloProof::MergeFrom(const PailDecModuloProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailDecModuloProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
  if (from.t().size() > 0) {
    _internal_set_t(from._internal_t());
  }
  if (from.a().size() > 0) {
    _internal_set_a(from._internal_a());
  }
  if (from.gamma().size() > 0) {
    _internal_set_gamma(from._internal_gamma());
  }
  if (from.z1().size() > 0) {
    _internal_set_z1(from._internal_z1());
  }
  if (from.z2().size() > 0) {
    _internal_set_z2(from._internal_z2());
  }
  if (from.w().size() > 0) {
    _internal_set_w(from._internal_w());
  }
}

void PailDecModuloProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailDecModuloProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailDecModuloProof::CopyFrom(const PailDecModuloProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailDecModuloProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailDecModuloProof::IsInitialized() const {
  return true;
}

void PailDecModuloProof::InternalSwap(PailDecModuloProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  t_.Swap(&other->t_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  a_.Swap(&other->a_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  gamma_.Swap(&other->gamma_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z1_.Swap(&other->z1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z2_.Swap(&other->z2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w_.Swap(&other->w_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PailDecModuloProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailEncMulProof::_Internal {
 public:
};

PailEncMulProof::PailEncMulProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailEncMulProof)
}
PailEncMulProof::PailEncMulProof(const PailEncMulProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_a().empty()) {
    a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_a(), 
      GetArena());
  }
  b_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_b().empty()) {
    b_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_b(), 
      GetArena());
  }
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z().empty()) {
    z_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z(), 
      GetArena());
  }
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_u().empty()) {
    u_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_u(), 
      GetArena());
  }
  v_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_v().empty()) {
    v_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_v(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailEncMulProof)
}

void PailEncMulProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailEncMulProof_zkp_2eproto.base);
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  b_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PailEncMulProof::~PailEncMulProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailEncMulProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailEncMulProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  a_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  b_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  u_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PailEncMulProof::ArenaDtor(void* object) {
  PailEncMulProof* _this = reinterpret_cast< PailEncMulProof* >(object);
  (void)_this;
}
void PailEncMulProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailEncMulProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailEncMulProof& PailEncMulProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailEncMulProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailEncMulProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailEncMulProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  a_.ClearToEmpty();
  b_.ClearToEmpty();
  z_.ClearToEmpty();
  u_.ClearToEmpty();
  v_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailEncMulProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string A = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_a();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncMulProof.A"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string B = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_b();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncMulProof.B"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_z();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncMulProof.z"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_u();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncMulProof.u"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string v = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_v();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailEncMulProof.v"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailEncMulProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailEncMulProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string A = 1;
  if (this->a().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncMulProof.A");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_a(), target);
  }

  // string B = 2;
  if (this->b().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_b().data(), static_cast<int>(this->_internal_b().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncMulProof.B");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_b(), target);
  }

  // string z = 3;
  if (this->z().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z().data(), static_cast<int>(this->_internal_z().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncMulProof.z");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_z(), target);
  }

  // string u = 4;
  if (this->u().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u().data(), static_cast<int>(this->_internal_u().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncMulProof.u");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_u(), target);
  }

  // string v = 5;
  if (this->v().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_v().data(), static_cast<int>(this->_internal_v().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailEncMulProof.v");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_v(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailEncMulProof)
  return target;
}

size_t PailEncMulProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailEncMulProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string A = 1;
  if (this->a().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string B = 2;
  if (this->b().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_b());
  }

  // string z = 3;
  if (this->z().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z());
  }

  // string u = 4;
  if (this->u().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_u());
  }

  // string v = 5;
  if (this->v().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_v());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailEncMulProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailEncMulProof)
  GOOGLE_DCHECK_NE(&from, this);
  const PailEncMulProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailEncMulProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailEncMulProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailEncMulProof)
    MergeFrom(*source);
  }
}

void PailEncMulProof::MergeFrom(const PailEncMulProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailEncMulProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.a().size() > 0) {
    _internal_set_a(from._internal_a());
  }
  if (from.b().size() > 0) {
    _internal_set_b(from._internal_b());
  }
  if (from.z().size() > 0) {
    _internal_set_z(from._internal_z());
  }
  if (from.u().size() > 0) {
    _internal_set_u(from._internal_u());
  }
  if (from.v().size() > 0) {
    _internal_set_v(from._internal_v());
  }
}

void PailEncMulProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailEncMulProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailEncMulProof::CopyFrom(const PailEncMulProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailEncMulProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailEncMulProof::IsInitialized() const {
  return true;
}

void PailEncMulProof::InternalSwap(PailEncMulProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  a_.Swap(&other->a_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  b_.Swap(&other->b_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z_.Swap(&other->z_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  u_.Swap(&other->u_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  v_.Swap(&other->v_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PailEncMulProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PailMulGroupEleRangeProof::_Internal {
 public:
  static const ::safeheron::proto::CurvePoint& b(const PailMulGroupEleRangeProof* msg);
};

const ::safeheron::proto::CurvePoint&
PailMulGroupEleRangeProof::_Internal::b(const PailMulGroupEleRangeProof* msg) {
  return *msg->b_;
}
void PailMulGroupEleRangeProof::clear_b() {
  if (GetArena() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
}
PailMulGroupEleRangeProof::PailMulGroupEleRangeProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:safeheron.proto.PailMulGroupEleRangeProof)
}
PailMulGroupEleRangeProof::PailMulGroupEleRangeProof(const PailMulGroupEleRangeProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_a().empty()) {
    a_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_a(), 
      GetArena());
  }
  e_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_e().empty()) {
    e_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_e(), 
      GetArena());
  }
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s(), 
      GetArena());
  }
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z1().empty()) {
    z1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z1(), 
      GetArena());
  }
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_z2().empty()) {
    z2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_z2(), 
      GetArena());
  }
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArena());
  }
  if (from._internal_has_b()) {
    b_ = new ::safeheron::proto::CurvePoint(*from.b_);
  } else {
    b_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:safeheron.proto.PailMulGroupEleRangeProof)
}

void PailMulGroupEleRangeProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PailMulGroupEleRangeProof_zkp_2eproto.base);
  a_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  e_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  b_ = nullptr;
}

PailMulGroupEleRangeProof::~PailMulGroupEleRangeProof() {
  // @@protoc_insertion_point(destructor:safeheron.proto.PailMulGroupEleRangeProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PailMulGroupEleRangeProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  a_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  e_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  z2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete b_;
}

void PailMulGroupEleRangeProof::ArenaDtor(void* object) {
  PailMulGroupEleRangeProof* _this = reinterpret_cast< PailMulGroupEleRangeProof* >(object);
  (void)_this;
}
void PailMulGroupEleRangeProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PailMulGroupEleRangeProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PailMulGroupEleRangeProof& PailMulGroupEleRangeProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PailMulGroupEleRangeProof_zkp_2eproto.base);
  return *internal_default_instance();
}


void PailMulGroupEleRangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:safeheron.proto.PailMulGroupEleRangeProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  a_.ClearToEmpty();
  e_.ClearToEmpty();
  s_.ClearToEmpty();
  z1_.ClearToEmpty();
  z2_.ClearToEmpty();
  w_.ClearToEmpty();
  if (GetArena() == nullptr && b_ != nullptr) {
    delete b_;
  }
  b_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PailMulGroupEleRangeProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string A = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_a();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.A"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .safeheron.proto.CurvePoint B = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_b(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string E = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_e();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.E"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string S = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.S"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_z1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.z1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string z2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_z2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.z2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string w = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "safeheron.proto.PailMulGroupEleRangeProof.w"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PailMulGroupEleRangeProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:safeheron.proto.PailMulGroupEleRangeProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string A = 1;
  if (this->a().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_a().data(), static_cast<int>(this->_internal_a().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.A");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_a(), target);
  }

  // .safeheron.proto.CurvePoint B = 2;
  if (this->has_b()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::b(this), target, stream);
  }

  // string E = 3;
  if (this->e().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_e().data(), static_cast<int>(this->_internal_e().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.E");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_e(), target);
  }

  // string S = 4;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.S");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_s(), target);
  }

  // string z1 = 5;
  if (this->z1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z1().data(), static_cast<int>(this->_internal_z1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.z1");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_z1(), target);
  }

  // string z2 = 6;
  if (this->z2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_z2().data(), static_cast<int>(this->_internal_z2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.z2");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_z2(), target);
  }

  // string w = 7;
  if (this->w().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_w().data(), static_cast<int>(this->_internal_w().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "safeheron.proto.PailMulGroupEleRangeProof.w");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_w(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:safeheron.proto.PailMulGroupEleRangeProof)
  return target;
}

size_t PailMulGroupEleRangeProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:safeheron.proto.PailMulGroupEleRangeProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string A = 1;
  if (this->a().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_a());
  }

  // string E = 3;
  if (this->e().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_e());
  }

  // string S = 4;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  // string z1 = 5;
  if (this->z1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z1());
  }

  // string z2 = 6;
  if (this->z2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_z2());
  }

  // string w = 7;
  if (this->w().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_w());
  }

  // .safeheron.proto.CurvePoint B = 2;
  if (this->has_b()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *b_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PailMulGroupEleRangeProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:safeheron.proto.PailMulGroupEleRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  const PailMulGroupEleRangeProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PailMulGroupEleRangeProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:safeheron.proto.PailMulGroupEleRangeProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:safeheron.proto.PailMulGroupEleRangeProof)
    MergeFrom(*source);
  }
}

void PailMulGroupEleRangeProof::MergeFrom(const PailMulGroupEleRangeProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safeheron.proto.PailMulGroupEleRangeProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.a().size() > 0) {
    _internal_set_a(from._internal_a());
  }
  if (from.e().size() > 0) {
    _internal_set_e(from._internal_e());
  }
  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
  if (from.z1().size() > 0) {
    _internal_set_z1(from._internal_z1());
  }
  if (from.z2().size() > 0) {
    _internal_set_z2(from._internal_z2());
  }
  if (from.w().size() > 0) {
    _internal_set_w(from._internal_w());
  }
  if (from.has_b()) {
    _internal_mutable_b()->::safeheron::proto::CurvePoint::MergeFrom(from._internal_b());
  }
}

void PailMulGroupEleRangeProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:safeheron.proto.PailMulGroupEleRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PailMulGroupEleRangeProof::CopyFrom(const PailMulGroupEleRangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safeheron.proto.PailMulGroupEleRangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PailMulGroupEleRangeProof::IsInitialized() const {
  return true;
}

void PailMulGroupEleRangeProof::InternalSwap(PailMulGroupEleRangeProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  a_.Swap(&other->a_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  e_.Swap(&other->e_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z1_.Swap(&other->z1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  z2_.Swap(&other->z2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  w_.Swap(&other->w_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(b_, other->b_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PailMulGroupEleRangeProof::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace safeheron
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::safeheron::proto::DLogProof* Arena::CreateMaybeMessage< ::safeheron::proto::DLogProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::DLogProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::DLogProof_V2* Arena::CreateMaybeMessage< ::safeheron::proto::DLogProof_V2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::DLogProof_V2 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::HegProof* Arena::CreateMaybeMessage< ::safeheron::proto::HegProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::HegProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::HEGProof_V2* Arena::CreateMaybeMessage< ::safeheron::proto::HEGProof_V2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::HEGProof_V2 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::LinearCombinationProof* Arena::CreateMaybeMessage< ::safeheron::proto::LinearCombinationProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::LinearCombinationProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::HEGProof_V3* Arena::CreateMaybeMessage< ::safeheron::proto::HEGProof_V3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::HEGProof_V3 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailProof* Arena::CreateMaybeMessage< ::safeheron::proto::PailProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailNProof* Arena::CreateMaybeMessage< ::safeheron::proto::PailNProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailNProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::AliceRangeProof* Arena::CreateMaybeMessage< ::safeheron::proto::AliceRangeProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::AliceRangeProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::RingPedersenParamPub* Arena::CreateMaybeMessage< ::safeheron::proto::RingPedersenParamPub >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::RingPedersenParamPub >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::RingPedersenParamPriv* Arena::CreateMaybeMessage< ::safeheron::proto::RingPedersenParamPriv >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::RingPedersenParamPriv >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::DLNProof* Arena::CreateMaybeMessage< ::safeheron::proto::DLNProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::DLNProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::TwoDLNProof* Arena::CreateMaybeMessage< ::safeheron::proto::TwoDLNProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::TwoDLNProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PedersenProof* Arena::CreateMaybeMessage< ::safeheron::proto::PedersenProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PedersenProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncRangeProof_V3_Z* Arena::CreateMaybeMessage< ::safeheron::proto::PailEncRangeProof_V3_Z >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncRangeProof_V3_Z >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncRangeProof_V3* Arena::CreateMaybeMessage< ::safeheron::proto::PailEncRangeProof_V3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncRangeProof_V3 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncRangeProof_V1* Arena::CreateMaybeMessage< ::safeheron::proto::PailEncRangeProof_V1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncRangeProof_V1 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncRangeProof_V2* Arena::CreateMaybeMessage< ::safeheron::proto::PailEncRangeProof_V2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncRangeProof_V2 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncGroupEleRangeProof* Arena::CreateMaybeMessage< ::safeheron::proto::PailEncGroupEleRangeProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncGroupEleRangeProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailAffRangeProof* Arena::CreateMaybeMessage< ::safeheron::proto::PailAffRangeProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailAffRangeProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailAffGroupEleRangeProof_V1* Arena::CreateMaybeMessage< ::safeheron::proto::PailAffGroupEleRangeProof_V1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailAffGroupEleRangeProof_V1 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailAffGroupEleRangeProof_V2* Arena::CreateMaybeMessage< ::safeheron::proto::PailAffGroupEleRangeProof_V2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailAffGroupEleRangeProof_V2 >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::DlogEqualityProof* Arena::CreateMaybeMessage< ::safeheron::proto::DlogEqualityProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::DlogEqualityProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::DlogElGamalComProof* Arena::CreateMaybeMessage< ::safeheron::proto::DlogElGamalComProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::DlogElGamalComProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncElGamalComRangeProof* Arena::CreateMaybeMessage< ::safeheron::proto::PailEncElGamalComRangeProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncElGamalComRangeProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::NoSmallFactorProof* Arena::CreateMaybeMessage< ::safeheron::proto::NoSmallFactorProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::NoSmallFactorProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailBlumModulusProof* Arena::CreateMaybeMessage< ::safeheron::proto::PailBlumModulusProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailBlumModulusProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailDecModuloProof* Arena::CreateMaybeMessage< ::safeheron::proto::PailDecModuloProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailDecModuloProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailEncMulProof* Arena::CreateMaybeMessage< ::safeheron::proto::PailEncMulProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailEncMulProof >(arena);
}
template<> PROTOBUF_NOINLINE ::safeheron::proto::PailMulGroupEleRangeProof* Arena::CreateMaybeMessage< ::safeheron::proto::PailMulGroupEleRangeProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::safeheron::proto::PailMulGroupEleRangeProof >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
